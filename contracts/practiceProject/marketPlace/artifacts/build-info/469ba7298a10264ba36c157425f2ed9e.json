{
	"id": "469ba7298a10264ba36c157425f2ed9e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/practiceProject/marketPlace/marketplace2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IConnected {\n    // Struct to encapsulate detailed information about an NFT, used for easy data retrieval.\n     struct NFT { \n        uint256 tokenId;    \n        uint256 count;\n        string uri;\n        uint mintTime;        \n        bool minted;\n    }\n\n    // Functions to be implemented by connected contracts for updating and retrieving NFT data\n    function updateTokenId(address _to,uint _tokenId,address seller) external;\n    function getTokenId(address _to) external view returns(NFT[] memory);\n    function getTokenUri(uint _tokenId) external view returns(string memory);\n\n}\n\n\n\n\n\ncontract NFTMarketplace is ReentrancyGuard, Ownable{\n    using Counters for Counters.Counter;\n    using SafeERC20 for IERC20;\n    Counters.Counter public nextLandListId;       // Counter for LandNFTs listed in marketplace\n\n    IERC721 public landContract;\n\n    uint public totalLockedNft;\n    address public immutable tokenAddress;\n    uint public startTime;\n    uint public endTime;\n\n    struct ListLand {\n        address owner;\n        address seller;\n        uint256 tokenId;\n        uint256 count;\n        uint256 price;\n        bool listed;\n    \n    } \n\n    struct NftDetails{ \n        uint TokenId;\n        address stakerAddress; \n        address currentOwnerAddress; \n        uint userWithdrawToken;\n        uint withdrawMonth;\n        uint stakeTime;\n        bool isActive;\n    }\n\n\n    struct AddressToken {\n        address contractAddress;\n        uint tokenId;\n        uint amount;\n    }\n\n    struct Address_Token {\n        address contractAddress;\n        uint tokenId;\n    }\n\n    struct ListedLandNftTokenId {\n        ListLand listedData;          // The direct sale listing data for the NFT.\n        uint listCount;          // A count or ID similar to `ListTokenId`.\n        string uriData;          // URI for the NFT metadata.\n    }\n\n\n  \n    mapping(uint256 => Address_Token) public listCount;\n    mapping(address => uint256) public userCount;\n    mapping(uint => uint) public userListCount; \n    mapping(uint => NftDetails) public lockedNFT;                                 //// Mapping to store details of all locked NFTs\n    mapping(uint => AddressToken) public auctionListCount;                        // Maps auction indices to address and token ID pairs\n    mapping (address mintAddress => mapping (uint tokedId => NftDetails)) public NftSupply;\n    mapping (address => mapping (uint =>uint)) public rewardAmount;\n    mapping(address => mapping(uint256 => ListLand)) public userLandListings;\n     \n     /**\n     * @dev Ensures conditions to lock an NFT are met:\n     * - Vesting period must have started and not ended.\n     * - The NFT must not be already staked.\n     * @param tokenId The unique identifier of the NFT.\n     */\n    modifier lockConditions(uint tokenId) {\n        require(startTime != endTime ,\"Please wait...\");\n        require(startTime < block.timestamp, \"Time Not Start...\"); // Vesting must have started\n        require(endTime > block.timestamp, \"Time End.\"); // Vesting must not have ended\n        require(!lockedNFT[tokenId].isActive, \"Already Staked\"); // Must not be staked\n        _;\n    }\n    /**\n     * @dev Ensures conditions to unlock an NFT are met:\n     * - Vesting period must not have ended.\n     * - Caller must be the staker of the NFT.\n     * - The NFT must be currently staked.\n     * @param tokenId The unique identifier of the NFT.\n     */\n    modifier unlockConditions(uint tokenId, address stakerAddress) {\n        require(endTime < block.timestamp, \"Please wait...\"); // Vesting must not have ended\n        require(lockedNFT[tokenId].stakerAddress == stakerAddress, \"You are not owner of this NFT.\"); // Must be staker\n        require(lockedNFT[tokenId].isActive, \"NOT LOCKED.\"); // Must be staked\n        _;\n    }\n    constructor(address initialOwner, IERC721 _landMinting,address _USDCAddress) Ownable(initialOwner) {\n        landContract = _landMinting;\n        tokenAddress= _USDCAddress;\n    }\n\n    function listLandNft(address _mintContract, uint256 _price, uint256 _tokenId) public nonReentrant {\n        require(!userLandListings[_mintContract][_tokenId].listed, \"Already Listed In Marketplace!\");\n        require(!NftSupply[_mintContract][_tokenId].isActive,\"NFT already staked\");\n        require(_price >= 0, \"Price Must Be At Least 0 Wei\");\n        nextLandListId.increment();\n        userLandListings[_mintContract][_tokenId] = ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true);\n        listCount[nextLandListId.current()] = Address_Token(_mintContract, _tokenId);\n        ERC721(_mintContract).transferFrom(msg.sender, address(this), _tokenId); \n        userCount[msg.sender]++;\n    }  \n\n    function buyLandNft(uint256 listIndex, uint256 price) external payable nonReentrant {\n        require(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner != msg.sender, \"Owner Can't Buy Its Nfts\");\n        require(price >= userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price, \"Not enough ether to cover asking price\");\n        uint sellerAmount = userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price;\n        payable(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner).transfer(sellerAmount);\n        ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId);\n        IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller);\n        userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed = false;\n        delete listCount[nextLandListId.current()];\n        nextLandListId.decrement();\n    }\n\n\n    /**\n     * @dev Sets the vesting period.\n     * Configures the start and end times for the vesting period.\n     * @param start The start time of the vesting period.\n     * @param end The end time of the vesting period.\n     */\n    function stakingPeriod(uint start, uint end) public onlyOwner {\n        startTime = start;\n        endTime = end;\n    }\n\n   /**\n     * @dev Locks NFT.\n     * @param stakerAddress The address of the staker.\n     * @param tokenId The unique identifier of the NFT.\n     */\n    function stakeNFT(address mintContract, address stakerAddress, uint tokenId) public lockConditions(tokenId)\n    {\n        lockedNFT[tokenId] = NftDetails(tokenId, stakerAddress, address(this), 0, 0, block.timestamp, true);\n        totalLockedNft++;\n        ERC721(mintContract).transferFrom(stakerAddress, address(this), tokenId);\n    }\n\n    /**\n     * @dev Unlocks NFT.\n     * Unlocks the specified Starlight NFT by transferring it back to the staker.\n     * @param stakerAddress The address of the staker.\n     * @param tokenId The unique identifier of the NFT.\n     */\n    function unStakeNFT(address mintContract , address stakerAddress, uint tokenId) public unlockConditions(tokenId, stakerAddress) {\n        lockedNFT[tokenId].isActive = false;\n        totalLockedNft--;\n        ERC721(mintContract).transferFrom(address(this), stakerAddress, tokenId);\n    }\n\n /**\n     * @dev Allows users to claim their earned tokens based on the locked NFT.\n     * Users can claim their rewards based on the category of their locked NFT.\n     * @param userAddress The address of the user.\n     * @param tokenId The unique identifier of the NFT.\n     */\n    function userClaimFT(address userAddress, uint tokenId) public {\n        (uint reward, uint month) = user_Staking_Rewards(tokenId);\n        require(month != 0, \"Please wait...\");\n        require(lockedNFT[tokenId].withdrawMonth != 12,\"You have claimed your all rewards according to this NFT...\");\n        if (lockedNFT[tokenId].withdrawMonth + month < 12) {\n            lockedNFT[tokenId].withdrawMonth += month;\n            lockedNFT[tokenId].userWithdrawToken += (reward * month);\n            IERC20(tokenAddress).safeTransfer(userAddress, (reward * month));\n        } else {\n            uint remainingMonth = (12 - lockedNFT[tokenId].withdrawMonth);\n            lockedNFT[tokenId].withdrawMonth += remainingMonth;\n            lockedNFT[tokenId].userWithdrawToken += (reward * remainingMonth);\n            IERC20(tokenAddress).safeTransfer(userAddress, (reward * remainingMonth));\n        }\n    }\n   \n    /**\n     * @dev Calculates user rewards based on the time and category of the NFT.\n     * Calculates the rewards and the number of months the user can claim.\n     * @param tokenId The unique identifier of the NFT.\n     * @return rewards The calculated rewards.\n     * @return month The number of months the user can claim rewards for.\n     */\n    function user_Staking_Rewards(uint tokenId) public view returns (uint rewards, uint month) {\n        if (((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) >= 60) {\n            uint months = ((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) / 60;\n            uint reward = (1 * months);\n            return (reward, months);\n        } else {\n            return (0,0);\n        }\n    }\n\n    function adminDepositToken(address adminAddress, uint tokenDeposit) public onlyOwner{ \n        IERC20(tokenAddress).safeTransferFrom(adminAddress, address(this), tokenDeposit);\n    }\n\n    function adminWithdrawToken(address adminAddress, uint tokenDeposit) public onlyOwner{ \n        IERC20(tokenAddress).safeTransferFrom( address(this), adminAddress, tokenDeposit);\n    }\n\n    \n    function getAllLandListedNfts() public view returns (ListedLandNftTokenId[] memory) {\n        uint listNft = nextLandListId.current();\n        ListedLandNftTokenId[] memory listedNFT = new ListedLandNftTokenId[](listNft);\n        uint listedIndex = 0;\n        for (uint i = 1; i <= nextLandListId.current() ; i++) {\n            if (userLandListings[listCount[i].contractAddress][listCount[i].tokenId].listed) {\n                listedNFT[listedIndex] = ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId));\n                listedIndex++;\n            }\n        }\n        return (listedNFT);\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EQ PUSH21 0xD0F036666C1A9C4DAF464C4FDFF54A3AC1F642298F 0xBB CREATE2 DUP11 CALLDATACOPY PUSH4 0xB121A364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EQ PUSH21 0xD0F036666C1A9C4DAF464C4FDFF54A3AC1F642298F 0xBB CREATE2 DUP11 CALLDATACOPY PUSH4 0xB121A364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 786,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 788,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 796,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 800,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 806,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 CALLER PUSH21 0x870D60E717CE6A98F3E0BCC2F212AE3C9B4AB4024B 0xE4 0xE4 PUSH9 0xCDBF267EC564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 CALLER PUSH21 0x870D60E717CE6A98F3E0BCC2F212AE3C9B4AB4024B 0xE4 0xE4 PUSH9 0xCDBF267EC564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDB BLOCKHASH ADDRESS 0xCF 0x2E CALLVALUE 0xE SHL 0xF9 0xE6 GASPRICE PUSH6 0x810BBC350504 BLOBBASEFEE 0xB2 AND CALLDATACOPY 0xD3 0x4E PUSH0 0x4E SIGNEXTEND SWAP6 0xCA 0xBF EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDB BLOCKHASH ADDRESS 0xCF 0x2E CALLVALUE 0xE SHL 0xF9 0xE6 GASPRICE PUSH6 0x810BBC350504 BLOBBASEFEE 0xB2 AND CALLDATACOPY 0xD3 0x4E PUSH0 0x4E SIGNEXTEND SWAP6 0xCA 0xBF EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xB1 0xCB CALLVALUE XOR 0xEF CODECOPY 0x29 DUP4 0xCC LOG1 0xCB PUSH9 0x45FA77B14A7C379E19 PUSH12 0x4B23D16A9F983969A164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xB1 0xCB CALLVALUE XOR 0xEF CODECOPY 0x29 DUP4 0xCC LOG1 0xCB PUSH9 0x45FA77B14A7C379E19 PUSH12 0x4B23D16A9F983969A164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURNDATASIZE 0x26 CALLDATASIZE 0xAC PUSH11 0x656BCDDE4F25E6C5815BEC 0xEE JUMPI DUP3 0xFC DUP2 TIMESTAMP 0xB3 0xE4 DUP14 0xF SWAP13 BALANCE 0xF8 0x21 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURNDATASIZE 0x26 CALLDATASIZE 0xAC PUSH11 0x656BCDDE4F25E6C5815BEC 0xEE JUMPI DUP3 0xFC DUP2 TIMESTAMP 0xB3 0xE4 DUP14 0xF SWAP13 BALANCE 0xF8 0x21 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/practiceProject/marketPlace/marketplace2.sol": {
				"IConnected": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "getTokenId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "count",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "uri",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "mintTime",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "minted",
											"type": "bool"
										}
									],
									"internalType": "struct IConnected.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenUri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"name": "updateTokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTokenId(address)": "f1537686",
							"getTokenUri(uint256)": "8ad91345",
							"updateTokenId(address,uint256,address)": "6e0cee09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mintTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"}],\"internalType\":\"struct IConnected.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"updateTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/practiceProject/marketPlace/marketplace2.sol\":\"IConnected\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/practiceProject/marketPlace/marketplace2.sol\":{\"keccak256\":\"0x74f2121b38d6b24b3b5fa5979d9577378e0d3b8bc788c3e9d0b05a4fdb49286a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503a4377f0baab5d38e5e6c386f0df8db71fcfaa485f9581cd24647c7b477b10\",\"dweb:/ipfs/QmacvsZkRa7YtQ2NPadVPR16PH3Dgxo1aBK1qWX23W1Ydv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC721",
									"name": "_landMinting",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_USDCAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokedId",
									"type": "uint256"
								}
							],
							"name": "NftSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "TokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "stakerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currentOwnerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "userWithdrawToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawMonth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakeTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adminAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenDeposit",
									"type": "uint256"
								}
							],
							"name": "adminDepositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adminAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenDeposit",
									"type": "uint256"
								}
							],
							"name": "adminWithdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "auctionListCount",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "buyLandNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllLandListedNfts",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "owner",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "seller",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "tokenId",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "count",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "price",
													"type": "uint256"
												},
												{
													"internalType": "bool",
													"name": "listed",
													"type": "bool"
												}
											],
											"internalType": "struct NFTMarketplace.ListLand",
											"name": "listedData",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "listCount",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "uriData",
											"type": "string"
										}
									],
									"internalType": "struct NFTMarketplace.ListedLandNftTokenId[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "landContract",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listCount",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mintContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "listLandNft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lockedNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "TokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "stakerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currentOwnerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "userWithdrawToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawMonth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakeTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextLandListId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stakerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "stakingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLockedNft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stakerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unStakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "userClaimFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userLandListings",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "listed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userListCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "user_Staking_Rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stakeNFT(address,address,uint256)": {
								"details": "Locks NFT.",
								"params": {
									"stakerAddress": "The address of the staker.",
									"tokenId": "The unique identifier of the NFT."
								}
							},
							"stakingPeriod(uint256,uint256)": {
								"details": "Sets the vesting period. Configures the start and end times for the vesting period.",
								"params": {
									"end": "The end time of the vesting period.",
									"start": "The start time of the vesting period."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unStakeNFT(address,address,uint256)": {
								"details": "Unlocks NFT. Unlocks the specified Starlight NFT by transferring it back to the staker.",
								"params": {
									"stakerAddress": "The address of the staker.",
									"tokenId": "The unique identifier of the NFT."
								}
							},
							"userClaimFT(address,uint256)": {
								"details": "Allows users to claim their earned tokens based on the locked NFT. Users can claim their rewards based on the category of their locked NFT.",
								"params": {
									"tokenId": "The unique identifier of the NFT.",
									"userAddress": "The address of the user."
								}
							},
							"user_Staking_Rewards(uint256)": {
								"details": "Calculates user rewards based on the time and category of the NFT. Calculates the rewards and the number of months the user can claim.",
								"params": {
									"tokenId": "The unique identifier of the NFT."
								},
								"returns": {
									"month": "The number of months the user can claim rewards for.",
									"rewards": "The calculated rewards."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":953:10681  contract NFTMarketplace is ReentrancyGuard, Ownable{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4138:4317  constructor(address initialOwner, IERC721 _landMinting,address _USDCAddress) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4223:4235  initialOwner */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":836:887   */\n  mstore\n    /* \"#utility.yul\":809:827   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4247:4259  landContract */\n  0x03\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4247:4274  landContract = _landMinting */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4284:4310  tokenAddress= _USDCAddress */\n  and\n  0x80\n  mstore\n  pop\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":953:10681  contract NFTMarketplace is ReentrancyGuard, Ownable{... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:145   */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_20:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:685   */\ntag_3:\n    /* \"#utility.yul\":254:260   */\n  0x00\n    /* \"#utility.yul\":262:268   */\n  dup1\n    /* \"#utility.yul\":270:276   */\n  0x00\n    /* \"#utility.yul\":323:325   */\n  0x60\n    /* \"#utility.yul\":311:320   */\n  dup5\n    /* \"#utility.yul\":302:309   */\n  dup7\n    /* \"#utility.yul\":298:321   */\n  sub\n    /* \"#utility.yul\":294:326   */\n  slt\n    /* \"#utility.yul\":291:343   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":339:340   */\n  0x00\n    /* \"#utility.yul\":336:337   */\n  dup1\n    /* \"#utility.yul\":329:341   */\n  revert\n    /* \"#utility.yul\":291:343   */\ntag_22:\n    /* \"#utility.yul\":371:380   */\n  dup4\n    /* \"#utility.yul\":365:381   */\n  mload\n    /* \"#utility.yul\":390:421   */\n  tag_23\n    /* \"#utility.yul\":415:420   */\n  dup2\n    /* \"#utility.yul\":390:421   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":490:492   */\n  0x20\n    /* \"#utility.yul\":475:493   */\n  dup6\n  add\n    /* \"#utility.yul\":469:494   */\n  mload\n    /* \"#utility.yul\":440:445   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":503:536   */\n  tag_24\n    /* \"#utility.yul\":469:494   */\n  dup2\n    /* \"#utility.yul\":503:536   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":607:609   */\n  0x40\n    /* \"#utility.yul\":592:610   */\n  dup6\n  add\n    /* \"#utility.yul\":586:611   */\n  mload\n    /* \"#utility.yul\":555:562   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":620:653   */\n  tag_25\n    /* \"#utility.yul\":586:611   */\n  dup2\n    /* \"#utility.yul\":620:653   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":672:679   */\n  dup1\n    /* \"#utility.yul\":662:679   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":150:685   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":690:893   */\ntag_18:\n    /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":953:10681  contract NFTMarketplace is ReentrancyGuard, Ownable{... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0a04e6add186e5970a92b636cc2d1eb4a5aa36722747a9009175901fc5250165\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":953:10681  contract NFTMarketplace is ReentrancyGuard, Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9158444b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xbb623d13\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd84c0fd3\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd84c0fd3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xec4b65e7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf0441f95\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xbb623d13\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc456fc9e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc85e4d49\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x9d76ea58\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa3480569\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb8237ab7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xba41c844\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x9158444b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9677ca0b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9d02e67c\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x716135c7\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x78e97925\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x84fccd5e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8d02f792\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x716135c7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x73233ea6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x772635ee\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x03d07340\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x19f34bf3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e903868\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x699d503a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1180:1207  IERC721 public landContract */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sload(0x03)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":194:226   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":176:227   */\n      dup2\n      mstore\n        /* \"#utility.yul\":164:166   */\n      0x20\n        /* \"#utility.yul\":149:167   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1180:1207  IERC721 public landContract */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7901:8799  function userClaimFT(address userAddress, uint tokenId) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2317:2359  mapping(uint => uint) public userListCount */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1098:1123   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1086:1088   */\n      0x20\n        /* \"#utility.yul\":1071:1089   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2317:2359  mapping(uint => uint) public userListCount */\n      tag_38\n        /* \"#utility.yul\":952:1129   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1316:1335  uint public endTime */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_46\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7328:7616  function unStakeNFT(address mintContract , address stakerAddress, uint tokenId) public unlockConditions(tokenId, stakerAddress) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_41\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_41\n      tag_63\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1083:1121  Counters.Counter public nextLandListId */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      sload(0x02)\n      tag_46\n      swap1\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2366:2410  mapping(uint => NftDetails) public lockedNFT */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_70:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      swap1\n      swap7\n      add\n      sload\n      swap5\n      swap6\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      swap6\n      swap5\n      swap1\n      swap4\n      and\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup8\n      jump\n    tag_69:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1822:1847   */\n      swap8\n      dup9\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1883:1915   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":1878:1880   */\n      0x20\n        /* \"#utility.yul\":1863:1881   */\n      dup10\n      add\n        /* \"#utility.yul\":1856:1916   */\n      mstore\n        /* \"#utility.yul\":1952:1984   */\n      swap5\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":1932:1950   */\n      swap4\n      dup7\n      add\n        /* \"#utility.yul\":1925:1985   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2016:2018   */\n      0x60\n        /* \"#utility.yul\":2001:2019   */\n      dup6\n      add\n        /* \"#utility.yul\":1994:2028   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2059:2062   */\n      0x80\n        /* \"#utility.yul\":2044:2063   */\n      dup5\n      add\n        /* \"#utility.yul\":2037:2072   */\n      mstore\n        /* \"#utility.yul\":1903:1906   */\n      0xa0\n        /* \"#utility.yul\":2088:2107   */\n      dup4\n      add\n        /* \"#utility.yul\":2081:2116   */\n      mstore\n        /* \"#utility.yul\":2160:2174   */\n      iszero\n        /* \"#utility.yul\":2153:2175   */\n      iszero\n        /* \"#utility.yul\":2147:2150   */\n      0xc0\n        /* \"#utility.yul\":2132:2151   */\n      dup3\n      add\n        /* \"#utility.yul\":2125:2176   */\n      mstore\n        /* \"#utility.yul\":1809:1812   */\n      0xe0\n        /* \"#utility.yul\":1794:1813   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2366:2410  mapping(uint => NftDetails) public lockedNFT */\n      tag_38\n        /* \"#utility.yul\":1513:2182   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1214:1240  uint public totalLockedNft */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_46\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1289:1310  uint public startTime */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_46\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2793:2865  mapping(address => mapping(uint256 => ListLand)) public userLandListings */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_84:\n      0x0e\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      swap6\n      swap4\n      swap1\n      swap5\n      and\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup7\n      jump\n    tag_83:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2486:2518   */\n      swap8\n      dup9\n      and\n        /* \"#utility.yul\":2468:2519   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2555:2587   */\n      swap7\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":2550:2552   */\n      0x20\n        /* \"#utility.yul\":2535:2553   */\n      dup8\n      add\n        /* \"#utility.yul\":2528:2588   */\n      mstore\n        /* \"#utility.yul\":2604:2622   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":2597:2631   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2662:2664   */\n      0x60\n        /* \"#utility.yul\":2647:2665   */\n      dup5\n      add\n        /* \"#utility.yul\":2640:2674   */\n      mstore\n        /* \"#utility.yul\":2705:2708   */\n      0x80\n        /* \"#utility.yul\":2690:2709   */\n      dup4\n      add\n        /* \"#utility.yul\":2683:2718   */\n      mstore\n        /* \"#utility.yul\":2762:2776   */\n      iszero\n        /* \"#utility.yul\":2755:2777   */\n      iszero\n        /* \"#utility.yul\":2506:2509   */\n      0xa0\n        /* \"#utility.yul\":2734:2753   */\n      dup3\n      add\n        /* \"#utility.yul\":2727:2778   */\n      mstore\n        /* \"#utility.yul\":2455:2458   */\n      0xc0\n        /* \"#utility.yul\":2440:2459   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2793:2865  mapping(address => mapping(uint256 => ListLand)) public userLandListings */\n      tag_38\n        /* \"#utility.yul\":2187:2784   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2211:2261  mapping(uint256 => Address_Token) public listCount */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_90:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\n    tag_89:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2981:3013   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2963:3014   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3045:3047   */\n      0x20\n        /* \"#utility.yul\":3030:3048   */\n      dup4\n      add\n        /* \"#utility.yul\":3023:3057   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2936:2954   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2211:2261  mapping(uint256 => Address_Token) public listCount */\n      tag_38\n        /* \"#utility.yul\":2789:3063   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6478:6597  function stakingPeriod(uint start, uint end) public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_41\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9969:10678  function getAllLandListedNfts() public view returns (ListedLandNftTokenId[] memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5060:6240  function buyLandNft(uint256 listIndex, uint256 price) external payable nonReentrant {... */\n    tag_17:\n      tag_41\n      tag_110\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":1246:1283  address public immutable tokenAddress */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_36\n      immutable(\"0x0a04e6add186e5970a92b636cc2d1eb4a5aa36722747a9009175901fc5250165\")\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2267:2311  mapping(address => uint256) public userCount */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_46\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9586:9768  function adminDepositToken(address adminAddress, uint tokenDeposit) public onlyOwner{ ... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_41\n      tag_124\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9774:9958  function adminWithdrawToken(address adminAddress, uint tokenDeposit) public onlyOwner{ ... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_41\n      tag_128\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6752:7088  function stakeNFT(address mintContract, address stakerAddress, uint tokenId) public lockConditions(tokenId)... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_41\n      tag_132\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2633:2719  mapping (address mintAddress => mapping (uint tokedId => NftDetails)) public NftSupply */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_69\n      tag_136\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_136:\n      0x0c\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      swap1\n      swap7\n      add\n      sload\n      swap5\n      swap6\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      swap6\n      swap5\n      swap1\n      swap4\n      and\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup8\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2725:2787  mapping (address => mapping (uint =>uint)) public rewardAmount */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_46\n      tag_141\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_141:\n      0x0d\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2497:2550  mapping(uint => AddressToken) public auctionListCount */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_146:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      dup4\n      jump\n    tag_145:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6045:6077   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6027:6078   */\n      dup5\n      mstore\n        /* \"#utility.yul\":6109:6111   */\n      0x20\n        /* \"#utility.yul\":6094:6112   */\n      dup5\n      add\n        /* \"#utility.yul\":6087:6121   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6137:6155   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6130:6164   */\n      mstore\n        /* \"#utility.yul\":6015:6017   */\n      0x60\n        /* \"#utility.yul\":6000:6018   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":2497:2550  mapping(uint => AddressToken) public auctionListCount */\n      tag_38\n        /* \"#utility.yul\":5825:6170   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4323:5052  function listLandNft(address _mintContract, uint256 _price, uint256 _tokenId) public nonReentrant {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_41\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9155:9580  function user_Staking_Rewards(uint tokenId) public view returns (uint rewards, uint month) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      tag_157\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6774:6799   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":6830:6832   */\n      0x20\n        /* \"#utility.yul\":6815:6833   */\n      dup4\n      add\n        /* \"#utility.yul\":6808:6842   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6747:6765   */\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9155:9580  function user_Staking_Rewards(uint tokenId) public view returns (uint rewards, uint month) {... */\n      tag_38\n        /* \"#utility.yul\":6600:6848   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_41\n      tag_163\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7901:8799  function userClaimFT(address userAddress, uint tokenId) public {... */\n    tag_44:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7975:7986  uint reward */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7988:7998  uint month */\n      dup1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8002:8031  user_Staking_Rewards(tokenId) */\n      tag_166\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8023:8030  tokenId */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8002:8022  user_Staking_Rewards */\n      tag_158\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8002:8031  user_Staking_Rewards(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7974:8031  (uint reward, uint month) = user_Staking_Rewards(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8049:8054  month */\n      dup1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8058:8059  0 */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8049:8059  month != 0 */\n      sub\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8041:8078  require(month != 0, \"Please wait...\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8096:8114  lockedNFT[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8096:8105  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8096:8114  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8096:8128  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8132:8134  12 */\n      0x0c\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8096:8134  lockedNFT[tokenId].withdrawMonth != 12 */\n      sub\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8088:8196  require(lockedNFT[tokenId].withdrawMonth != 12,\"You have claimed your all rewards according to this NFT...\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7398:7400   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8088:8196  require(lockedNFT[tokenId].withdrawMonth != 12,\"You have claimed your all rewards according to this NFT...\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7380:7401   */\n      mstore\n        /* \"#utility.yul\":7437:7439   */\n      0x3a\n        /* \"#utility.yul\":7417:7435   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7410:7440   */\n      mstore\n        /* \"#utility.yul\":7476:7510   */\n      0x596f75206861766520636c61696d656420796f757220616c6c20726577617264\n        /* \"#utility.yul\":7456:7474   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7449:7511   */\n      mstore\n        /* \"#utility.yul\":7547:7575   */\n      0x73206163636f7264696e6720746f2074686973204e46542e2e2e000000000000\n        /* \"#utility.yul\":7527:7545   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7520:7576   */\n      mstore\n        /* \"#utility.yul\":7593:7612   */\n      0x84\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8088:8196  require(lockedNFT[tokenId].withdrawMonth != 12,\"You have claimed your all rewards according to this NFT...\") */\n      tag_168\n        /* \"#utility.yul\":7196:7618   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8088:8196  require(lockedNFT[tokenId].withdrawMonth != 12,\"You have claimed your all rewards according to this NFT...\") */\n    tag_170:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8228  lockedNFT[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8219  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8228  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8242  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8253:8255  12 */\n      0x0c\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8250  lockedNFT[tokenId].withdrawMonth + month */\n      tag_173\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8245:8250  month */\n      dup4\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8250  lockedNFT[tokenId].withdrawMonth + month */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8210:8255  lockedNFT[tokenId].withdrawMonth + month < 12 */\n      lt\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8206:8793  if (lockedNFT[tokenId].withdrawMonth + month < 12) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8289  lockedNFT[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8280  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8289  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8303  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8312  lockedNFT[tokenId].withdrawMonth += month */\n      dup1\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8307:8312  month */\n      dup4\n      swap3\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8289  lockedNFT[tokenId] */\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8312  lockedNFT[tokenId].withdrawMonth += month */\n      tag_176\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8307:8312  month */\n      dup5\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8271:8312  lockedNFT[tokenId].withdrawMonth += month */\n      tag_174\n      jump\t// in\n    tag_176:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8367:8381  reward * month */\n      tag_177\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8376:8381  month */\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8367:8373  reward */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8367:8381  reward * month */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8344  lockedNFT[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8335  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8344  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8362  lockedNFT[tokenId].userWithdrawToken */\n      0x03\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8382  lockedNFT[tokenId].userWithdrawToken += (reward * month) */\n      dup1\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8362  lockedNFT[tokenId].userWithdrawToken */\n      swap1\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8344  lockedNFT[tokenId] */\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8326:8382  lockedNFT[tokenId].userWithdrawToken += (reward * month) */\n      tag_179\n      swap1\n      dup5\n      swap1\n      tag_174\n      jump\t// in\n    tag_179:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8396:8460  IERC20(tokenAddress).safeTransfer(userAddress, (reward * month)) */\n      tag_180\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8430:8441  userAddress */\n      dup5\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8444:8458  reward * month */\n      tag_181\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8453:8458  month */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8444:8450  reward */\n      dup6\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8444:8458  reward * month */\n      tag_178\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8403:8415  tokenAddress */\n      immutable(\"0x0a04e6add186e5970a92b636cc2d1eb4a5aa36722747a9009175901fc5250165\")\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8396:8429  IERC20(tokenAddress).safeTransfer */\n      and\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8396:8460  IERC20(tokenAddress).safeTransfer(userAddress, (reward * month)) */\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8396:8429  IERC20(tokenAddress).safeTransfer */\n      tag_182\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8396:8460  IERC20(tokenAddress).safeTransfer(userAddress, (reward * month)) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8206:8793  if (lockedNFT[tokenId].withdrawMonth + month < 12) {... */\n      jump(tag_183)\n    tag_175:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8491:8510  uint remainingMonth */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8519:8537  lockedNFT[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8519:8528  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8519:8537  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8519:8551  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8514:8551  12 - lockedNFT[tokenId].withdrawMonth */\n      tag_184\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8514:8516  12 */\n      0x0c\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8514:8551  12 - lockedNFT[tokenId].withdrawMonth */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8491:8552  uint remainingMonth = (12 - lockedNFT[tokenId].withdrawMonth) */\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8602:8616  remainingMonth */\n      dup1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8566:8575  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8566:8584  lockedNFT[tokenId] */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8576:8583  tokenId */\n      dup7\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8566:8584  lockedNFT[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8566:8598  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8566:8616  lockedNFT[tokenId].withdrawMonth += remainingMonth */\n      dup3\n      dup3\n      sload\n      tag_186\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8671:8694  reward * remainingMonth */\n      tag_187\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8680:8694  remainingMonth */\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8671:8677  reward */\n      dup5\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8671:8694  reward * remainingMonth */\n      tag_178\n      jump\t// in\n    tag_187:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8648  lockedNFT[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8639  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8648  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8666  lockedNFT[tokenId].userWithdrawToken */\n      0x03\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8695  lockedNFT[tokenId].userWithdrawToken += (reward * remainingMonth) */\n      dup1\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8666  lockedNFT[tokenId].userWithdrawToken */\n      swap1\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8648  lockedNFT[tokenId] */\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8630:8695  lockedNFT[tokenId].userWithdrawToken += (reward * remainingMonth) */\n      tag_188\n      swap1\n      dup5\n      swap1\n      tag_174\n      jump\t// in\n    tag_188:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8709:8782  IERC20(tokenAddress).safeTransfer(userAddress, (reward * remainingMonth)) */\n      tag_189\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8743:8754  userAddress */\n      dup6\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8757:8780  reward * remainingMonth */\n      tag_181\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8766:8780  remainingMonth */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8757:8763  reward */\n      dup7\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8757:8780  reward * remainingMonth */\n      tag_178\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8709:8782  IERC20(tokenAddress).safeTransfer(userAddress, (reward * remainingMonth)) */\n    tag_189:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8477:8793  {... */\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":8206:8793  if (lockedNFT[tokenId].withdrawMonth + month < 12) {... */\n    tag_183:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7964:8799  {... */\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7901:8799  function userClaimFT(address userAddress, uint tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7328:7616  function unStakeNFT(address mintContract , address stakerAddress, uint tokenId) public unlockConditions(tokenId, stakerAddress) {... */\n    tag_60:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7432:7439  tokenId */\n      dup1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7441:7454  stakerAddress */\n      dup3\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3851:3866  block.timestamp */\n      timestamp\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3841:3848  endTime */\n      sload(0x06)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3841:3866  endTime < block.timestamp */\n      lt\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3833:3885  require(endTime < block.timestamp, \"Please wait...\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_192:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3952  lockedNFT[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3943  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3952  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3966  lockedNFT[tokenId].stakerAddress */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3983  lockedNFT[tokenId].stakerAddress == stakerAddress */\n      dup3\n      dup2\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3966  lockedNFT[tokenId].stakerAddress */\n      swap2\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3934:3983  lockedNFT[tokenId].stakerAddress == stakerAddress */\n      eq\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3926:4018  require(lockedNFT[tokenId].stakerAddress == stakerAddress, \"You are not owner of this NFT.\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8393:8395   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3926:4018  require(lockedNFT[tokenId].stakerAddress == stakerAddress, \"You are not owner of this NFT.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8375:8396   */\n      mstore\n        /* \"#utility.yul\":8432:8434   */\n      0x1e\n        /* \"#utility.yul\":8412:8430   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8405:8435   */\n      mstore\n        /* \"#utility.yul\":8471:8503   */\n      0x596f7520617265206e6f74206f776e6572206f662074686973204e46542e0000\n        /* \"#utility.yul\":8451:8469   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8444:8504   */\n      mstore\n        /* \"#utility.yul\":8521:8539   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3926:4018  require(lockedNFT[tokenId].stakerAddress == stakerAddress, \"You are not owner of this NFT.\") */\n      tag_168\n        /* \"#utility.yul\":8191:8545   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3926:4018  require(lockedNFT[tokenId].stakerAddress == stakerAddress, \"You are not owner of this NFT.\") */\n    tag_194:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4054:4072  lockedNFT[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4054:4063  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4054:4072  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4054:4081  lockedNFT[tokenId].isActive */\n      0x06\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4046:4097  require(lockedNFT[tokenId].isActive, \"NOT LOCKED.\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8752:8754   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4046:4097  require(lockedNFT[tokenId].isActive, \"NOT LOCKED.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8734:8755   */\n      mstore\n        /* \"#utility.yul\":8791:8793   */\n      0x0b\n        /* \"#utility.yul\":8771:8789   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8764:8794   */\n      mstore\n      shl(0xa9, 0x2727aa102627a1a5a2a217)\n        /* \"#utility.yul\":8810:8828   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8803:8844   */\n      mstore\n        /* \"#utility.yul\":8861:8879   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4046:4097  require(lockedNFT[tokenId].isActive, \"NOT LOCKED.\") */\n      tag_168\n        /* \"#utility.yul\":8550:8885   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4046:4097  require(lockedNFT[tokenId].isActive, \"NOT LOCKED.\") */\n    tag_197:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7496:7501  false */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7466:7484  lockedNFT[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7466:7475  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7466:7484  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7466:7493  lockedNFT[tokenId].isActive */\n      0x06\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7466:7501  lockedNFT[tokenId].isActive = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7511:7525  totalLockedNft */\n      0x04\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7511:7527  totalLockedNft-- */\n      dup1\n      sload\n      swap2\n      tag_201\n      dup4\n      tag_202\n      jump\t// in\n    tag_201:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7537:7609  ERC721(mintContract).transferFrom(address(this), stakerAddress, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7537:7570  ERC721(mintContract).transferFrom */\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7537:7609  ERC721(mintContract).transferFrom(address(this), stakerAddress, tokenId) */\n      tag_203\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7579:7583  this */\n      address\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7586:7599  stakerAddress */\n      dup9\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7601:7608  tokenId */\n      dup9\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7537:7609  ERC721(mintContract).transferFrom(address(this), stakerAddress, tokenId) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_203:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7328:7616  function unStakeNFT(address mintContract , address stakerAddress, uint tokenId) public unlockConditions(tokenId, stakerAddress) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6478:6597  function stakingPeriod(uint start, uint end) public onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6550:6559  startTime */\n      0x05\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6550:6567  startTime = start */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6577:6584  endTime */\n      0x06\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6577:6590  endTime = end */\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6478:6597  function stakingPeriod(uint start, uint end) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9969:10678  function getAllLandListedNfts() public view returns (ListedLandNftTokenId[] memory) {... */\n    tag_106:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10022:10051  ListedLandNftTokenId[] memory */\n      0x60\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10063:10075  uint listNft */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10078:10102  nextLandListId.current() */\n      tag_219\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10078:10092  nextLandListId */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10078:10102  nextLandListId.current() */\n    tag_219:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10063:10102  uint listNft = nextLandListId.current() */\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10112:10151  ListedLandNftTokenId[] memory listedNFT */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10181:10188  listNft */\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10154:10189  new ListedLandNftTokenId[](listNft) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_222\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup2\n      0x20\n      add\n    tag_225:\n      0x40\n      dup1\n      mload\n      0x0120\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      0x60\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      0x80\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0xa0\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0xc0\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0xe0\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0100\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_225\n      jumpi\n      swap1\n      pop\n    tag_224:\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10112:10189  ListedLandNftTokenId[] memory listedNFT = new ListedLandNftTokenId[](listNft) */\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10199:10215  uint listedIndex */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10243:10244  1 */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10229:10644  for (uint i = 1; i <= nextLandListId.current() ; i++) {... */\n    tag_228:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10251:10265  nextLandListId */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10246:10247  i */\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10246:10275  i <= nextLandListId.current() */\n      gt\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10229:10644  for (uint i = 1; i <= nextLandListId.current() ; i++) {... */\n      tag_229\n      jumpi\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10301:10347  userLandListings[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10318:10330  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10318:10327  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10318:10330  listCount[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10318:10346  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10301:10347  userLandListings[listCount[i].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10301:10317  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10301:10347  userLandListings[listCount[i].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10318:10346  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10348:10368  listCount[i].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10301:10369  userLandListings[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10301:10376  userLandListings[listCount[i].contractAddress][listCount[i].tokenId].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10297:10634  if (userLandListings[listCount[i].contractAddress][listCount[i].tokenId].listed) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10421:10588  ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId)) */\n      0x40\n      dup1\n      mload\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10459:10471  listCount[i] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10459:10468  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10459:10471  listCount[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10459:10487  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10442:10488  userLandListings[listCount[i].contractAddress] */\n      dup1\n      dup7\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10442:10458  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10442:10488  userLandListings[listCount[i].contractAddress] */\n      dup5\n      mstore\n      dup8\n      dup7\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10459:10487  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10489:10509  listCount[i].tokenId */\n      swap4\n      dup5\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10442:10510  userLandListings[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup1\n      dup9\n      mstore\n      swap1\n      dup6\n      mstore\n      dup9\n      dup8\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10421:10588  ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId)) */\n      0x0120\n      dup10\n      add\n      dup11\n      mstore\n      dup1\n      sload\n      dup5\n      and\n      0x60\n      dup11\n      add\n      swap1\n      dup2\n      mstore\n      swap5\n      dup2\n      add\n      sload\n      swap1\n      swap4\n      and\n      0x80\n      dup10\n      add\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      0xa0\n      dup10\n      add\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0xc0\n      dup10\n      add\n      mstore\n      0x04\n      dup1\n      dup5\n      add\n      sload\n      0xe0\n      dup11\n      add\n      mstore\n      0x05\n      swap1\n      swap4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10459:10487  listCount[i].contractAddress */\n      0x0100\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10421:10588  ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId)) */\n      dup10\n      add\n      mstore\n      swap3\n      dup8\n      mstore\n      dup4\n      dup8\n      add\n      dup10\n      swap1\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10524:10536  listCount[i] */\n      swap5\n      dup9\n      swap1\n      mstore\n      swap3\n      swap1\n      swap2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10513:10587  IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId) */\n      dup5\n      mload\n      shl(0xe0, 0x8ad91345)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1098:1123   */\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10421:10588  ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId)) */\n      swap2\n      swap3\n      dup4\n      add\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10513:10565  IConnected(listCount[i].contractAddress).getTokenUri */\n      0x8ad91345\n      swap1\n        /* \"#utility.yul\":1071:1089   */\n      0x24\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10513:10587  IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_236\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10421:10588  ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId)) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10396:10405  listedNFT */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10406:10417  listedIndex */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10396:10418  listedNFT[listedIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_239\n      tag_240\n      jump\t// in\n    tag_239:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10396:10588  listedNFT[listedIndex] = ListedLandNftTokenId(userLandListings[listCount[i].contractAddress][listCount[i].tokenId],i,IConnected(listCount[i].contractAddress).getTokenUri(listCount[i].tokenId)) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10606:10619  listedIndex++ */\n      dup2\n      dup1\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      swap3\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10297:10634  if (userLandListings[listCount[i].contractAddress][listCount[i].tokenId].listed) {... */\n    tag_232:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10278:10281  i++ */\n      dup1\n      tag_243\n      dup2\n      tag_242\n      jump\t// in\n    tag_243:\n      swap2\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10229:10644  for (uint i = 1; i <= nextLandListId.current() ; i++) {... */\n      jump(tag_228)\n    tag_229:\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":10661:10670  listedNFT */\n      swap1\n      swap4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9969:10678  function getAllLandListedNfts() public view returns (ListedLandNftTokenId[] memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5060:6240  function buyLandNft(uint256 listIndex, uint256 price) external payable nonReentrant {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5216  userLandListings[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5179:5199  listCount[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5179:5188  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5179:5199  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5179:5215  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5216  userLandListings[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5178  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5216  userLandListings[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5179:5215  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5217:5245  listCount[listIndex].tokenId */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5246  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5252  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner */\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5256:5266  msg.sender */\n      caller\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5252  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner */\n      swap2\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5162:5266  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner != msg.sender */\n      sub\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5154:5295  require(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner != msg.sender, \"Owner Can't Buy Its Nfts\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10934:10936   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5154:5295  require(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner != msg.sender, \"Owner Can't Buy Its Nfts\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10916:10937   */\n      mstore\n        /* \"#utility.yul\":10973:10975   */\n      0x18\n        /* \"#utility.yul\":10953:10971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10946:10976   */\n      mstore\n        /* \"#utility.yul\":11012:11038   */\n      0x4f776e65722043616e27742042757920497473204e6674730000000000000000\n        /* \"#utility.yul\":10992:11010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10985:11039   */\n      mstore\n        /* \"#utility.yul\":11056:11074   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5154:5295  require(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner != msg.sender, \"Owner Can't Buy Its Nfts\") */\n      tag_168\n        /* \"#utility.yul\":10732:11080   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5154:5295  require(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner != msg.sender, \"Owner Can't Buy Its Nfts\") */\n    tag_248:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5322:5376  userLandListings[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5339:5359  listCount[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5339:5348  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5339:5359  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5339:5375  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5322:5376  userLandListings[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5322:5338  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5322:5376  userLandListings[listCount[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5339:5375  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5377:5405  listCount[listIndex].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5322:5406  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5322:5412  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      0x04\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5313:5412  price >= userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      dup2\n      lt\n      iszero\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5305:5455  require(price >= userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price, \"Not enough ether to cover asking price\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11287:11289   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5305:5455  require(price >= userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price, \"Not enough ether to cover asking price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11269:11290   */\n      mstore\n        /* \"#utility.yul\":11326:11328   */\n      0x26\n        /* \"#utility.yul\":11306:11324   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11299:11329   */\n      mstore\n        /* \"#utility.yul\":11365:11399   */\n      0x4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67\n        /* \"#utility.yul\":11345:11363   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11338:11400   */\n      mstore\n      shl(0xd0, 0x207072696365)\n        /* \"#utility.yul\":11416:11434   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11409:11445   */\n      mstore\n        /* \"#utility.yul\":11462:11481   */\n      0x84\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5305:5455  require(price >= userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price, \"Not enough ether to cover asking price\") */\n      tag_168\n        /* \"#utility.yul\":11085:11487   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5305:5455  require(price >= userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price, \"Not enough ether to cover asking price\") */\n    tag_251:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5465:5482  uint sellerAmount */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5502:5522  listCount[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5502:5511  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5502:5522  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5502:5538  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5539  userLandListings[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5501  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5539  userLandListings[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5502:5538  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5540:5568  listCount[listIndex].tokenId */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5569  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5575  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5593:5683  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner */\n      swap1\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5585:5707  payable(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner).transfer(sellerAmount) */\n      swap2\n      mload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5575  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      swap1\n      swap4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5593:5683  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5585:5707  payable(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner).transfer(sellerAmount) */\n      0x08fc\n      dup5\n      iszero\n      mul\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5575  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      dup5\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5585:5707  payable(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner).transfer(sellerAmount) */\n      swap1\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5465:5482  uint sellerAmount */\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5585:5707  payable(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner).transfer(sellerAmount) */\n      dup2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5485:5575  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      dup6\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5593:5683  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner */\n      dup9\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5585:5707  payable(userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner).transfer(sellerAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5724:5744  listCount[listIndex] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5724:5733  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5724:5744  listCount[listIndex] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5724:5760  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5802:5830  listCount[listIndex].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5717:5831  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      swap2\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5724:5760  listCount[listIndex].contractAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5717:5774  ERC721(listCount[listIndex].contractAddress).transferFrom */\n      0x23b872dd\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5717:5831  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      tag_256\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5783:5787  this */\n      address\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5790:5800  msg.sender */\n      caller\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5802:5830  listCount[listIndex].tokenId */\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5717:5831  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_256:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_259:\n      pop\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5852:5872  listCount[listIndex] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5852:5861  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5852:5872  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5852:5888  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5915:5943  listCount[listIndex].tokenId */\n      swap2\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5852:5888  listCount[listIndex].contractAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5944:5998  userLandListings[listCount[listIndex].contractAddress] */\n      dup1\n      dup8\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5944:5960  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5944:5998  userLandListings[listCount[listIndex].contractAddress] */\n      dup7\n      mstore\n      dup5\n      dup8\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5944:6028  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup3\n      dup9\n      mstore\n      swap1\n      swap6\n      mstore\n      swap5\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5944:6035  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5841:6036  IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller) */\n      swap2\n      mload\n      shl(0xe0, 0x6e0cee09)\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5904:5914  msg.sender */\n      caller\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5841:6036  IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11694:11745   */\n      mstore\n        /* \"#utility.yul\":11761:11779   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11754:11788   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5944:6035  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      and\n        /* \"#utility.yul\":11804:11822   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11797:11857   */\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5852:5888  listCount[listIndex].contractAddress */\n      swap2\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5841:5903  IConnected(listCount[listIndex].contractAddress).updateTokenId */\n      0x6e0cee09\n      swap1\n        /* \"#utility.yul\":11667:11685   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5841:6036  IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6140:6145  false */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6063:6083  listCount[listIndex] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6063:6072  listCount */\n      0x07\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6063:6083  listCount[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6063:6099  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6046:6100  userLandListings[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6046:6062  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6046:6100  userLandListings[listCount[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6063:6099  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6101:6129  listCount[listIndex].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6046:6130  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6046:6137  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed */\n      0x05\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6046:6145  userLandListings[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6063:6072  listCount */\n      swap2\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6172:6196  nextLandListId.current() */\n      tag_265\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6172:6186  nextLandListId */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6172:6196  nextLandListId.current() */\n    tag_265:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6162:6197  listCount[nextLandListId.current()] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6155:6197  delete listCount[nextLandListId.current()] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n      0x01\n      add\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6207:6233  nextLandListId.decrement() */\n      tag_266\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6207:6221  nextLandListId */\n      0x02\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6207:6231  nextLandListId.decrement */\n      tag_267\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6207:6233  nextLandListId.decrement() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5144:6240  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_268\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_268:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5060:6240  function buyLandNft(uint256 listIndex, uint256 price) external payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9586:9768  function adminDepositToken(address adminAddress, uint tokenDeposit) public onlyOwner{ ... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9681:9761  IERC20(tokenAddress).safeTransferFrom(adminAddress, address(this), tokenDeposit) */\n      tag_268\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9688:9700  tokenAddress */\n      immutable(\"0x0a04e6add186e5970a92b636cc2d1eb4a5aa36722747a9009175901fc5250165\")\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9681:9718  IERC20(tokenAddress).safeTransferFrom */\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9719:9731  adminAddress */\n      dup4\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9741:9745  this */\n      address\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9748:9760  tokenDeposit */\n      dup5\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9681:9718  IERC20(tokenAddress).safeTransferFrom */\n      tag_274\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9681:9761  IERC20(tokenAddress).safeTransferFrom(adminAddress, address(this), tokenDeposit) */\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9774:9958  function adminWithdrawToken(address adminAddress, uint tokenDeposit) public onlyOwner{ ... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9870:9951  IERC20(tokenAddress).safeTransferFrom( address(this), adminAddress, tokenDeposit) */\n      tag_268\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9877:9889  tokenAddress */\n      immutable(\"0x0a04e6add186e5970a92b636cc2d1eb4a5aa36722747a9009175901fc5250165\")\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9870:9907  IERC20(tokenAddress).safeTransferFrom */\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9917:9921  this */\n      address\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9924:9936  adminAddress */\n      dup5\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9938:9950  tokenDeposit */\n      dup5\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9870:9907  IERC20(tokenAddress).safeTransferFrom */\n      tag_274\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9870:9951  IERC20(tokenAddress).safeTransferFrom( address(this), adminAddress, tokenDeposit) */\n      jump\t// in\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6752:7088  function stakeNFT(address mintContract, address stakerAddress, uint tokenId) public lockConditions(tokenId)... */\n    tag_133:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6851:6858  tokenId */\n      dup1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3176:3183  endTime */\n      sload(0x06)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3163:3172  startTime */\n      sload(0x05)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3163:3183  startTime != endTime */\n      sub\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3155:3202  require(startTime != endTime ,\"Please wait...\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_280:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3232:3247  block.timestamp */\n      timestamp\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3220:3229  startTime */\n      sload(0x05)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3220:3247  startTime < block.timestamp */\n      lt\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3212:3269  require(startTime < block.timestamp, \"Time Not Start...\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12070:12072   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3212:3269  require(startTime < block.timestamp, \"Time Not Start...\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12052:12073   */\n      mstore\n        /* \"#utility.yul\":12109:12111   */\n      0x11\n        /* \"#utility.yul\":12089:12107   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12082:12112   */\n      mstore\n      shl(0x79, 0x2a34b6b2902737ba1029ba30b93a171717)\n        /* \"#utility.yul\":12128:12146   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12121:12168   */\n      mstore\n        /* \"#utility.yul\":12185:12203   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3212:3269  require(startTime < block.timestamp, \"Time Not Start...\") */\n      tag_168\n        /* \"#utility.yul\":11868:12209   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3212:3269  require(startTime < block.timestamp, \"Time Not Start...\") */\n    tag_282:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3326:3341  block.timestamp */\n      timestamp\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3316:3323  endTime */\n      sload(0x06)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3316:3341  endTime > block.timestamp */\n      gt\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3308:3355  require(endTime > block.timestamp, \"Time End.\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12416:12418   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3308:3355  require(endTime > block.timestamp, \"Time End.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12398:12419   */\n      mstore\n        /* \"#utility.yul\":12455:12456   */\n      0x09\n        /* \"#utility.yul\":12435:12453   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12428:12457   */\n      mstore\n      shl(0xb9, 0x2a34b6b29022b73217)\n        /* \"#utility.yul\":12473:12491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12466:12505   */\n      mstore\n        /* \"#utility.yul\":12522:12540   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3308:3355  require(endTime > block.timestamp, \"Time End.\") */\n      tag_168\n        /* \"#utility.yul\":12214:12546   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3308:3355  require(endTime > block.timestamp, \"Time End.\") */\n    tag_285:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3405:3423  lockedNFT[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3405:3414  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3405:3423  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3405:3432  lockedNFT[tokenId].isActive */\n      0x06\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3404:3432  !lockedNFT[tokenId].isActive */\n      iszero\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3396:3451  require(!lockedNFT[tokenId].isActive, \"Already Staked\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12753:12755   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3396:3451  require(!lockedNFT[tokenId].isActive, \"Already Staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12735:12756   */\n      mstore\n        /* \"#utility.yul\":12792:12794   */\n      0x0e\n        /* \"#utility.yul\":12772:12790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12765:12795   */\n      mstore\n      shl(0x92, 0x105b1c9958591e4814dd185ad959)\n        /* \"#utility.yul\":12811:12829   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12804:12848   */\n      mstore\n        /* \"#utility.yul\":12865:12883   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3396:3451  require(!lockedNFT[tokenId].isActive, \"Already Staked\") */\n      tag_168\n        /* \"#utility.yul\":12551:12889   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":3396:3451  require(!lockedNFT[tokenId].isActive, \"Already Staked\") */\n    tag_288:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6895:6973  NftDetails(tokenId, stakerAddress, address(this), 0, 0, block.timestamp, true) */\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6938:6942  this */\n      address\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6895:6973  NftDetails(tokenId, stakerAddress, address(this), 0, 0, block.timestamp, true) */\n      dup5\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n      0x60\n      dup7\n      add\n      dup2\n      dup2\n      mstore\n      0x80\n      dup8\n      add\n      dup3\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6951:6966  block.timestamp */\n      timestamp\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6895:6973  NftDetails(tokenId, stakerAddress, address(this), 0, 0, block.timestamp, true) */\n      0xa0\n      dup10\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6968:6972  true */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6895:6973  NftDetails(tokenId, stakerAddress, address(this), 0, 0, block.timestamp, true) */\n      0xc0\n      dup11\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6874:6892  lockedNFT[tokenId] */\n      dup14\n      dup7\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6874:6883  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6874:6892  lockedNFT[tokenId] */\n      swap1\n      swap8\n      mstore\n      swap10\n      dup5\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6874:6973  lockedNFT[tokenId] = NftDetails(tokenId, stakerAddress, address(this), 0, 0, block.timestamp, true) */\n      swap9\n      mload\n      dup10\n      sstore\n      swap6\n      mload\n      swap9\n      dup9\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap11\n      dup10\n      and\n      swap11\n      swap1\n      swap11\n      or\n      swap1\n      sstore\n      swap3\n      mload\n      0x02\n      dup9\n      add\n      dup1\n      sload\n      swap1\n      swap10\n      and\n      swap7\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap7\n      sstore\n      swap3\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      swap2\n      mload\n      0x04\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap1\n      mload\n      0x05\n      dup5\n      add\n      sstore\n      swap1\n      mload\n      0x06\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6983:6999  totalLockedNft++ */\n      dup1\n      sload\n      swap2\n      tag_292\n      dup4\n      tag_242\n      jump\t// in\n    tag_292:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7009:7081  ERC721(mintContract).transferFrom(stakerAddress, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7009:7042  ERC721(mintContract).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7009:7081  ERC721(mintContract).transferFrom(stakerAddress, address(this), tokenId) */\n      tag_293\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7043:7056  stakerAddress */\n      dup7\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7066:7070  this */\n      address\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7073:7080  tokenId */\n      dup8\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":7009:7081  ERC721(mintContract).transferFrom(stakerAddress, address(this), tokenId) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_293:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_294:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":6752:7088  function stakeNFT(address mintContract, address stakerAddress, uint tokenId) public lockConditions(tokenId)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4323:5052  function listLandNft(address _mintContract, uint256 _price, uint256 _tokenId) public nonReentrant {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_298\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4440:4471  userLandListings[_mintContract] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4440:4456  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4440:4471  userLandListings[_mintContract] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4440:4481  userLandListings[_mintContract][_tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4440:4488  userLandListings[_mintContract][_tokenId].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4439:4488  !userLandListings[_mintContract][_tokenId].listed */\n      iszero\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4431:4523  require(!userLandListings[_mintContract][_tokenId].listed, \"Already Listed In Marketplace!\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13096:13098   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4431:4523  require(!userLandListings[_mintContract][_tokenId].listed, \"Already Listed In Marketplace!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13078:13099   */\n      mstore\n        /* \"#utility.yul\":13135:13137   */\n      0x1e\n        /* \"#utility.yul\":13115:13133   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13108:13138   */\n      mstore\n        /* \"#utility.yul\":13174:13206   */\n      0x416c7265616479204c697374656420496e204d61726b6574706c616365210000\n        /* \"#utility.yul\":13154:13172   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13147:13207   */\n      mstore\n        /* \"#utility.yul\":13224:13242   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4431:4523  require(!userLandListings[_mintContract][_tokenId].listed, \"Already Listed In Marketplace!\") */\n      tag_168\n        /* \"#utility.yul\":12894:13248   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4431:4523  require(!userLandListings[_mintContract][_tokenId].listed, \"Already Listed In Marketplace!\") */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4542:4566  NftSupply[_mintContract] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4542:4551  NftSupply */\n      0x0c\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4542:4566  NftSupply[_mintContract] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4542:4576  NftSupply[_mintContract][_tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4542:4585  NftSupply[_mintContract][_tokenId].isActive */\n      0x06\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4541:4585  !NftSupply[_mintContract][_tokenId].isActive */\n      iszero\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4533:4607  require(!NftSupply[_mintContract][_tokenId].isActive,\"NFT already staked\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13455:13457   */\n      0x20\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4533:4607  require(!NftSupply[_mintContract][_tokenId].isActive,\"NFT already staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13437:13458   */\n      mstore\n        /* \"#utility.yul\":13494:13496   */\n      0x12\n        /* \"#utility.yul\":13474:13492   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13467:13497   */\n      mstore\n      shl(0x72, 0x13919508185b1c9958591e481cdd185ad959)\n        /* \"#utility.yul\":13513:13531   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13506:13554   */\n      mstore\n        /* \"#utility.yul\":13571:13589   */\n      0x64\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4533:4607  require(!NftSupply[_mintContract][_tokenId].isActive,\"NFT already staked\") */\n      tag_168\n        /* \"#utility.yul\":13253:13595   */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4533:4607  require(!NftSupply[_mintContract][_tokenId].isActive,\"NFT already staked\") */\n    tag_303:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4679:4705  nextLandListId.increment() */\n      tag_309\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4679:4693  nextLandListId */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4679:4705  nextLandListId.increment() */\n    tag_309:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4759:4844  ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4768:4778  msg.sender */\n      caller\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4759:4844  ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true) */\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4788:4792  this */\n      address\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4759:4844  ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true) */\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4805:4829  nextLandListId.current() */\n      tag_311\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4805:4819  nextLandListId */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4805:4829  nextLandListId.current() */\n    tag_311:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4759:4844  ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true) */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4839:4843  true */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4759:4844  ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true) */\n      0x40\n      swap3\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4715:4746  userLandListings[_mintContract] */\n      dup1\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4715:4731  userLandListings */\n      0x0e\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4715:4746  userLandListings[_mintContract] */\n      dup6\n      mstore\n      dup6\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4715:4756  userLandListings[_mintContract][_tokenId] */\n      dup9\n      dup3\n      mstore\n      dup6\n      mstore\n      dup6\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4715:4844  userLandListings[_mintContract][_tokenId] = ListLand(msg.sender, address(this), _tokenId, nextLandListId.current(), _price, true) */\n      dup8\n      mload\n      dup2\n      sload\n      swap1\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      dup9\n      dup8\n      add\n      mload\n      swap6\n      dup3\n      add\n      dup1\n      sload\n      swap7\n      swap1\n      swap6\n      and\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap3\n      sstore\n      dup6\n      dup6\n      add\n      mload\n      0x02\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0x60\n      dup8\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup8\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      0xa0\n      swap1\n      swap7\n      add\n      mload\n      0x05\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      swap4\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4892:4930  Address_Token(_mintContract, _tokenId) */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      swap1\n      swap5\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      swap2\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4854:4863  listCount */\n      0x07\n      swap2\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4864:4888  nextLandListId.current() */\n      tag_312\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4864:4888  nextLandListId.current() */\n    tag_312:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4854:4889  listCount[nextLandListId.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4854:4930  listCount[nextLandListId.current()] = Address_Token(_mintContract, _tokenId) */\n      dup4\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      swap4\n      swap1\n      swap3\n      add\n      mload\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4940:5011  ERC721(_mintContract).transferFrom(msg.sender, address(this), _tokenId) */\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4940:4974  ERC721(_mintContract).transferFrom */\n      swap1\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4940:5011  ERC721(_mintContract).transferFrom(msg.sender, address(this), _tokenId) */\n      tag_313\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4975:4985  msg.sender */\n      caller\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4995:4999  this */\n      address\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5002:5010  _tokenId */\n      dup7\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4940:5011  ERC721(_mintContract).transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_313:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_314\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_314:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5032:5042  msg.sender */\n      caller\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5022:5043  userCount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5022:5031  userCount */\n      0x08\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5022:5043  userCount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5022:5045  userCount[msg.sender]++ */\n      dup1\n      sload\n      swap4\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5022:5043  userCount[msg.sender] */\n      swap2\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":5022:5045  userCount[msg.sender]++ */\n      tag_317\n      dup4\n      tag_242\n      jump\t// in\n    tag_317:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_318\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_318:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":4323:5052  function listLandNft(address _mintContract, uint256 _price, uint256 _tokenId) public nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9155:9580  function user_Staking_Rewards(uint tokenId) public view returns (uint rewards, uint month) {... */\n    tag_158:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9220:9232  uint rewards */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9292:9310  lockedNFT[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9292:9301  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9292:9310  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9292:9324  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9220:9232  uint rewards */\n      dup2\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9335:9337  60 */\n      0x3c\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9292:9329  lockedNFT[tokenId].withdrawMonth * 60 */\n      tag_320\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9335:9337  60 */\n      dup3\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9292:9329  lockedNFT[tokenId].withdrawMonth * 60 */\n      tag_178\n      jump\t// in\n    tag_320:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9280:9287  endTime */\n      sload(0x06)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9262:9287  block.timestamp - endTime */\n      tag_321\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9262:9277  block.timestamp */\n      timestamp\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9262:9287  block.timestamp - endTime */\n      tag_185\n      jump\t// in\n    tag_321:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9261:9330  (block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60) */\n      tag_322\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_322:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9260:9337  ((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) >= 60 */\n      lt\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9256:9574  if (((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) >= 60) {... */\n      tag_323\n      jumpi\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9353:9364  uint months */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9399:9417  lockedNFT[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9399:9408  lockedNFT */\n      0x0a\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9399:9417  lockedNFT[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9399:9431  lockedNFT[tokenId].withdrawMonth */\n      0x04\n      add\n      sload\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9441:9443  60 */\n      0x3c\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9399:9436  lockedNFT[tokenId].withdrawMonth * 60 */\n      tag_324\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9441:9443  60 */\n      dup3\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9399:9436  lockedNFT[tokenId].withdrawMonth * 60 */\n      tag_178\n      jump\t// in\n    tag_324:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9387:9394  endTime */\n      sload(0x06)\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9369:9394  block.timestamp - endTime */\n      tag_325\n      swap1\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9369:9384  block.timestamp */\n      timestamp\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9369:9394  block.timestamp - endTime */\n      tag_185\n      jump\t// in\n    tag_325:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9368:9437  (block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60) */\n      tag_326\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_326:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9367:9443  ((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) / 60 */\n      tag_327\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9353:9443  uint months = ((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) / 60 */\n      swap1\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9457:9468  uint reward */\n      0x00\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9472:9482  1 * months */\n      tag_329\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9353:9443  uint months = ((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) / 60 */\n      dup3\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9472:9473  1 */\n      0x01\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9472:9482  1 * months */\n      tag_178\n      jump\t// in\n    tag_329:\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9457:9483  uint reward = (1 * months) */\n      swap6\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9513:9519  months */\n      swap2\n      swap5\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9155:9580  function user_Staking_Rewards(uint tokenId) public view returns (uint rewards, uint month) {... */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9256:9574  if (((block.timestamp - endTime) - (lockedNFT[tokenId].withdrawMonth * 60)) >= 60) {... */\n    tag_323:\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9559:9560  0 */\n      0x00\n      swap3\n      dup4\n      swap3\n      pop\n        /* \"contracts/practiceProject/marketPlace/marketplace2.sol\":9155:9580  function user_Staking_Rewards(uint tokenId) public view returns (uint rewards, uint month) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":176:227   */\n      mstore\n        /* \"#utility.yul\":149:167   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_168\n        /* \"#utility.yul\":14:233   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2981:3013   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2963:3014   */\n      mstore\n        /* \"#utility.yul\":3030:3048   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3023:3057   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_318\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2936:2954   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n    tag_339:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":176:227   */\n      mstore\n        /* \"#utility.yul\":149:167   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_168\n        /* \"#utility.yul\":14:233   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14381:14383   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14363:14384   */\n      mstore\n        /* \"#utility.yul\":14420:14422   */\n      0x1f\n        /* \"#utility.yul\":14400:14418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14393:14423   */\n      mstore\n        /* \"#utility.yul\":14459:14492   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14439:14457   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14432:14493   */\n      mstore\n        /* \"#utility.yul\":14510:14528   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_168\n        /* \"#utility.yul\":14179:14534   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_351:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14741:14743   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14723:14744   */\n      mstore\n        /* \"#utility.yul\":14780:14782   */\n      0x1b\n        /* \"#utility.yul\":14760:14778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14753:14783   */\n      mstore\n        /* \"#utility.yul\":14819:14848   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":14799:14817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14792:14849   */\n      mstore\n        /* \"#utility.yul\":14866:14884   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_168\n        /* \"#utility.yul\":14539:14890   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_355:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_339\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_364\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_366\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_367\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":194:226   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":176:227   */\n      mstore\n        /* \"#utility.yul\":149:167   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_168\n        /* \"#utility.yul\":14:233   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_373\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_374\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_372:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":176:227   */\n      mstore\n        /* \"#utility.yul\":149:167   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_168\n        /* \"#utility.yul\":14:233   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_382\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_381)\n    tag_382:\n      0x60\n      swap2\n      pop\n    tag_381:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_383\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_384\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_375:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_384:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_387\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_388\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_375)\n    tag_386:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_390\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_390:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":194:226   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":176:227   */\n      mstore\n        /* \"#utility.yul\":149:167   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_168\n        /* \"#utility.yul\":14:233   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_391:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_375)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":238:411   */\n    tag_398:\n        /* \"#utility.yul\":306:326   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":355:386   */\n      dup2\n      and\n        /* \"#utility.yul\":345:387   */\n      dup2\n      eq\n        /* \"#utility.yul\":335:405   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":401:402   */\n      0x00\n        /* \"#utility.yul\":398:399   */\n      dup1\n        /* \"#utility.yul\":391:403   */\n      revert\n        /* \"#utility.yul\":335:405   */\n    tag_405:\n        /* \"#utility.yul\":238:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:716   */\n    tag_43:\n        /* \"#utility.yul\":484:490   */\n      0x00\n        /* \"#utility.yul\":492:498   */\n      dup1\n        /* \"#utility.yul\":545:547   */\n      0x40\n        /* \"#utility.yul\":533:542   */\n      dup4\n        /* \"#utility.yul\":524:531   */\n      dup6\n        /* \"#utility.yul\":520:543   */\n      sub\n        /* \"#utility.yul\":516:548   */\n      slt\n        /* \"#utility.yul\":513:565   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":558:559   */\n      dup1\n        /* \"#utility.yul\":551:563   */\n      revert\n        /* \"#utility.yul\":513:565   */\n    tag_407:\n        /* \"#utility.yul\":584:613   */\n      tag_408\n        /* \"#utility.yul\":603:612   */\n      dup4\n        /* \"#utility.yul\":584:613   */\n      tag_398\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":574:613   */\n      swap5\n        /* \"#utility.yul\":682:684   */\n      0x20\n        /* \"#utility.yul\":667:685   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":654:686   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":416:716   */\n      jump\t// out\n        /* \"#utility.yul\":721:947   */\n    tag_48:\n        /* \"#utility.yul\":780:786   */\n      0x00\n        /* \"#utility.yul\":833:835   */\n      0x20\n        /* \"#utility.yul\":821:830   */\n      dup3\n        /* \"#utility.yul\":812:819   */\n      dup5\n        /* \"#utility.yul\":808:831   */\n      sub\n        /* \"#utility.yul\":804:836   */\n      slt\n        /* \"#utility.yul\":801:853   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":849:850   */\n      0x00\n        /* \"#utility.yul\":846:847   */\n      dup1\n        /* \"#utility.yul\":839:851   */\n      revert\n        /* \"#utility.yul\":801:853   */\n    tag_410:\n      pop\n        /* \"#utility.yul\":894:917   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":721:947   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1134:1508   */\n    tag_59:\n        /* \"#utility.yul\":1211:1217   */\n      0x00\n        /* \"#utility.yul\":1219:1225   */\n      dup1\n        /* \"#utility.yul\":1227:1233   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x60\n        /* \"#utility.yul\":1268:1277   */\n      dup5\n        /* \"#utility.yul\":1259:1266   */\n      dup7\n        /* \"#utility.yul\":1255:1278   */\n      sub\n        /* \"#utility.yul\":1251:1283   */\n      slt\n        /* \"#utility.yul\":1248:1300   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":1296:1297   */\n      0x00\n        /* \"#utility.yul\":1293:1294   */\n      dup1\n        /* \"#utility.yul\":1286:1298   */\n      revert\n        /* \"#utility.yul\":1248:1300   */\n    tag_413:\n        /* \"#utility.yul\":1319:1348   */\n      tag_414\n        /* \"#utility.yul\":1338:1347   */\n      dup5\n        /* \"#utility.yul\":1319:1348   */\n      tag_398\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1309:1348   */\n      swap3\n      pop\n        /* \"#utility.yul\":1367:1405   */\n      tag_415\n        /* \"#utility.yul\":1401:1403   */\n      0x20\n        /* \"#utility.yul\":1390:1399   */\n      dup6\n        /* \"#utility.yul\":1386:1404   */\n      add\n        /* \"#utility.yul\":1367:1405   */\n      tag_398\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":1134:1508   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1357:1405   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1474:1476   */\n      0x40\n        /* \"#utility.yul\":1459:1477   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1446:1478   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1134:1508   */\n      jump\t// out\n        /* \"#utility.yul\":3276:3622   */\n    tag_102:\n        /* \"#utility.yul\":3344:3350   */\n      0x00\n        /* \"#utility.yul\":3352:3358   */\n      dup1\n        /* \"#utility.yul\":3405:3407   */\n      0x40\n        /* \"#utility.yul\":3393:3402   */\n      dup4\n        /* \"#utility.yul\":3384:3391   */\n      dup6\n        /* \"#utility.yul\":3380:3403   */\n      sub\n        /* \"#utility.yul\":3376:3408   */\n      slt\n        /* \"#utility.yul\":3373:3425   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":3421:3422   */\n      0x00\n        /* \"#utility.yul\":3418:3419   */\n      dup1\n        /* \"#utility.yul\":3411:3423   */\n      revert\n        /* \"#utility.yul\":3373:3425   */\n    tag_421:\n      pop\n      pop\n        /* \"#utility.yul\":3466:3489   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3586:3588   */\n      0x20\n        /* \"#utility.yul\":3571:3589   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3558:3590   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3276:3622   */\n      jump\t// out\n        /* \"#utility.yul\":3627:3877   */\n    tag_399:\n        /* \"#utility.yul\":3712:3713   */\n      0x00\n        /* \"#utility.yul\":3722:3835   */\n    tag_423:\n        /* \"#utility.yul\":3736:3742   */\n      dup4\n        /* \"#utility.yul\":3733:3734   */\n      dup2\n        /* \"#utility.yul\":3730:3743   */\n      lt\n        /* \"#utility.yul\":3722:3835   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3812:3823   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3806:3824   */\n      mload\n        /* \"#utility.yul\":3793:3804   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3786:3825   */\n      mstore\n        /* \"#utility.yul\":3758:3760   */\n      0x20\n        /* \"#utility.yul\":3751:3761   */\n      add\n        /* \"#utility.yul\":3722:3835   */\n      jump(tag_423)\n    tag_425:\n      pop\n      pop\n        /* \"#utility.yul\":3869:3870   */\n      0x00\n        /* \"#utility.yul\":3851:3867   */\n      swap2\n      add\n        /* \"#utility.yul\":3844:3871   */\n      mstore\n        /* \"#utility.yul\":3627:3877   */\n      jump\t// out\n        /* \"#utility.yul\":3882:4153   */\n    tag_400:\n        /* \"#utility.yul\":3924:3927   */\n      0x00\n        /* \"#utility.yul\":3962:3967   */\n      dup2\n        /* \"#utility.yul\":3956:3968   */\n      mload\n        /* \"#utility.yul\":3989:3995   */\n      dup1\n        /* \"#utility.yul\":3984:3987   */\n      dup5\n        /* \"#utility.yul\":3977:3996   */\n      mstore\n        /* \"#utility.yul\":4005:4081   */\n      tag_427\n        /* \"#utility.yul\":4074:4080   */\n      dup2\n        /* \"#utility.yul\":4067:4071   */\n      0x20\n        /* \"#utility.yul\":4062:4065   */\n      dup7\n        /* \"#utility.yul\":4058:4072   */\n      add\n        /* \"#utility.yul\":4051:4055   */\n      0x20\n        /* \"#utility.yul\":4044:4049   */\n      dup7\n        /* \"#utility.yul\":4040:4056   */\n      add\n        /* \"#utility.yul\":4005:4081   */\n      tag_399\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4135:4137   */\n      0x1f\n        /* \"#utility.yul\":4114:4129   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4110:4139   */\n      and\n        /* \"#utility.yul\":4101:4140   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4142:4146   */\n      0x20\n        /* \"#utility.yul\":4097:4147   */\n      add\n      swap3\n        /* \"#utility.yul\":3882:4153   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:5629   */\n    tag_108:\n        /* \"#utility.yul\":4376:4380   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4413:4422   */\n      dup3\n        /* \"#utility.yul\":4409:4427   */\n      add\n        /* \"#utility.yul\":4454:4456   */\n      0x20\n        /* \"#utility.yul\":4443:4452   */\n      dup4\n        /* \"#utility.yul\":4436:4457   */\n      mstore\n        /* \"#utility.yul\":4477:4483   */\n      dup1\n        /* \"#utility.yul\":4512:4518   */\n      dup5\n        /* \"#utility.yul\":4506:4519   */\n      mload\n        /* \"#utility.yul\":4543:4549   */\n      dup1\n        /* \"#utility.yul\":4535:4541   */\n      dup4\n        /* \"#utility.yul\":4528:4550   */\n      mstore\n        /* \"#utility.yul\":4581:4583   */\n      0x40\n        /* \"#utility.yul\":4570:4579   */\n      dup6\n        /* \"#utility.yul\":4566:4584   */\n      add\n        /* \"#utility.yul\":4559:4584   */\n      swap2\n      pop\n        /* \"#utility.yul\":4643:4645   */\n      0x40\n        /* \"#utility.yul\":4633:4639   */\n      dup2\n        /* \"#utility.yul\":4630:4631   */\n      0x05\n        /* \"#utility.yul\":4626:4640   */\n      shl\n        /* \"#utility.yul\":4615:4624   */\n      dup7\n        /* \"#utility.yul\":4611:4641   */\n      add\n        /* \"#utility.yul\":4607:4646   */\n      add\n        /* \"#utility.yul\":4593:4646   */\n      swap3\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4673:4679   */\n      dup7\n        /* \"#utility.yul\":4669:4684   */\n      add\n        /* \"#utility.yul\":4702:4703   */\n      0x00\n        /* \"#utility.yul\":4712:5600   */\n    tag_429:\n        /* \"#utility.yul\":4726:4732   */\n      dup3\n        /* \"#utility.yul\":4723:4724   */\n      dup2\n        /* \"#utility.yul\":4720:4733   */\n      lt\n        /* \"#utility.yul\":4712:5600   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":4791:4813   */\n      dup7\n      dup6\n      sub\n      not(0x3f)\n        /* \"#utility.yul\":4787:4823   */\n      add\n        /* \"#utility.yul\":4775:4824   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4847:4860   */\n      dup2\n      mload\n        /* \"#utility.yul\":4883:4892   */\n      dup1\n      mload\n        /* \"#utility.yul\":4924:4933   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4920:4955   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4905:4956   */\n      dup9\n      mstore\n        /* \"#utility.yul\":5011:5013   */\n      0x20\n        /* \"#utility.yul\":5003:5014   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":4997:5015   */\n      mload\n        /* \"#utility.yul\":4993:5037   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4976:4991   */\n      dup2\n      dup10\n      add\n        /* \"#utility.yul\":4969:5038   */\n      mstore\n        /* \"#utility.yul\":5089:5091   */\n      0x40\n        /* \"#utility.yul\":5081:5092   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5075:5093   */\n      mload\n        /* \"#utility.yul\":5058:5073   */\n      dup2\n      dup11\n      add\n        /* \"#utility.yul\":5051:5094   */\n      mstore\n        /* \"#utility.yul\":5147:5151   */\n      0x60\n        /* \"#utility.yul\":5139:5152   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":5133:5153   */\n      mload\n        /* \"#utility.yul\":5114:5131   */\n      swap1\n      dup11\n      add\n        /* \"#utility.yul\":5107:5154   */\n      mstore\n        /* \"#utility.yul\":5207:5211   */\n      0x80\n        /* \"#utility.yul\":5199:5212   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":5193:5213   */\n      mload\n        /* \"#utility.yul\":5174:5191   */\n      swap1\n      dup11\n      add\n        /* \"#utility.yul\":5167:5214   */\n      mstore\n        /* \"#utility.yul\":4943:4946   */\n      0xa0\n        /* \"#utility.yul\":5273:5286   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":5267:5287   */\n      mload\n        /* \"#utility.yul\":5260:5288   */\n      iszero\n        /* \"#utility.yul\":5253:5289   */\n      iszero\n        /* \"#utility.yul\":5234:5251   */\n      swap3\n      dup10\n      add\n        /* \"#utility.yul\":5227:5290   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5335:5346   */\n      dup3\n      add\n        /* \"#utility.yul\":5329:5347   */\n      mload\n        /* \"#utility.yul\":5322:5326   */\n      0xc0\n        /* \"#utility.yul\":5310:5327   */\n      dup9\n      add\n        /* \"#utility.yul\":5303:5348   */\n      mstore\n        /* \"#utility.yul\":5387:5398   */\n      add\n        /* \"#utility.yul\":5381:5399   */\n      mload\n        /* \"#utility.yul\":5438:5444   */\n      0x0100\n        /* \"#utility.yul\":5431:5435   */\n      0xe0\n        /* \"#utility.yul\":5419:5436   */\n      dup8\n      add\n        /* \"#utility.yul\":5412:5445   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5468:5520   */\n      tag_432\n      swap1\n        /* \"#utility.yul\":5500:5519   */\n      dup8\n      add\n        /* \"#utility.yul\":5381:5399   */\n      dup3\n        /* \"#utility.yul\":5468:5520   */\n      tag_400\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5458:5520   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":5555:5557   */\n      0x20\n        /* \"#utility.yul\":5578:5590   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":5543:5558   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":4748:4749   */\n      0x01\n        /* \"#utility.yul\":4741:4750   */\n      add\n        /* \"#utility.yul\":4712:5600   */\n      jump(tag_429)\n    tag_431:\n      pop\n        /* \"#utility.yul\":5617:5623   */\n      swap3\n      swap7\n        /* \"#utility.yul\":4158:5629   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5634:5820   */\n    tag_119:\n        /* \"#utility.yul\":5693:5699   */\n      0x00\n        /* \"#utility.yul\":5746:5748   */\n      0x20\n        /* \"#utility.yul\":5734:5743   */\n      dup3\n        /* \"#utility.yul\":5725:5732   */\n      dup5\n        /* \"#utility.yul\":5721:5744   */\n      sub\n        /* \"#utility.yul\":5717:5749   */\n      slt\n        /* \"#utility.yul\":5714:5766   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":5762:5763   */\n      0x00\n        /* \"#utility.yul\":5759:5760   */\n      dup1\n        /* \"#utility.yul\":5752:5764   */\n      revert\n        /* \"#utility.yul\":5714:5766   */\n    tag_434:\n        /* \"#utility.yul\":5785:5814   */\n      tag_373\n        /* \"#utility.yul\":5804:5813   */\n      dup3\n        /* \"#utility.yul\":5785:5814   */\n      tag_398\n      jump\t// in\n        /* \"#utility.yul\":6175:6595   */\n    tag_153:\n        /* \"#utility.yul\":6252:6258   */\n      0x00\n        /* \"#utility.yul\":6260:6266   */\n      dup1\n        /* \"#utility.yul\":6268:6274   */\n      0x00\n        /* \"#utility.yul\":6321:6323   */\n      0x60\n        /* \"#utility.yul\":6309:6318   */\n      dup5\n        /* \"#utility.yul\":6300:6307   */\n      dup7\n        /* \"#utility.yul\":6296:6319   */\n      sub\n        /* \"#utility.yul\":6292:6324   */\n      slt\n        /* \"#utility.yul\":6289:6341   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6337:6338   */\n      0x00\n        /* \"#utility.yul\":6334:6335   */\n      dup1\n        /* \"#utility.yul\":6327:6339   */\n      revert\n        /* \"#utility.yul\":6289:6341   */\n    tag_438:\n        /* \"#utility.yul\":6360:6389   */\n      tag_439\n        /* \"#utility.yul\":6379:6388   */\n      dup5\n        /* \"#utility.yul\":6360:6389   */\n      tag_398\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6350:6389   */\n      swap6\n        /* \"#utility.yul\":6458:6460   */\n      0x20\n        /* \"#utility.yul\":6443:6461   */\n      dup6\n      add\n        /* \"#utility.yul\":6430:6462   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":6559:6561   */\n      0x40\n        /* \"#utility.yul\":6544:6562   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":6531:6563   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":6175:6595   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6853:7191   */\n    tag_169:\n        /* \"#utility.yul\":7055:7057   */\n      0x20\n        /* \"#utility.yul\":7037:7058   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7094:7096   */\n      0x0e\n        /* \"#utility.yul\":7074:7092   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7067:7097   */\n      mstore\n      shl(0x91, 0x283632b0b9b2903bb0b4ba171717)\n        /* \"#utility.yul\":7128:7130   */\n      0x40\n        /* \"#utility.yul\":7113:7131   */\n      dup3\n      add\n        /* \"#utility.yul\":7106:7150   */\n      mstore\n        /* \"#utility.yul\":7182:7184   */\n      0x60\n        /* \"#utility.yul\":7167:7185   */\n      add\n      swap1\n        /* \"#utility.yul\":6853:7191   */\n      jump\t// out\n        /* \"#utility.yul\":7623:7750   */\n    tag_401:\n        /* \"#utility.yul\":7684:7694   */\n      0x4e487b71\n        /* \"#utility.yul\":7679:7682   */\n      0xe0\n        /* \"#utility.yul\":7675:7695   */\n      shl\n        /* \"#utility.yul\":7672:7673   */\n      0x00\n        /* \"#utility.yul\":7665:7696   */\n      mstore\n        /* \"#utility.yul\":7715:7719   */\n      0x11\n        /* \"#utility.yul\":7712:7713   */\n      0x04\n        /* \"#utility.yul\":7705:7720   */\n      mstore\n        /* \"#utility.yul\":7739:7743   */\n      0x24\n        /* \"#utility.yul\":7736:7737   */\n      0x00\n        /* \"#utility.yul\":7729:7744   */\n      revert\n        /* \"#utility.yul\":7755:7880   */\n    tag_174:\n        /* \"#utility.yul\":7820:7829   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7841:7851   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7838:7874   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":7854:7872   */\n      tag_372\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":7885:8053   */\n    tag_178:\n        /* \"#utility.yul\":7958:7967   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7989:7998   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8006:8021   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8000:8022   */\n      dup5\n      eq\n        /* \"#utility.yul\":7986:8023   */\n      or\n        /* \"#utility.yul\":7976:8047   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":8027:8045   */\n      tag_372\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":8058:8186   */\n    tag_185:\n        /* \"#utility.yul\":8125:8134   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8146:8157   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8143:8180   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":8160:8178   */\n      tag_372\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":8890:9026   */\n    tag_202:\n        /* \"#utility.yul\":8929:8932   */\n      0x00\n        /* \"#utility.yul\":8957:8962   */\n      dup2\n        /* \"#utility.yul\":8947:8986   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8966:8984   */\n      tag_457\n      tag_401\n      jump\t// in\n    tag_457:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":9002:9020   */\n      add\n      swap1\n        /* \"#utility.yul\":8890:9026   */\n      jump\t// out\n        /* \"#utility.yul\":9031:9402   */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9251:9283   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":9233:9284   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9320:9352   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9315:9317   */\n      0x20\n        /* \"#utility.yul\":9300:9318   */\n      dup3\n      add\n        /* \"#utility.yul\":9293:9353   */\n      mstore\n        /* \"#utility.yul\":9384:9386   */\n      0x40\n        /* \"#utility.yul\":9369:9387   */\n      dup2\n      add\n        /* \"#utility.yul\":9362:9396   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9221:9223   */\n      0x60\n        /* \"#utility.yul\":9206:9224   */\n      add\n      swap1\n        /* \"#utility.yul\":9031:9402   */\n      jump\t// out\n        /* \"#utility.yul\":9407:9534   */\n    tag_223:\n        /* \"#utility.yul\":9468:9478   */\n      0x4e487b71\n        /* \"#utility.yul\":9463:9466   */\n      0xe0\n        /* \"#utility.yul\":9459:9479   */\n      shl\n        /* \"#utility.yul\":9456:9457   */\n      0x00\n        /* \"#utility.yul\":9449:9480   */\n      mstore\n        /* \"#utility.yul\":9499:9503   */\n      0x41\n        /* \"#utility.yul\":9496:9497   */\n      0x04\n        /* \"#utility.yul\":9489:9504   */\n      mstore\n        /* \"#utility.yul\":9523:9527   */\n      0x24\n        /* \"#utility.yul\":9520:9521   */\n      0x00\n        /* \"#utility.yul\":9513:9528   */\n      revert\n        /* \"#utility.yul\":9539:10455   */\n    tag_237:\n        /* \"#utility.yul\":9619:9625   */\n      0x00\n        /* \"#utility.yul\":9672:9674   */\n      0x20\n        /* \"#utility.yul\":9660:9669   */\n      dup3\n        /* \"#utility.yul\":9651:9658   */\n      dup5\n        /* \"#utility.yul\":9647:9670   */\n      sub\n        /* \"#utility.yul\":9643:9675   */\n      slt\n        /* \"#utility.yul\":9640:9692   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":9688:9689   */\n      0x00\n        /* \"#utility.yul\":9685:9686   */\n      dup1\n        /* \"#utility.yul\":9678:9690   */\n      revert\n        /* \"#utility.yul\":9640:9692   */\n    tag_461:\n        /* \"#utility.yul\":9721:9730   */\n      dup2\n        /* \"#utility.yul\":9715:9731   */\n      mload\n        /* \"#utility.yul\":9754:9772   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9746:9752   */\n      dup2\n        /* \"#utility.yul\":9743:9773   */\n      gt\n        /* \"#utility.yul\":9740:9790   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":9786:9787   */\n      0x00\n        /* \"#utility.yul\":9783:9784   */\n      dup1\n        /* \"#utility.yul\":9776:9788   */\n      revert\n        /* \"#utility.yul\":9740:9790   */\n    tag_462:\n        /* \"#utility.yul\":9809:9831   */\n      dup3\n      add\n        /* \"#utility.yul\":9862:9866   */\n      0x1f\n        /* \"#utility.yul\":9854:9867   */\n      dup2\n      add\n        /* \"#utility.yul\":9850:9877   */\n      dup5\n      sgt\n        /* \"#utility.yul\":9840:9895   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9891:9892   */\n      0x00\n        /* \"#utility.yul\":9888:9889   */\n      dup1\n        /* \"#utility.yul\":9881:9893   */\n      revert\n        /* \"#utility.yul\":9840:9895   */\n    tag_463:\n        /* \"#utility.yul\":9924:9926   */\n      dup1\n        /* \"#utility.yul\":9918:9927   */\n      mload\n        /* \"#utility.yul\":9950:9968   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9942:9948   */\n      dup2\n        /* \"#utility.yul\":9939:9969   */\n      gt\n        /* \"#utility.yul\":9936:9992   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":9972:9990   */\n      tag_465\n      tag_223\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10021:10023   */\n      0x40\n        /* \"#utility.yul\":10015:10024   */\n      mload\n        /* \"#utility.yul\":10113:10115   */\n      0x1f\n        /* \"#utility.yul\":10075:10092   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10071:10102   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":10104:10106   */\n      0x3f\n        /* \"#utility.yul\":10067:10107   */\n      add\n        /* \"#utility.yul\":10063:10117   */\n      and\n        /* \"#utility.yul\":10051:10118   */\n      dup2\n      add\n        /* \"#utility.yul\":10148:10166   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10133:10167   */\n      dup2\n      gt\n        /* \"#utility.yul\":10169:10191   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":10130:10192   */\n      or\n        /* \"#utility.yul\":10127:10215   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10195:10213   */\n      tag_467\n      tag_223\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10231:10233   */\n      0x40\n        /* \"#utility.yul\":10224:10246   */\n      mstore\n        /* \"#utility.yul\":10255:10277   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":10296:10311   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10313:10315   */\n      0x20\n        /* \"#utility.yul\":10292:10316   */\n      add\n        /* \"#utility.yul\":10289:10326   */\n      dup7\n      lt\n        /* \"#utility.yul\":10286:10343   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":10339:10340   */\n      0x00\n        /* \"#utility.yul\":10336:10337   */\n      dup1\n        /* \"#utility.yul\":10329:10341   */\n      revert\n        /* \"#utility.yul\":10286:10343   */\n    tag_468:\n        /* \"#utility.yul\":10352:10424   */\n      tag_469\n        /* \"#utility.yul\":10417:10423   */\n      dup3\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10404:10410   */\n      dup4\n        /* \"#utility.yul\":10400:10415   */\n      add\n        /* \"#utility.yul\":10395:10397   */\n      0x20\n        /* \"#utility.yul\":10391:10393   */\n      dup7\n        /* \"#utility.yul\":10387:10398   */\n      add\n        /* \"#utility.yul\":10352:10424   */\n      tag_399\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10443:10449   */\n      swap6\n        /* \"#utility.yul\":9539:10455   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10460:10587   */\n    tag_240:\n        /* \"#utility.yul\":10521:10531   */\n      0x4e487b71\n        /* \"#utility.yul\":10516:10519   */\n      0xe0\n        /* \"#utility.yul\":10512:10532   */\n      shl\n        /* \"#utility.yul\":10509:10510   */\n      0x00\n        /* \"#utility.yul\":10502:10533   */\n      mstore\n        /* \"#utility.yul\":10552:10556   */\n      0x32\n        /* \"#utility.yul\":10549:10550   */\n      0x04\n        /* \"#utility.yul\":10542:10557   */\n      mstore\n        /* \"#utility.yul\":10576:10580   */\n      0x24\n        /* \"#utility.yul\":10573:10574   */\n      0x00\n        /* \"#utility.yul\":10566:10581   */\n      revert\n        /* \"#utility.yul\":10592:10727   */\n    tag_242:\n        /* \"#utility.yul\":10631:10634   */\n      0x00\n        /* \"#utility.yul\":10652:10669   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10649:10692   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10672:10690   */\n      tag_473\n      tag_401\n      jump\t// in\n    tag_473:\n      pop\n        /* \"#utility.yul\":10719:10720   */\n      0x01\n        /* \"#utility.yul\":10708:10721   */\n      add\n      swap1\n        /* \"#utility.yul\":10592:10727   */\n      jump\t// out\n        /* \"#utility.yul\":13957:14174   */\n    tag_328:\n        /* \"#utility.yul\":13997:13998   */\n      0x00\n        /* \"#utility.yul\":14023:14024   */\n      dup3\n        /* \"#utility.yul\":14013:14145   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":14067:14077   */\n      0x4e487b71\n        /* \"#utility.yul\":14062:14065   */\n      0xe0\n        /* \"#utility.yul\":14058:14078   */\n      shl\n        /* \"#utility.yul\":14055:14056   */\n      0x00\n        /* \"#utility.yul\":14048:14079   */\n      mstore\n        /* \"#utility.yul\":14102:14106   */\n      0x12\n        /* \"#utility.yul\":14099:14100   */\n      0x04\n        /* \"#utility.yul\":14092:14107   */\n      mstore\n        /* \"#utility.yul\":14130:14134   */\n      0x24\n        /* \"#utility.yul\":14127:14128   */\n      0x00\n        /* \"#utility.yul\":14120:14135   */\n      revert\n        /* \"#utility.yul\":14013:14145   */\n    tag_484:\n      pop\n        /* \"#utility.yul\":14159:14168   */\n      div\n      swap1\n        /* \"#utility.yul\":13957:14174   */\n      jump\t// out\n        /* \"#utility.yul\":14895:15172   */\n    tag_368:\n        /* \"#utility.yul\":14962:14968   */\n      0x00\n        /* \"#utility.yul\":15015:15017   */\n      0x20\n        /* \"#utility.yul\":15003:15012   */\n      dup3\n        /* \"#utility.yul\":14994:15001   */\n      dup5\n        /* \"#utility.yul\":14990:15013   */\n      sub\n        /* \"#utility.yul\":14986:15018   */\n      slt\n        /* \"#utility.yul\":14983:15035   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":15031:15032   */\n      0x00\n        /* \"#utility.yul\":15028:15029   */\n      dup1\n        /* \"#utility.yul\":15021:15033   */\n      revert\n        /* \"#utility.yul\":14983:15035   */\n    tag_488:\n        /* \"#utility.yul\":15063:15072   */\n      dup2\n        /* \"#utility.yul\":15057:15073   */\n      mload\n        /* \"#utility.yul\":15116:15121   */\n      dup1\n        /* \"#utility.yul\":15109:15122   */\n      iszero\n        /* \"#utility.yul\":15102:15123   */\n      iszero\n        /* \"#utility.yul\":15095:15100   */\n      dup2\n        /* \"#utility.yul\":15092:15124   */\n      eq\n        /* \"#utility.yul\":15082:15142   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":15138:15139   */\n      0x00\n        /* \"#utility.yul\":15135:15136   */\n      dup1\n        /* \"#utility.yul\":15128:15140   */\n      revert\n        /* \"#utility.yul\":15177:15464   */\n    tag_379:\n        /* \"#utility.yul\":15306:15309   */\n      0x00\n        /* \"#utility.yul\":15344:15350   */\n      dup3\n        /* \"#utility.yul\":15338:15351   */\n      mload\n        /* \"#utility.yul\":15360:15426   */\n      tag_491\n        /* \"#utility.yul\":15419:15425   */\n      dup2\n        /* \"#utility.yul\":15414:15417   */\n      dup5\n        /* \"#utility.yul\":15407:15411   */\n      0x20\n        /* \"#utility.yul\":15399:15405   */\n      dup8\n        /* \"#utility.yul\":15395:15412   */\n      add\n        /* \"#utility.yul\":15360:15426   */\n      tag_399\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":15442:15458   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":15177:15464   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220618a9aa8ae3be73f2f4aed89dbe00508b35be14d491773c96e2f61b9085a2e8464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3989": {
									"entryPoint": null,
									"id": 3989,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 147,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_contract$_IERC721_$1879t_address_fromMemory": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:895:19",
										"nodeType": "YulBlock",
										"src": "0:895:19",
										"statements": [
											{
												"nativeSrc": "6:3:19",
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:19",
													"nodeType": "YulBlock",
													"src": "59:86:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:19",
																"nodeType": "YulBlock",
																"src": "123:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:19",
																					"nodeType": "YulLiteral",
																					"src": "132:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:19",
																					"nodeType": "YulLiteral",
																					"src": "135:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:19"
																			},
																			"nativeSrc": "125:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:19"
																		},
																		"nativeSrc": "125:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:19",
																										"nodeType": "YulLiteral",
																										"src": "108:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:19",
																										"nodeType": "YulLiteral",
																										"src": "113:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:19"
																								},
																								"nativeSrc": "104:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:19",
																								"nodeType": "YulLiteral",
																								"src": "117:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:19"
																						},
																						"nativeSrc": "100:19:19",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:19"
																				},
																				"nativeSrc": "89:31:19",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:19"
																		},
																		"nativeSrc": "79:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:19"
																},
																"nativeSrc": "72:50:19",
																"nodeType": "YulFunctionCall",
																"src": "72:50:19"
															},
															"nativeSrc": "69:70:19",
															"nodeType": "YulIf",
															"src": "69:70:19"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:19",
														"nodeType": "YulTypedName",
														"src": "48:5:19",
														"type": ""
													}
												],
												"src": "14:131:19"
											},
											{
												"body": {
													"nativeSrc": "281:404:19",
													"nodeType": "YulBlock",
													"src": "281:404:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "327:16:19",
																"nodeType": "YulBlock",
																"src": "327:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "336:1:19",
																					"nodeType": "YulLiteral",
																					"src": "336:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "339:1:19",
																					"nodeType": "YulLiteral",
																					"src": "339:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "329:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "329:6:19"
																			},
																			"nativeSrc": "329:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "329:12:19"
																		},
																		"nativeSrc": "329:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "329:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "302:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "302:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "311:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "298:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "298:3:19"
																		},
																		"nativeSrc": "298:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "298:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "323:2:19",
																		"nodeType": "YulLiteral",
																		"src": "323:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "294:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "294:3:19"
																},
																"nativeSrc": "294:32:19",
																"nodeType": "YulFunctionCall",
																"src": "294:32:19"
															},
															"nativeSrc": "291:52:19",
															"nodeType": "YulIf",
															"src": "291:52:19"
														},
														{
															"nativeSrc": "352:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "352:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "371:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "371:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "365:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "365:5:19"
																},
																"nativeSrc": "365:16:19",
																"nodeType": "YulFunctionCall",
																"src": "365:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "356:5:19",
																	"nodeType": "YulTypedName",
																	"src": "356:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "415:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "415:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "390:24:19",
																	"nodeType": "YulIdentifier",
																	"src": "390:24:19"
																},
																"nativeSrc": "390:31:19",
																"nodeType": "YulFunctionCall",
																"src": "390:31:19"
															},
															"nativeSrc": "390:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "390:31:19"
														},
														{
															"nativeSrc": "430:15:19",
															"nodeType": "YulAssignment",
															"src": "430:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "440:5:19",
																"nodeType": "YulIdentifier",
																"src": "440:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "430:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "430:6:19"
																}
															]
														},
														{
															"nativeSrc": "454:40:19",
															"nodeType": "YulVariableDeclaration",
															"src": "454:40:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "479:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "479:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "490:2:19",
																				"nodeType": "YulLiteral",
																				"src": "490:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "475:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:19"
																		},
																		"nativeSrc": "475:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "475:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "469:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "469:5:19"
																},
																"nativeSrc": "469:25:19",
																"nodeType": "YulFunctionCall",
																"src": "469:25:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "458:7:19",
																	"nodeType": "YulTypedName",
																	"src": "458:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "528:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "528:7:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "503:24:19",
																	"nodeType": "YulIdentifier",
																	"src": "503:24:19"
																},
																"nativeSrc": "503:33:19",
																"nodeType": "YulFunctionCall",
																"src": "503:33:19"
															},
															"nativeSrc": "503:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "503:33:19"
														},
														{
															"nativeSrc": "545:17:19",
															"nodeType": "YulAssignment",
															"src": "545:17:19",
															"value": {
																"name": "value_1",
																"nativeSrc": "555:7:19",
																"nodeType": "YulIdentifier",
																"src": "555:7:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "545:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:19"
																}
															]
														},
														{
															"nativeSrc": "571:40:19",
															"nodeType": "YulVariableDeclaration",
															"src": "571:40:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "596:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "596:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "607:2:19",
																				"nodeType": "YulLiteral",
																				"src": "607:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "592:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "592:3:19"
																		},
																		"nativeSrc": "592:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "592:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "586:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "586:5:19"
																},
																"nativeSrc": "586:25:19",
																"nodeType": "YulFunctionCall",
																"src": "586:25:19"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "575:7:19",
																	"nodeType": "YulTypedName",
																	"src": "575:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "645:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "645:7:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "620:24:19",
																	"nodeType": "YulIdentifier",
																	"src": "620:24:19"
																},
																"nativeSrc": "620:33:19",
																"nodeType": "YulFunctionCall",
																"src": "620:33:19"
															},
															"nativeSrc": "620:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "620:33:19"
														},
														{
															"nativeSrc": "662:17:19",
															"nodeType": "YulAssignment",
															"src": "662:17:19",
															"value": {
																"name": "value_2",
																"nativeSrc": "672:7:19",
																"nodeType": "YulIdentifier",
																"src": "672:7:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "662:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "662:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IERC721_$1879t_address_fromMemory",
												"nativeSrc": "150:535:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:19",
														"nodeType": "YulTypedName",
														"src": "231:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:19",
														"nodeType": "YulTypedName",
														"src": "242:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:19",
														"nodeType": "YulTypedName",
														"src": "254:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "262:6:19",
														"nodeType": "YulTypedName",
														"src": "262:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "270:6:19",
														"nodeType": "YulTypedName",
														"src": "270:6:19",
														"type": ""
													}
												],
												"src": "150:535:19"
											},
											{
												"body": {
													"nativeSrc": "791:102:19",
													"nodeType": "YulBlock",
													"src": "791:102:19",
													"statements": [
														{
															"nativeSrc": "801:26:19",
															"nodeType": "YulAssignment",
															"src": "801:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "813:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "813:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:19",
																		"nodeType": "YulLiteral",
																		"src": "824:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "809:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:19"
																},
																"nativeSrc": "809:18:19",
																"nodeType": "YulFunctionCall",
																"src": "809:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "801:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "801:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "843:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "858:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "858:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:3:19",
																								"nodeType": "YulLiteral",
																								"src": "874:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "879:1:19",
																								"nodeType": "YulLiteral",
																								"src": "879:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "870:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:19"
																						},
																						"nativeSrc": "870:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "870:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "883:1:19",
																						"nodeType": "YulLiteral",
																						"src": "883:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "866:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "866:3:19"
																				},
																				"nativeSrc": "866:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "866:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "854:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:19"
																		},
																		"nativeSrc": "854:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "854:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "836:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:19"
																},
																"nativeSrc": "836:51:19",
																"nodeType": "YulFunctionCall",
																"src": "836:51:19"
															},
															"nativeSrc": "836:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "836:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "690:203:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "760:9:19",
														"nodeType": "YulTypedName",
														"src": "760:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "771:6:19",
														"nodeType": "YulTypedName",
														"src": "771:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "782:4:19",
														"nodeType": "YulTypedName",
														"src": "782:4:19",
														"type": ""
													}
												],
												"src": "690:203:19"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC721_$1879t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051611f9a380380611f9a83398101604081905261002f916100fd565b6001600055826001600160a01b03811661006357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006c81610093565b50600380546001600160a01b0319166001600160a01b03938416179055166080525061014a565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146100fa57600080fd5b50565b60008060006060848603121561011257600080fd5b835161011d816100e5565b602085015190935061012e816100e5565b604085015190925061013f816100e5565b809150509250925092565b608051611e2061017a600039600081816104fc0152818161088b0152818161105301526110900152611e206000f3fe60806040526004361061019c5760003560e01c80639158444b116100ec578063bb623d131161008a578063d84c0fd311610064578063d84c0fd314610655578063ec4b65e7146106c0578063f0441f95146106e0578063f2fde38b1461071557600080fd5b8063bb623d131461058b578063c456fc9e146105ab578063c85e4d491461061d57600080fd5b80639d76ea58116100c65780639d76ea58146104ea578063a34805691461051e578063b8237ab71461054b578063ba41c8441461056b57600080fd5b80639158444b146104955780639677ca0b146104b55780639d02e67c146104d757600080fd5b8063716135c71161015957806378e979251161013357806378e979251461035d57806384fccd5e146103735780638d02f792146104185780638da5cb5b1461047757600080fd5b8063716135c71461028657806373233ea61461029d578063772635ee1461034757600080fd5b806303d07340146101a157806319f34bf3146101de5780631e903868146102005780633197cbb61461023b578063699d503a14610251578063715018a614610271575b600080fd5b3480156101ad57600080fd5b506003546101c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ea57600080fd5b506101fe6101f93660046119d2565b610735565b005b34801561020c57600080fd5b5061022d61021b3660046119fc565b60096020526000908152604090205481565b6040519081526020016101d5565b34801561024757600080fd5b5061022d60065481565b34801561025d57600080fd5b506101fe61026c366004611a15565b610949565b34801561027d57600080fd5b506101fe610abc565b34801561029257600080fd5b5060025461022d9081565b3480156102a957600080fd5b506103046102b83660046119fc565b600a60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b039485169594909316939192909160ff1687565b604080519788526001600160a01b03968716602089015294909516938601939093526060850191909152608084015260a0830152151560c082015260e0016101d5565b34801561035357600080fd5b5061022d60045481565b34801561036957600080fd5b5061022d60055481565b34801561037f57600080fd5b506103de61038e3660046119d2565b600e6020908152600092835260408084209091529082529020805460018201546002830154600384015460048501546005909501546001600160a01b039485169593909416939192909160ff1686565b604080516001600160a01b0397881681529690951660208701529385019290925260608401526080830152151560a082015260c0016101d5565b34801561042457600080fd5b506104586104333660046119fc565b600760205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101d5565b34801561048357600080fd5b506001546001600160a01b03166101c1565b3480156104a157600080fd5b506101fe6104b0366004611a52565b610ad0565b3480156104c157600080fd5b506104ca610ae3565b6040516101d59190611ac4565b6101fe6104e5366004611a52565b610d1c565b3480156104f657600080fd5b506101c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561052a57600080fd5b5061022d610539366004611b8c565b60086020526000908152604090205481565b34801561055757600080fd5b506101fe6105663660046119d2565b61103e565b34801561057757600080fd5b506101fe6105863660046119d2565b61107b565b34801561059757600080fd5b506101fe6105a6366004611a15565b6110b8565b3480156105b757600080fd5b506103046105c63660046119d2565b600c602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b039485169594909316939192909160ff1687565b34801561062957600080fd5b5061022d6106383660046119d2565b600d60209081526000928352604080842090915290825290205481565b34801561066157600080fd5b5061069b6106703660046119fc565b600b602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060016101d5565b3480156106cc57600080fd5b506101fe6106db366004611ba7565b6112e1565b3480156106ec57600080fd5b506107006106fb3660046119fc565b611582565b604080519283526020830191909152016101d5565b34801561072157600080fd5b506101fe610730366004611b8c565b611624565b60008061074183611582565b915091508060000361076e5760405162461bcd60e51b815260040161076590611bda565b60405180910390fd5b6000838152600a6020526040902060040154600c036107f55760405162461bcd60e51b815260206004820152603a60248201527f596f75206861766520636c61696d656420796f757220616c6c2072657761726460448201527f73206163636f7264696e6720746f2074686973204e46542e2e2e0000000000006064820152608401610765565b6000838152600a6020526040902060040154600c90610815908390611c18565b10156108b7576000838152600a60205260408120600401805483929061083c908490611c18565b9091555061084c90508183611c2b565b6000848152600a60205260408120600301805490919061086d908490611c18565b909155506108b29050846108818385611c2b565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611662565b610943565b6000838152600a60205260408120600401546108d490600c611c42565b905080600a600086815260200190815260200160002060040160008282546108fc9190611c18565b9091555061090c90508184611c2b565b6000858152600a60205260408120600301805490919061092d908490611c18565b909155506109419050856108818386611c2b565b505b50505050565b8082426006541061096c5760405162461bcd60e51b815260040161076590611bda565b6000828152600a60205260409020600101546001600160a01b038281169116146109d85760405162461bcd60e51b815260206004820152601e60248201527f596f7520617265206e6f74206f776e6572206f662074686973204e46542e00006044820152606401610765565b6000828152600a602052604090206006015460ff16610a275760405162461bcd60e51b815260206004820152600b60248201526a2727aa102627a1a5a2a21760a91b6044820152606401610765565b6000838152600a60205260408120600601805460ff191690556004805491610a4e83611c55565b90915550506040516323b872dd60e01b81526001600160a01b038616906323b872dd90610a8390309088908890600401611c6c565b600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050505050505050565b610ac46116c1565b610ace60006116ee565b565b610ad86116c1565b600591909155600655565b60606000610af060025490565b905060008167ffffffffffffffff811115610b0d57610b0d611c90565b604051908082528060200260200182016040528015610b8857816020015b6040805161012081018252600060608083018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390528352602083019190915291810191909152815260200190600190039081610b2b5790505b509050600060015b6002548111610d1357600081815260076020908152604080832080546001600160a01b03168452600e8352818420600190910154845290915290206005015460ff1615610d01576040805160008381526007602081815284832080546001600160a01b03908116808652600e845287862060019384015480885290855288872061012089018a528054841660608a01908152948101549093166080890152600283015460a0890152600383015460c089015260048084015460e08a015260059093015460ff16151561010089015292875283870189905294889052929091528451638ad9134560e01b8152918201529192830191638ad9134590602401600060405180830381865afa158015610caa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cd29190810190611ca6565b815250838381518110610ce757610ce7611d5b565b60200260200101819052508180610cfd90611d71565b9250505b80610d0b81611d71565b915050610b90565b50909392505050565b610d24611740565b600082815260076020908152604080832080546001600160a01b039081168552600e8452828520600190920154855292529091205433911603610da95760405162461bcd60e51b815260206004820152601860248201527f4f776e65722043616e27742042757920497473204e66747300000000000000006044820152606401610765565b600082815260076020908152604080832080546001600160a01b03168452600e83528184206001909101548452909152902060040154811015610e3d5760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760448201526520707269636560d01b6064820152608401610765565b600082815260076020908152604080832080546001600160a01b039081168552600e845282852060019092015485529252808320600481015490549151909391909216916108fc84150291849190818181858888f19350505050158015610ea8573d6000803e3d6000fd5b5060008381526007602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116916323b872dd91610ef0913091339190600401611c6c565b600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050600084815260076020908152604080832080546001918201546001600160a01b03918216808752600e865284872082885290955294839020909101549151636e0cee0960e01b815233600482015260248101949094521660448301529150636e0cee0990606401600060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050600084815260076020818152604080842080546001600160a01b03168552600e835281852060019091015485529091528220600501805460ff19169055915061100160025490565b81526020810191909152604001600090812080546001600160a01b03191681556001015561102f6002611799565b5061103a6001600055565b5050565b6110466116c1565b61103a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168330846117f0565b6110836116c1565b61103a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163084846117f0565b80600654600554036110dc5760405162461bcd60e51b815260040161076590611bda565b42600554106111215760405162461bcd60e51b81526020600482015260116024820152702a34b6b2902737ba1029ba30b93a17171760791b6044820152606401610765565b426006541161115e5760405162461bcd60e51b81526020600482015260096024820152682a34b6b29022b7321760b91b6044820152606401610765565b6000818152600a602052604090206006015460ff16156111b15760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4814dd185ad95960921b6044820152606401610765565b6040805160e0810182528381526001600160a01b03858116602080840191825230848601908152600060608601818152608087018281524260a08901908152600160c08a018181528d8652600a90975299842098518955955198880180546001600160a01b03199081169a89169a909a17905592516002880180549099169616959095179096559251600385015591516004808501919091559051600584015590516006909201805460ff19169215159290921790915580549161127483611d71565b90915550506040516323b872dd60e01b81526001600160a01b038516906323b872dd906112a990869030908790600401611c6c565b600060405180830381600087803b1580156112c357600080fd5b505af11580156112d7573d6000803e3d6000fd5b5050505050505050565b6112e9611740565b6001600160a01b0383166000908152600e6020908152604080832084845290915290206005015460ff16156113605760405162461bcd60e51b815260206004820152601e60248201527f416c7265616479204c697374656420496e204d61726b6574706c6163652100006044820152606401610765565b6001600160a01b0383166000908152600c6020908152604080832084845290915290206006015460ff16156113cc5760405162461bcd60e51b815260206004820152601260248201527113919508185b1c9958591e481cdd185ad95960721b6044820152606401610765565b6113da600280546001019055565b6040805160c0810182523381523060208201529081018290526060810161140060025490565b81526020808201859052600160409283018190526001600160a01b038088166000818152600e85528581208882528552858120875181549085166001600160a01b03199182161782558887015195820180549690951695169490941790925585850151600280850191909155606087015160038501556080870151600485015560a0909601516005909301805493151560ff199094169390931790925583518085019094529083529082018490529091600791906114bc905490565b81526020808201929092526040908101600020835181546001600160a01b0319166001600160a01b039182161782559390920151600190920191909155516323b872dd60e01b8152908416906323b872dd9061152090339030908690600401611c6c565b600060405180830381600087803b15801561153a57600080fd5b505af115801561154e573d6000803e3d6000fd5b505033600090815260086020526040812080549350915061156e83611d71565b919050555061157d6001600055565b505050565b6000818152600a60205260408120600401548190603c906115a39082611c2b565b6006546115b09042611c42565b6115ba9190611c42565b10611619576000838152600a6020526040812060040154603c906115de9082611c2b565b6006546115eb9042611c42565b6115f59190611c42565b6115ff9190611d8a565b9050600061160e826001611c2b565b959194509092505050565b506000928392509050565b61162c6116c1565b6001600160a01b03811661165657604051631e4fbdf760e01b815260006004820152602401610765565b61165f816116ee565b50565b6040516001600160a01b0383811660248301526044820183905261157d91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611818565b6001546001600160a01b03163314610ace5760405163118cdaa760e01b8152336004820152602401610765565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600054036117925760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610765565b6002600055565b8054806117e85760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006044820152606401610765565b600019019055565b61094384856001600160a01b03166323b872dd86868660405160240161168f93929190611c6c565b600061182d6001600160a01b0384168361187b565b905080516000141580156118525750808060200190518101906118509190611dac565b155b1561157d57604051635274afe760e01b81526001600160a01b0384166004820152602401610765565b606061188983836000611892565b90505b92915050565b6060814710156118b75760405163cd78605960e01b8152306004820152602401610765565b600080856001600160a01b031684866040516118d39190611dce565b60006040518083038185875af1925050503d8060008114611910576040519150601f19603f3d011682016040523d82523d6000602084013e611915565b606091505b5091509150611925868383611931565b925050505b9392505050565b606082611946576119418261198d565b61192a565b815115801561195d57506001600160a01b0384163b155b1561198657604051639996b31560e01b81526001600160a01b0385166004820152602401610765565b508061192a565b80511561199d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146119cd57600080fd5b919050565b600080604083850312156119e557600080fd5b6119ee836119b6565b946020939093013593505050565b600060208284031215611a0e57600080fd5b5035919050565b600080600060608486031215611a2a57600080fd5b611a33846119b6565b9250611a41602085016119b6565b929592945050506040919091013590565b60008060408385031215611a6557600080fd5b50508035926020909101359150565b60005b83811015611a8f578181015183820152602001611a77565b50506000910152565b60008151808452611ab0816020860160208601611a74565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015611b8057868503603f190184528151805180516001600160a01b03908116885260208083015190911681890152604080830151818a0152606080840151908a0152608080840151908a015260a09283015115159289019290925282015160c0880152015161010060e08701819052611b6a90870182611a98565b9550506020938401939190910190600101611aec565b50929695505050505050565b600060208284031215611b9e57600080fd5b611889826119b6565b600080600060608486031215611bbc57600080fd5b611bc5846119b6565b95602085013595506040909401359392505050565b6020808252600e908201526d283632b0b9b2903bb0b4ba17171760911b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561188c5761188c611c02565b808202811582820484141761188c5761188c611c02565b8181038181111561188c5761188c611c02565b600081611c6457611c64611c02565b506000190190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611cb857600080fd5b815167ffffffffffffffff811115611ccf57600080fd5b8201601f81018413611ce057600080fd5b805167ffffffffffffffff811115611cfa57611cfa611c90565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611d2957611d29611c90565b604052818152828201602001861015611d4157600080fd5b611d52826020830160208601611a74565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611d8357611d83611c02565b5060010190565b600082611da757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611dbe57600080fd5b8151801515811461192a57600080fd5b60008251611de0818460208701611a74565b919091019291505056fea2646970667358221220618a9aa8ae3be73f2f4aed89dbe00508b35be14d491773c96e2f61b9085a2e8464736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F9A CODESIZE SUB DUP1 PUSH2 0x1F9A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C DUP2 PUSH2 0x93 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SSTORE AND PUSH1 0x80 MSTORE POP PUSH2 0x14A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x11D DUP2 PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x12E DUP2 PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x13F DUP2 PUSH2 0xE5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1E20 PUSH2 0x17A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4FC ADD MSTORE DUP2 DUP2 PUSH2 0x88B ADD MSTORE DUP2 DUP2 PUSH2 0x1053 ADD MSTORE PUSH2 0x1090 ADD MSTORE PUSH2 0x1E20 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9158444B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xBB623D13 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD84C0FD3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD84C0FD3 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xEC4B65E7 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xF0441F95 EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBB623D13 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xC456FC9E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xC85E4D49 EQ PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D76EA58 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xA3480569 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xB8237AB7 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xBA41C844 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9158444B EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x9677CA0B EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x9D02E67C EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x716135C7 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x78E97925 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x84FCCD5E EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x8D02F792 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x716135C7 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x73233EA6 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x772635EE EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D07340 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x19F34BF3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1E903868 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x699D503A EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0xABC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x22D SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 SWAP1 SWAP6 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DE PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP7 SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xD1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x586 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x107B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x10B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x6DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0x12E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x700 PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x730 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x741 DUP4 PUSH2 0x1582 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x0 SUB PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xC SUB PUSH2 0x7F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520636C61696D656420796F757220616C6C20726577617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206163636F7264696E6720746F2074686973204E46542E2E2E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xC SWAP1 PUSH2 0x815 SWAP1 DUP4 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST LT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x83C SWAP1 DUP5 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x84C SWAP1 POP DUP2 DUP4 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x86D SWAP1 DUP5 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8B2 SWAP1 POP DUP5 PUSH2 0x881 DUP4 DUP6 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x8D4 SWAP1 PUSH1 0xC PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x90C SWAP1 POP DUP2 DUP5 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x92D SWAP1 DUP5 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x941 SWAP1 POP DUP6 PUSH2 0x881 DUP4 DUP7 PUSH2 0x1C2B JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP3 TIMESTAMP PUSH1 0x6 SLOAD LT PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206F776E6572206F662074686973204E46542E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2727AA102627A1A5A2A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 PUSH2 0xA4E DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA83 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC4 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xACE PUSH1 0x0 PUSH2 0x16EE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAF0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB88 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 DUP5 ADD DUP4 SWAP1 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB2B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0xD13 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD01 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0xE DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x120 DUP10 ADD DUP11 MSTORE DUP1 SLOAD DUP5 AND PUSH1 0x60 DUP11 ADD SWAP1 DUP2 MSTORE SWAP5 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x4 DUP1 DUP5 ADD SLOAD PUSH1 0xE0 DUP11 ADD MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x100 DUP10 ADD MSTORE SWAP3 DUP8 MSTORE DUP4 DUP8 ADD DUP10 SWAP1 MSTORE SWAP5 DUP9 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP5 MLOAD PUSH4 0x8AD91345 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 PUSH4 0x8AD91345 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCD2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CA6 JUMP JUMPDEST DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCE7 JUMPI PUSH2 0xCE7 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xCFD SWAP1 PUSH2 0x1D71 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xD0B DUP2 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB90 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD24 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xE DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD CALLER SWAP2 AND SUB PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722043616E27742042757920497473204E6674730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 LT ISZERO PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x207072696365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xE DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 MLOAD SWAP1 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xEF0 SWAP2 ADDRESS SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP8 MSTORE PUSH1 0xE DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP3 DUP9 MSTORE SWAP1 SWAP6 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x6E0CEE09 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 POP PUSH4 0x6E0CEE09 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 POP PUSH2 0x1001 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD SSTORE PUSH2 0x102F PUSH1 0x2 PUSH2 0x1799 JUMP JUMPDEST POP PUSH2 0x103A PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x103A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 ADDRESS DUP5 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1083 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x103A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS DUP5 DUP5 PUSH2 0x17F0 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD SUB PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2A34B6B2902737BA1029BA30B93A171717 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 SLOAD GT PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2A34B6B29022B73217 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E4814DD185AD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE ADDRESS DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0xA0 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 DUP11 ADD DUP2 DUP2 MSTORE DUP14 DUP7 MSTORE PUSH1 0xA SWAP1 SWAP8 MSTORE SWAP10 DUP5 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP6 MLOAD SWAP9 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP11 DUP10 AND SWAP11 SWAP1 SWAP11 OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP9 ADD DUP1 SLOAD SWAP1 SWAP10 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP7 SSTORE SWAP3 MLOAD PUSH1 0x3 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x5 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x1274 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x12A9 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12E9 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479204C697374656420496E204D61726B6574706C616365210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13919508185B1C9958591E481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x1400 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE DUP6 MSTORE DUP6 DUP2 KECCAK256 DUP9 DUP3 MSTORE DUP6 MSTORE DUP6 DUP2 KECCAK256 DUP8 MLOAD DUP2 SLOAD SWAP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE DUP9 DUP8 ADD MLOAD SWAP6 DUP3 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE DUP6 DUP6 ADD MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x5 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP1 DUP4 MSTORE SWAP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x7 SWAP2 SWAP1 PUSH2 0x14BC SWAP1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1520 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x154E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP4 POP SWAP2 POP PUSH2 0x156E DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x157D PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH1 0x3C SWAP1 PUSH2 0x15A3 SWAP1 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x15B0 SWAP1 TIMESTAMP PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST LT PUSH2 0x1619 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x3C SWAP1 PUSH2 0x15DE SWAP1 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x15EB SWAP1 TIMESTAMP PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x15FF SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x160E DUP3 PUSH1 0x1 PUSH2 0x1C2B JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 DUP4 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x162C PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1656 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH2 0x165F DUP2 PUSH2 0x16EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x157D SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x17E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x943 DUP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x168F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x187B JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x1852 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1850 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x157D JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1889 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1892 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x18D3 SWAP2 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1925 DUP7 DUP4 DUP4 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1946 JUMPI PUSH2 0x1941 DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x192A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x195D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST POP DUP1 PUSH2 0x192A JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x199D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19EE DUP4 PUSH2 0x19B6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A33 DUP5 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A41 PUSH1 0x20 DUP6 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A8F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A77 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AB0 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B80 JUMPI DUP7 DUP6 SUB PUSH1 0x3F NOT ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND DUP2 DUP10 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP2 DUP11 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 DUP11 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP11 ADD MSTORE PUSH1 0xA0 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 ADD MLOAD PUSH1 0xC0 DUP9 ADD MSTORE ADD MLOAD PUSH2 0x100 PUSH1 0xE0 DUP8 ADD DUP2 SWAP1 MSTORE PUSH2 0x1B6A SWAP1 DUP8 ADD DUP3 PUSH2 0x1A98 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AEC JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1889 DUP3 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC5 DUP5 PUSH2 0x19B6 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x283632B0B9B2903BB0B4BA171717 PUSH1 0x91 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x188C JUMPI PUSH2 0x188C PUSH2 0x1C02 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x188C JUMPI PUSH2 0x188C PUSH2 0x1C02 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x188C JUMPI PUSH2 0x188C PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1CE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CFA PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D29 JUMPI PUSH2 0x1D29 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D52 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A74 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D83 JUMPI PUSH2 0x1D83 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DE0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A74 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x8A9A 0xA8 0xAE EXTCODESIZE 0xE7 EXTCODEHASH 0x2F BLOBBASEFEE 0xED DUP10 0xDB 0xE0 SDIV ADDMOD 0xB3 JUMPDEST 0xE1 0x4D BLOBHASH OR PUSH20 0xC96E2F61B9085A2E8464736F6C634300081A0033 ",
							"sourceMap": "953:9728:18:-:0;;;4138:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;4223:12:18;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;836:51:19;809:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;4247:12:18::1;:27:::0;;-1:-1:-1;;;;;;4247:27:18::1;-1:-1:-1::0;;;;;4247:27:18;;::::1;;::::0;;4284:26:::1;;::::0;-1:-1:-1;953:9728:18;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:131:19:-;-1:-1:-1;;;;;89:31:19;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:535::-;254:6;262;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:31;415:5;390:31;:::i;:::-;490:2;475:18;;469:25;440:5;;-1:-1:-1;503:33:19;469:25;503:33;:::i;:::-;607:2;592:18;;586:25;555:7;;-1:-1:-1;620:33:19;586:25;620:33;:::i;:::-;672:7;662:17;;;150:535;;;;;:::o;690:203::-;953:9728:18;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NftSupply_3880": {
									"entryPoint": null,
									"id": 3880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_703": {
									"entryPoint": 6168,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5825,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2190": {
									"entryPoint": null,
									"id": 2190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 5952,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2177": {
									"entryPoint": 6541,
									"id": 2177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5870,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@adminDepositToken_4540": {
									"entryPoint": 4158,
									"id": 4540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@adminWithdrawToken_4562": {
									"entryPoint": 4219,
									"id": 4562,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@auctionListCount_3873": {
									"entryPoint": null,
									"id": 3873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyLandNft_4240": {
									"entryPoint": 3356,
									"id": 4240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_2226": {
									"entryPoint": null,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_2268": {
									"entryPoint": 6041,
									"id": 2268,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@endTime_3802": {
									"entryPoint": null,
									"id": 3802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_2045": {
									"entryPoint": 6290,
									"id": 2045,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1999": {
									"entryPoint": 6267,
									"id": 1999,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllLandListedNfts_4657": {
									"entryPoint": 2787,
									"id": 4657,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_2240": {
									"entryPoint": null,
									"id": 2240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@landContract_3794": {
									"entryPoint": null,
									"id": 3794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listCount_3855": {
									"entryPoint": null,
									"id": 3855,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listLandNft_4086": {
									"entryPoint": 4833,
									"id": 4086,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@lockedNFT_3868": {
									"entryPoint": null,
									"id": 3868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextLandListId_3791": {
									"entryPoint": null,
									"id": 3791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2748,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_3886": {
									"entryPoint": null,
									"id": 3886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_540": {
									"entryPoint": 6128,
									"id": 540,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_513": {
									"entryPoint": 5730,
									"id": 513,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakeNFT_4306": {
									"entryPoint": 4280,
									"id": 4306,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakingPeriod_4259": {
									"entryPoint": 2768,
									"id": 4259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_3800": {
									"entryPoint": null,
									"id": 3800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddress_3798": {
									"entryPoint": null,
									"id": 3798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalLockedNft_3796": {
									"entryPoint": null,
									"id": 3796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5668,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unStakeNFT_4343": {
									"entryPoint": 2377,
									"id": 4343,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@userClaimFT_4454": {
									"entryPoint": 1845,
									"id": 4454,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@userCount_3859": {
									"entryPoint": null,
									"id": 3859,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userLandListings_3893": {
									"entryPoint": null,
									"id": 3893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userListCount_3863": {
									"entryPoint": null,
									"id": 3863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@user_Staking_Rewards_4518": {
									"entryPoint": 5506,
									"id": 4518,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@verifyCallResultFromTarget_2137": {
									"entryPoint": 6449,
									"id": 2137,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1879__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02b0958c6fd549a6c6f0235031b40ad58506be9f00f4f8ac078a8d3bc2a53a75__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e19132e2a5b3988a131326da472e0805afa005fd7e3d266a14f7a8d674f841d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23f1c66c38ab7839449758902632d5872a6a1d39e9064d0ff56a16c4fa72c960__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2dffa09705d7819d3bdf275be348ee3743884bb5e0f807132c27f7413a2c9bd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3ce79e63d2a68db572db3a2ced6b344e5a9c11238f22961b122c12c58cc4a54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c986b099ac986c497fdbd62f86c74d9b9900815f0f1af5e1bf50fcbfb3806e52__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d04edaa3b90b3fe18a20db0afbdb02474ec3d1c966fc7ecdbed8d5b968338a42__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15466:19",
										"nodeType": "YulBlock",
										"src": "0:15466:19",
										"statements": [
											{
												"nativeSrc": "6:3:19",
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "131:102:19",
													"nodeType": "YulBlock",
													"src": "131:102:19",
													"statements": [
														{
															"nativeSrc": "141:26:19",
															"nodeType": "YulAssignment",
															"src": "141:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "153:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "153:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "164:2:19",
																		"nodeType": "YulLiteral",
																		"src": "164:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "149:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "149:3:19"
																},
																"nativeSrc": "149:18:19",
																"nodeType": "YulFunctionCall",
																"src": "149:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "141:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "141:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "183:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "183:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "198:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "198:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "214:3:19",
																								"nodeType": "YulLiteral",
																								"src": "214:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "219:1:19",
																								"nodeType": "YulLiteral",
																								"src": "219:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "210:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "210:3:19"
																						},
																						"nativeSrc": "210:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "210:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "223:1:19",
																						"nodeType": "YulLiteral",
																						"src": "223:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "206:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "206:3:19"
																				},
																				"nativeSrc": "206:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "206:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "194:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "194:3:19"
																		},
																		"nativeSrc": "194:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "194:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "176:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "176:6:19"
																},
																"nativeSrc": "176:51:19",
																"nodeType": "YulFunctionCall",
																"src": "176:51:19"
															},
															"nativeSrc": "176:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "176:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1879__to_t_address__fromStack_reversed",
												"nativeSrc": "14:219:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "100:9:19",
														"nodeType": "YulTypedName",
														"src": "100:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "111:6:19",
														"nodeType": "YulTypedName",
														"src": "111:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "122:4:19",
														"nodeType": "YulTypedName",
														"src": "122:4:19",
														"type": ""
													}
												],
												"src": "14:219:19"
											},
											{
												"body": {
													"nativeSrc": "287:124:19",
													"nodeType": "YulBlock",
													"src": "287:124:19",
													"statements": [
														{
															"nativeSrc": "297:29:19",
															"nodeType": "YulAssignment",
															"src": "297:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "319:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "306:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "306:12:19"
																},
																"nativeSrc": "306:20:19",
																"nodeType": "YulFunctionCall",
																"src": "306:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "297:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "297:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "389:16:19",
																"nodeType": "YulBlock",
																"src": "389:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "398:1:19",
																					"nodeType": "YulLiteral",
																					"src": "398:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:19",
																					"nodeType": "YulLiteral",
																					"src": "401:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "391:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "391:6:19"
																			},
																			"nativeSrc": "391:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "391:12:19"
																		},
																		"nativeSrc": "391:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "391:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "348:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "348:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "359:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "359:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "374:3:19",
																										"nodeType": "YulLiteral",
																										"src": "374:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "379:1:19",
																										"nodeType": "YulLiteral",
																										"src": "379:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "370:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "370:3:19"
																								},
																								"nativeSrc": "370:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "370:11:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "383:1:19",
																								"nodeType": "YulLiteral",
																								"src": "383:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "366:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "366:3:19"
																						},
																						"nativeSrc": "366:19:19",
																						"nodeType": "YulFunctionCall",
																						"src": "366:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "355:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "355:3:19"
																				},
																				"nativeSrc": "355:31:19",
																				"nodeType": "YulFunctionCall",
																				"src": "355:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "345:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "345:2:19"
																		},
																		"nativeSrc": "345:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "345:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "338:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:19"
																},
																"nativeSrc": "338:50:19",
																"nodeType": "YulFunctionCall",
																"src": "338:50:19"
															},
															"nativeSrc": "335:70:19",
															"nodeType": "YulIf",
															"src": "335:70:19"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "238:173:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "266:6:19",
														"nodeType": "YulTypedName",
														"src": "266:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "277:5:19",
														"nodeType": "YulTypedName",
														"src": "277:5:19",
														"type": ""
													}
												],
												"src": "238:173:19"
											},
											{
												"body": {
													"nativeSrc": "503:213:19",
													"nodeType": "YulBlock",
													"src": "503:213:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "549:16:19",
																"nodeType": "YulBlock",
																"src": "549:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "558:1:19",
																					"nodeType": "YulLiteral",
																					"src": "558:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "561:1:19",
																					"nodeType": "YulLiteral",
																					"src": "561:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "551:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:19"
																			},
																			"nativeSrc": "551:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "551:12:19"
																		},
																		"nativeSrc": "551:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "551:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "524:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "524:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "533:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "533:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "520:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:19"
																		},
																		"nativeSrc": "520:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "520:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "545:2:19",
																		"nodeType": "YulLiteral",
																		"src": "545:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "516:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:19"
																},
																"nativeSrc": "516:32:19",
																"nodeType": "YulFunctionCall",
																"src": "516:32:19"
															},
															"nativeSrc": "513:52:19",
															"nodeType": "YulIf",
															"src": "513:52:19"
														},
														{
															"nativeSrc": "574:39:19",
															"nodeType": "YulAssignment",
															"src": "574:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "603:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "603:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "584:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "584:18:19"
																},
																"nativeSrc": "584:29:19",
																"nodeType": "YulFunctionCall",
																"src": "584:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "574:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:19"
																}
															]
														},
														{
															"nativeSrc": "622:14:19",
															"nodeType": "YulVariableDeclaration",
															"src": "622:14:19",
															"value": {
																"kind": "number",
																"nativeSrc": "635:1:19",
																"nodeType": "YulLiteral",
																"src": "635:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:19",
																	"nodeType": "YulTypedName",
																	"src": "626:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "645:41:19",
															"nodeType": "YulAssignment",
															"src": "645:41:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "671:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "671:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "682:2:19",
																				"nodeType": "YulLiteral",
																				"src": "682:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "667:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "667:3:19"
																		},
																		"nativeSrc": "667:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "667:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "654:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "654:12:19"
																},
																"nativeSrc": "654:32:19",
																"nodeType": "YulFunctionCall",
																"src": "654:32:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "645:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "645:5:19"
																}
															]
														},
														{
															"nativeSrc": "695:15:19",
															"nodeType": "YulAssignment",
															"src": "695:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "705:5:19",
																"nodeType": "YulIdentifier",
																"src": "705:5:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "695:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "416:300:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "461:9:19",
														"nodeType": "YulTypedName",
														"src": "461:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "472:7:19",
														"nodeType": "YulTypedName",
														"src": "472:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "484:6:19",
														"nodeType": "YulTypedName",
														"src": "484:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "492:6:19",
														"nodeType": "YulTypedName",
														"src": "492:6:19",
														"type": ""
													}
												],
												"src": "416:300:19"
											},
											{
												"body": {
													"nativeSrc": "791:156:19",
													"nodeType": "YulBlock",
													"src": "791:156:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "837:16:19",
																"nodeType": "YulBlock",
																"src": "837:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "846:1:19",
																					"nodeType": "YulLiteral",
																					"src": "846:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:1:19",
																					"nodeType": "YulLiteral",
																					"src": "849:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "839:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:19"
																			},
																			"nativeSrc": "839:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "839:12:19"
																		},
																		"nativeSrc": "839:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "839:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "812:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "812:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "821:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "821:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "808:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:19"
																		},
																		"nativeSrc": "808:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "808:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:2:19",
																		"nodeType": "YulLiteral",
																		"src": "833:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "804:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "804:3:19"
																},
																"nativeSrc": "804:32:19",
																"nodeType": "YulFunctionCall",
																"src": "804:32:19"
															},
															"nativeSrc": "801:52:19",
															"nodeType": "YulIf",
															"src": "801:52:19"
														},
														{
															"nativeSrc": "862:14:19",
															"nodeType": "YulVariableDeclaration",
															"src": "862:14:19",
															"value": {
																"kind": "number",
																"nativeSrc": "875:1:19",
																"nodeType": "YulLiteral",
																"src": "875:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "866:5:19",
																	"nodeType": "YulTypedName",
																	"src": "866:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "885:32:19",
															"nodeType": "YulAssignment",
															"src": "885:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "907:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "894:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "894:12:19"
																},
																"nativeSrc": "894:23:19",
																"nodeType": "YulFunctionCall",
																"src": "894:23:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "885:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:19"
																}
															]
														},
														{
															"nativeSrc": "926:15:19",
															"nodeType": "YulAssignment",
															"src": "926:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "936:5:19",
																"nodeType": "YulIdentifier",
																"src": "936:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "926:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "721:226:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "757:9:19",
														"nodeType": "YulTypedName",
														"src": "757:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "768:7:19",
														"nodeType": "YulTypedName",
														"src": "768:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "780:6:19",
														"nodeType": "YulTypedName",
														"src": "780:6:19",
														"type": ""
													}
												],
												"src": "721:226:19"
											},
											{
												"body": {
													"nativeSrc": "1053:76:19",
													"nodeType": "YulBlock",
													"src": "1053:76:19",
													"statements": [
														{
															"nativeSrc": "1063:26:19",
															"nodeType": "YulAssignment",
															"src": "1063:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1075:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1075:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1071:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1071:3:19"
																},
																"nativeSrc": "1071:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1071:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1063:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1063:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1105:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1105:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1116:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1116:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1098:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:19"
																},
																"nativeSrc": "1098:25:19",
																"nodeType": "YulFunctionCall",
																"src": "1098:25:19"
															},
															"nativeSrc": "1098:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "1098:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "952:177:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1022:9:19",
														"nodeType": "YulTypedName",
														"src": "1022:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1033:6:19",
														"nodeType": "YulTypedName",
														"src": "1033:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1044:4:19",
														"nodeType": "YulTypedName",
														"src": "1044:4:19",
														"type": ""
													}
												],
												"src": "952:177:19"
											},
											{
												"body": {
													"nativeSrc": "1238:270:19",
													"nodeType": "YulBlock",
													"src": "1238:270:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1284:16:19",
																"nodeType": "YulBlock",
																"src": "1284:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1293:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1293:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1296:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1296:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1286:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1286:6:19"
																			},
																			"nativeSrc": "1286:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1286:12:19"
																		},
																		"nativeSrc": "1286:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1286:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1259:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1259:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1268:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1255:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1255:3:19"
																		},
																		"nativeSrc": "1255:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1255:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1251:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1251:3:19"
																},
																"nativeSrc": "1251:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1251:32:19"
															},
															"nativeSrc": "1248:52:19",
															"nodeType": "YulIf",
															"src": "1248:52:19"
														},
														{
															"nativeSrc": "1309:39:19",
															"nodeType": "YulAssignment",
															"src": "1309:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1338:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1338:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1319:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1319:18:19"
																},
																"nativeSrc": "1319:29:19",
																"nodeType": "YulFunctionCall",
																"src": "1319:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1309:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:19"
																}
															]
														},
														{
															"nativeSrc": "1357:48:19",
															"nodeType": "YulAssignment",
															"src": "1357:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1390:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1390:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1401:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1401:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1386:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1386:3:19"
																		},
																		"nativeSrc": "1386:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1386:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1367:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1367:18:19"
																},
																"nativeSrc": "1367:38:19",
																"nodeType": "YulFunctionCall",
																"src": "1367:38:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1357:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1357:6:19"
																}
															]
														},
														{
															"nativeSrc": "1414:14:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1414:14:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1427:1:19",
																"nodeType": "YulLiteral",
																"src": "1427:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1418:5:19",
																	"nodeType": "YulTypedName",
																	"src": "1418:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1437:41:19",
															"nodeType": "YulAssignment",
															"src": "1437:41:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1463:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1474:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1474:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1459:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1459:3:19"
																		},
																		"nativeSrc": "1459:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1459:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1446:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "1446:12:19"
																},
																"nativeSrc": "1446:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1446:32:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1437:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1437:5:19"
																}
															]
														},
														{
															"nativeSrc": "1487:15:19",
															"nodeType": "YulAssignment",
															"src": "1487:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "1497:5:19",
																"nodeType": "YulIdentifier",
																"src": "1497:5:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1487:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1487:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1134:374:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1188:9:19",
														"nodeType": "YulTypedName",
														"src": "1188:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1199:7:19",
														"nodeType": "YulTypedName",
														"src": "1199:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1211:6:19",
														"nodeType": "YulTypedName",
														"src": "1211:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1219:6:19",
														"nodeType": "YulTypedName",
														"src": "1219:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1227:6:19",
														"nodeType": "YulTypedName",
														"src": "1227:6:19",
														"type": ""
													}
												],
												"src": "1134:374:19"
											},
											{
												"body": {
													"nativeSrc": "1776:406:19",
													"nodeType": "YulBlock",
													"src": "1776:406:19",
													"statements": [
														{
															"nativeSrc": "1786:27:19",
															"nodeType": "YulAssignment",
															"src": "1786:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1798:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1798:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1809:3:19",
																		"nodeType": "YulLiteral",
																		"src": "1809:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1794:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1794:3:19"
																},
																"nativeSrc": "1794:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1794:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1786:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1786:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1829:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1829:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1840:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1840:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1822:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:19"
																},
																"nativeSrc": "1822:25:19",
																"nodeType": "YulFunctionCall",
																"src": "1822:25:19"
															},
															"nativeSrc": "1822:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "1822:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1867:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1878:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1878:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1863:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1863:3:19"
																		},
																		"nativeSrc": "1863:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1863:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1887:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1887:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1903:3:19",
																								"nodeType": "YulLiteral",
																								"src": "1903:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1908:1:19",
																								"nodeType": "YulLiteral",
																								"src": "1908:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1899:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1899:3:19"
																						},
																						"nativeSrc": "1899:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1899:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1912:1:19",
																						"nodeType": "YulLiteral",
																						"src": "1912:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1895:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1895:3:19"
																				},
																				"nativeSrc": "1895:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1895:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1883:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:19"
																		},
																		"nativeSrc": "1883:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1856:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1856:6:19"
																},
																"nativeSrc": "1856:60:19",
																"nodeType": "YulFunctionCall",
																"src": "1856:60:19"
															},
															"nativeSrc": "1856:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "1856:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1947:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:19"
																		},
																		"nativeSrc": "1932:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "1956:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1956:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1972:3:19",
																								"nodeType": "YulLiteral",
																								"src": "1972:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1977:1:19",
																								"nodeType": "YulLiteral",
																								"src": "1977:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1968:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1968:3:19"
																						},
																						"nativeSrc": "1968:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1968:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1981:1:19",
																						"nodeType": "YulLiteral",
																						"src": "1981:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1964:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:19"
																				},
																				"nativeSrc": "1964:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1964:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1952:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:19"
																		},
																		"nativeSrc": "1952:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1952:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1925:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:19"
																},
																"nativeSrc": "1925:60:19",
																"nodeType": "YulFunctionCall",
																"src": "1925:60:19"
															},
															"nativeSrc": "1925:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "1925:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2005:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2005:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2016:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2016:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2001:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:19"
																		},
																		"nativeSrc": "2001:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2001:18:19"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2021:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2021:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1994:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1994:6:19"
																},
																"nativeSrc": "1994:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1994:34:19"
															},
															"nativeSrc": "1994:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1994:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2048:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2048:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2059:3:19",
																				"nodeType": "YulLiteral",
																				"src": "2059:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2044:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2044:3:19"
																		},
																		"nativeSrc": "2044:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2044:19:19"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "2065:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2037:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2037:6:19"
																},
																"nativeSrc": "2037:35:19",
																"nodeType": "YulFunctionCall",
																"src": "2037:35:19"
															},
															"nativeSrc": "2037:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "2037:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2092:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2092:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2103:3:19",
																				"nodeType": "YulLiteral",
																				"src": "2103:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2088:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:19"
																		},
																		"nativeSrc": "2088:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2088:19:19"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "2109:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2109:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2081:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:19"
																},
																"nativeSrc": "2081:35:19",
																"nodeType": "YulFunctionCall",
																"src": "2081:35:19"
															},
															"nativeSrc": "2081:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "2081:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2136:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2136:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2147:3:19",
																				"nodeType": "YulLiteral",
																				"src": "2147:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2132:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2132:3:19"
																		},
																		"nativeSrc": "2132:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2132:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value6",
																						"nativeSrc": "2167:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2167:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2160:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "2160:6:19"
																				},
																				"nativeSrc": "2160:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2160:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2153:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2153:6:19"
																		},
																		"nativeSrc": "2153:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2153:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2125:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:19"
																},
																"nativeSrc": "2125:51:19",
																"nodeType": "YulFunctionCall",
																"src": "2125:51:19"
															},
															"nativeSrc": "2125:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "2125:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "1513:669:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1697:9:19",
														"nodeType": "YulTypedName",
														"src": "1697:9:19",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1708:6:19",
														"nodeType": "YulTypedName",
														"src": "1708:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1716:6:19",
														"nodeType": "YulTypedName",
														"src": "1716:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1724:6:19",
														"nodeType": "YulTypedName",
														"src": "1724:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1732:6:19",
														"nodeType": "YulTypedName",
														"src": "1732:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1740:6:19",
														"nodeType": "YulTypedName",
														"src": "1740:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1748:6:19",
														"nodeType": "YulTypedName",
														"src": "1748:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1756:6:19",
														"nodeType": "YulTypedName",
														"src": "1756:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1767:4:19",
														"nodeType": "YulTypedName",
														"src": "1767:4:19",
														"type": ""
													}
												],
												"src": "1513:669:19"
											},
											{
												"body": {
													"nativeSrc": "2422:362:19",
													"nodeType": "YulBlock",
													"src": "2422:362:19",
													"statements": [
														{
															"nativeSrc": "2432:27:19",
															"nodeType": "YulAssignment",
															"src": "2432:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2444:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2444:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:3:19",
																		"nodeType": "YulLiteral",
																		"src": "2455:3:19",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2440:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:19"
																},
																"nativeSrc": "2440:19:19",
																"nodeType": "YulFunctionCall",
																"src": "2440:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2432:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2432:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2475:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2475:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2490:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2506:3:19",
																								"nodeType": "YulLiteral",
																								"src": "2506:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2511:1:19",
																								"nodeType": "YulLiteral",
																								"src": "2511:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2502:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2502:3:19"
																						},
																						"nativeSrc": "2502:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "2502:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2515:1:19",
																						"nodeType": "YulLiteral",
																						"src": "2515:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2498:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2498:3:19"
																				},
																				"nativeSrc": "2498:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2498:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2486:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:19"
																		},
																		"nativeSrc": "2486:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2468:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2468:6:19"
																},
																"nativeSrc": "2468:51:19",
																"nodeType": "YulFunctionCall",
																"src": "2468:51:19"
															},
															"nativeSrc": "2468:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "2468:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2539:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2539:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2550:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2550:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2535:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:19"
																		},
																		"nativeSrc": "2535:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2559:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2559:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2575:3:19",
																								"nodeType": "YulLiteral",
																								"src": "2575:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2580:1:19",
																								"nodeType": "YulLiteral",
																								"src": "2580:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2571:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2571:3:19"
																						},
																						"nativeSrc": "2571:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "2571:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2584:1:19",
																						"nodeType": "YulLiteral",
																						"src": "2584:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2567:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2567:3:19"
																				},
																				"nativeSrc": "2567:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2567:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2555:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2555:3:19"
																		},
																		"nativeSrc": "2555:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2555:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2528:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:19"
																},
																"nativeSrc": "2528:60:19",
																"nodeType": "YulFunctionCall",
																"src": "2528:60:19"
															},
															"nativeSrc": "2528:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "2528:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2608:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2608:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2619:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2619:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2604:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:19"
																		},
																		"nativeSrc": "2604:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2604:18:19"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2624:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2624:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2597:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2597:6:19"
																},
																"nativeSrc": "2597:34:19",
																"nodeType": "YulFunctionCall",
																"src": "2597:34:19"
															},
															"nativeSrc": "2597:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "2597:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2651:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2651:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2662:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2662:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2647:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2647:3:19"
																		},
																		"nativeSrc": "2647:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2647:18:19"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2667:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2667:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2640:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:19"
																},
																"nativeSrc": "2640:34:19",
																"nodeType": "YulFunctionCall",
																"src": "2640:34:19"
															},
															"nativeSrc": "2640:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "2640:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2694:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2694:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2705:3:19",
																				"nodeType": "YulLiteral",
																				"src": "2705:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2690:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:19"
																		},
																		"nativeSrc": "2690:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2690:19:19"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "2711:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2711:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2683:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:19"
																},
																"nativeSrc": "2683:35:19",
																"nodeType": "YulFunctionCall",
																"src": "2683:35:19"
															},
															"nativeSrc": "2683:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "2683:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2738:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2738:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2749:3:19",
																				"nodeType": "YulLiteral",
																				"src": "2749:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2734:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2734:3:19"
																		},
																		"nativeSrc": "2734:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2734:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "2769:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2769:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2762:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "2762:6:19"
																				},
																				"nativeSrc": "2762:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2762:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2755:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2755:6:19"
																		},
																		"nativeSrc": "2755:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2755:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2727:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2727:6:19"
																},
																"nativeSrc": "2727:51:19",
																"nodeType": "YulFunctionCall",
																"src": "2727:51:19"
															},
															"nativeSrc": "2727:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "2727:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2187:597:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2351:9:19",
														"nodeType": "YulTypedName",
														"src": "2351:9:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2362:6:19",
														"nodeType": "YulTypedName",
														"src": "2362:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2370:6:19",
														"nodeType": "YulTypedName",
														"src": "2370:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2378:6:19",
														"nodeType": "YulTypedName",
														"src": "2378:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2386:6:19",
														"nodeType": "YulTypedName",
														"src": "2386:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2394:6:19",
														"nodeType": "YulTypedName",
														"src": "2394:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2402:6:19",
														"nodeType": "YulTypedName",
														"src": "2402:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2413:4:19",
														"nodeType": "YulTypedName",
														"src": "2413:4:19",
														"type": ""
													}
												],
												"src": "2187:597:19"
											},
											{
												"body": {
													"nativeSrc": "2918:145:19",
													"nodeType": "YulBlock",
													"src": "2918:145:19",
													"statements": [
														{
															"nativeSrc": "2928:26:19",
															"nodeType": "YulAssignment",
															"src": "2928:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2940:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2940:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2951:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2951:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2936:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2936:3:19"
																},
																"nativeSrc": "2936:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2936:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2928:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2928:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2970:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2970:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2985:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2985:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3001:3:19",
																								"nodeType": "YulLiteral",
																								"src": "3001:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3006:1:19",
																								"nodeType": "YulLiteral",
																								"src": "3006:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2997:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2997:3:19"
																						},
																						"nativeSrc": "2997:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "2997:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3010:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3010:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2993:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2993:3:19"
																				},
																				"nativeSrc": "2993:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2993:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2981:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2981:3:19"
																		},
																		"nativeSrc": "2981:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2981:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2963:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:19"
																},
																"nativeSrc": "2963:51:19",
																"nodeType": "YulFunctionCall",
																"src": "2963:51:19"
															},
															"nativeSrc": "2963:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "2963:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3034:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3034:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3045:2:19",
																				"nodeType": "YulLiteral",
																				"src": "3045:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3030:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3030:3:19"
																		},
																		"nativeSrc": "3030:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3050:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3050:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3023:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:19"
																},
																"nativeSrc": "3023:34:19",
																"nodeType": "YulFunctionCall",
																"src": "3023:34:19"
															},
															"nativeSrc": "3023:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "3023:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2789:274:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2879:9:19",
														"nodeType": "YulTypedName",
														"src": "2879:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2890:6:19",
														"nodeType": "YulTypedName",
														"src": "2890:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2898:6:19",
														"nodeType": "YulTypedName",
														"src": "2898:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2909:4:19",
														"nodeType": "YulTypedName",
														"src": "2909:4:19",
														"type": ""
													}
												],
												"src": "2789:274:19"
											},
											{
												"body": {
													"nativeSrc": "3169:102:19",
													"nodeType": "YulBlock",
													"src": "3169:102:19",
													"statements": [
														{
															"nativeSrc": "3179:26:19",
															"nodeType": "YulAssignment",
															"src": "3179:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3191:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3191:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3202:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3202:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3187:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3187:3:19"
																},
																"nativeSrc": "3187:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3187:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3179:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3179:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3221:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3221:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3236:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3236:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3252:3:19",
																								"nodeType": "YulLiteral",
																								"src": "3252:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3257:1:19",
																								"nodeType": "YulLiteral",
																								"src": "3257:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3248:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "3248:3:19"
																						},
																						"nativeSrc": "3248:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "3248:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3261:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3261:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3244:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3244:3:19"
																				},
																				"nativeSrc": "3244:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3244:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3232:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:19"
																		},
																		"nativeSrc": "3232:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3214:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3214:6:19"
																},
																"nativeSrc": "3214:51:19",
																"nodeType": "YulFunctionCall",
																"src": "3214:51:19"
															},
															"nativeSrc": "3214:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "3214:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3068:203:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3138:9:19",
														"nodeType": "YulTypedName",
														"src": "3138:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3149:6:19",
														"nodeType": "YulTypedName",
														"src": "3149:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3160:4:19",
														"nodeType": "YulTypedName",
														"src": "3160:4:19",
														"type": ""
													}
												],
												"src": "3068:203:19"
											},
											{
												"body": {
													"nativeSrc": "3363:259:19",
													"nodeType": "YulBlock",
													"src": "3363:259:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3409:16:19",
																"nodeType": "YulBlock",
																"src": "3409:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3418:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3418:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3421:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3421:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3411:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3411:6:19"
																			},
																			"nativeSrc": "3411:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3411:12:19"
																		},
																		"nativeSrc": "3411:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3411:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3384:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3384:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3393:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3393:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3380:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3380:3:19"
																		},
																		"nativeSrc": "3380:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3405:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3405:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3376:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3376:3:19"
																},
																"nativeSrc": "3376:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3376:32:19"
															},
															"nativeSrc": "3373:52:19",
															"nodeType": "YulIf",
															"src": "3373:52:19"
														},
														{
															"nativeSrc": "3434:14:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3434:14:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3447:1:19",
																"nodeType": "YulLiteral",
																"src": "3447:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3438:5:19",
																	"nodeType": "YulTypedName",
																	"src": "3438:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3457:32:19",
															"nodeType": "YulAssignment",
															"src": "3457:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3479:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3479:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3466:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3466:12:19"
																},
																"nativeSrc": "3466:23:19",
																"nodeType": "YulFunctionCall",
																"src": "3466:23:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3457:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3457:5:19"
																}
															]
														},
														{
															"nativeSrc": "3498:15:19",
															"nodeType": "YulAssignment",
															"src": "3498:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "3508:5:19",
																"nodeType": "YulIdentifier",
																"src": "3508:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3498:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3498:6:19"
																}
															]
														},
														{
															"nativeSrc": "3522:16:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3522:16:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3537:1:19",
																"nodeType": "YulLiteral",
																"src": "3537:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3526:7:19",
																	"nodeType": "YulTypedName",
																	"src": "3526:7:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3547:43:19",
															"nodeType": "YulAssignment",
															"src": "3547:43:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3575:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3586:2:19",
																				"nodeType": "YulLiteral",
																				"src": "3586:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3571:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:19"
																		},
																		"nativeSrc": "3571:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3558:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3558:12:19"
																},
																"nativeSrc": "3558:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3558:32:19"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3547:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3547:7:19"
																}
															]
														},
														{
															"nativeSrc": "3599:17:19",
															"nodeType": "YulAssignment",
															"src": "3599:17:19",
															"value": {
																"name": "value_1",
																"nativeSrc": "3609:7:19",
																"nodeType": "YulIdentifier",
																"src": "3609:7:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3599:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3276:346:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3321:9:19",
														"nodeType": "YulTypedName",
														"src": "3321:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3332:7:19",
														"nodeType": "YulTypedName",
														"src": "3332:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3344:6:19",
														"nodeType": "YulTypedName",
														"src": "3344:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3352:6:19",
														"nodeType": "YulTypedName",
														"src": "3352:6:19",
														"type": ""
													}
												],
												"src": "3276:346:19"
											},
											{
												"body": {
													"nativeSrc": "3693:184:19",
													"nodeType": "YulBlock",
													"src": "3693:184:19",
													"statements": [
														{
															"nativeSrc": "3703:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3703:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3712:1:19",
																"nodeType": "YulLiteral",
																"src": "3712:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3707:1:19",
																	"nodeType": "YulTypedName",
																	"src": "3707:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3772:63:19",
																"nodeType": "YulBlock",
																"src": "3772:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3797:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "3797:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3802:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "3802:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3793:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "3793:3:19"
																					},
																					"nativeSrc": "3793:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3793:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "3816:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "3816:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "3821:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "3821:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3812:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "3812:3:19"
																							},
																							"nativeSrc": "3812:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "3812:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3806:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3806:5:19"
																					},
																					"nativeSrc": "3806:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3806:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3786:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:19"
																			},
																			"nativeSrc": "3786:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3786:39:19"
																		},
																		"nativeSrc": "3786:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3786:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3733:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "3733:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3736:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3736:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3730:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3730:2:19"
																},
																"nativeSrc": "3730:13:19",
																"nodeType": "YulFunctionCall",
																"src": "3730:13:19"
															},
															"nativeSrc": "3722:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3744:19:19",
																"nodeType": "YulBlock",
																"src": "3744:19:19",
																"statements": [
																	{
																		"nativeSrc": "3746:15:19",
																		"nodeType": "YulAssignment",
																		"src": "3746:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3755:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "3755:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3758:2:19",
																					"nodeType": "YulLiteral",
																					"src": "3758:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3751:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3751:3:19"
																			},
																			"nativeSrc": "3751:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3751:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3746:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "3746:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3726:3:19",
																"nodeType": "YulBlock",
																"src": "3726:3:19",
																"statements": []
															},
															"src": "3722:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3855:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3855:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3860:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3860:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3851:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:19"
																		},
																		"nativeSrc": "3851:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3851:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3869:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3844:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:19"
																},
																"nativeSrc": "3844:27:19",
																"nodeType": "YulFunctionCall",
																"src": "3844:27:19"
															},
															"nativeSrc": "3844:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "3844:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3627:250:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3671:3:19",
														"nodeType": "YulTypedName",
														"src": "3671:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3676:3:19",
														"nodeType": "YulTypedName",
														"src": "3676:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3681:6:19",
														"nodeType": "YulTypedName",
														"src": "3681:6:19",
														"type": ""
													}
												],
												"src": "3627:250:19"
											},
											{
												"body": {
													"nativeSrc": "3932:221:19",
													"nodeType": "YulBlock",
													"src": "3932:221:19",
													"statements": [
														{
															"nativeSrc": "3942:26:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3942:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3962:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3962:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3956:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3956:5:19"
																},
																"nativeSrc": "3956:12:19",
																"nodeType": "YulFunctionCall",
																"src": "3956:12:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3946:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3946:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3984:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3984:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3989:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3989:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:19"
																},
																"nativeSrc": "3977:19:19",
																"nodeType": "YulFunctionCall",
																"src": "3977:19:19"
															},
															"nativeSrc": "3977:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "3977:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4044:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4044:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4051:4:19",
																				"nodeType": "YulLiteral",
																				"src": "4051:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4040:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:19"
																		},
																		"nativeSrc": "4040:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4040:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4062:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4062:3:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4067:4:19",
																				"nodeType": "YulLiteral",
																				"src": "4067:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4058:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4058:3:19"
																		},
																		"nativeSrc": "4058:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4058:14:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4074:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4074:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4005:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "4005:34:19"
																},
																"nativeSrc": "4005:76:19",
																"nodeType": "YulFunctionCall",
																"src": "4005:76:19"
															},
															"nativeSrc": "4005:76:19",
															"nodeType": "YulExpressionStatement",
															"src": "4005:76:19"
														},
														{
															"nativeSrc": "4090:57:19",
															"nodeType": "YulAssignment",
															"src": "4090:57:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4105:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4105:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4118:6:19",
																								"nodeType": "YulIdentifier",
																								"src": "4118:6:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4126:2:19",
																								"nodeType": "YulLiteral",
																								"src": "4126:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4114:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "4114:3:19"
																						},
																						"nativeSrc": "4114:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "4114:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4135:2:19",
																								"nodeType": "YulLiteral",
																								"src": "4135:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4131:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "4131:3:19"
																						},
																						"nativeSrc": "4131:7:19",
																						"nodeType": "YulFunctionCall",
																						"src": "4131:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4110:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4110:3:19"
																				},
																				"nativeSrc": "4110:29:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4110:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4101:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4101:3:19"
																		},
																		"nativeSrc": "4101:39:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4101:39:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4142:4:19",
																		"nodeType": "YulLiteral",
																		"src": "4142:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4097:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4097:3:19"
																},
																"nativeSrc": "4097:50:19",
																"nodeType": "YulFunctionCall",
																"src": "4097:50:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4090:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4090:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "3882:271:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3909:5:19",
														"nodeType": "YulTypedName",
														"src": "3909:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3916:3:19",
														"nodeType": "YulTypedName",
														"src": "3916:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3924:3:19",
														"nodeType": "YulTypedName",
														"src": "3924:3:19",
														"type": ""
													}
												],
												"src": "3882:271:19"
											},
											{
												"body": {
													"nativeSrc": "4385:1244:19",
													"nodeType": "YulBlock",
													"src": "4385:1244:19",
													"statements": [
														{
															"nativeSrc": "4395:32:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4395:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4413:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4413:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4409:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:19"
																},
																"nativeSrc": "4409:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4409:18:19"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4399:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4399:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4443:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4443:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4454:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4436:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:19"
																},
																"nativeSrc": "4436:21:19",
																"nodeType": "YulFunctionCall",
																"src": "4436:21:19"
															},
															"nativeSrc": "4436:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "4436:21:19"
														},
														{
															"nativeSrc": "4466:17:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4466:17:19",
															"value": {
																"name": "tail_1",
																"nativeSrc": "4477:6:19",
																"nodeType": "YulIdentifier",
																"src": "4477:6:19"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "4470:3:19",
																	"nodeType": "YulTypedName",
																	"src": "4470:3:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4492:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4492:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4512:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4512:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4506:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4506:5:19"
																},
																"nativeSrc": "4506:13:19",
																"nodeType": "YulFunctionCall",
																"src": "4506:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4496:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4496:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "4535:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4535:6:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4543:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4543:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4528:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4528:6:19"
																},
																"nativeSrc": "4528:22:19",
																"nodeType": "YulFunctionCall",
																"src": "4528:22:19"
															},
															"nativeSrc": "4528:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "4528:22:19"
														},
														{
															"nativeSrc": "4559:25:19",
															"nodeType": "YulAssignment",
															"src": "4559:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4570:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4570:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4581:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4581:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4566:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4566:3:19"
																},
																"nativeSrc": "4566:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4566:18:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4559:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4559:3:19"
																}
															]
														},
														{
															"nativeSrc": "4593:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4593:53:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4615:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4630:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4630:1:19",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4633:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4633:6:19"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4626:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4626:3:19"
																				},
																				"nativeSrc": "4626:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4626:14:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4611:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:19"
																		},
																		"nativeSrc": "4611:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:30:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4643:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4643:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4607:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4607:3:19"
																},
																"nativeSrc": "4607:39:19",
																"nodeType": "YulFunctionCall",
																"src": "4607:39:19"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "4597:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4597:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4655:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4655:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4673:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4673:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4681:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4669:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4669:3:19"
																},
																"nativeSrc": "4669:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4669:15:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4659:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4659:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4693:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4693:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "4702:1:19",
																"nodeType": "YulLiteral",
																"src": "4702:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4697:1:19",
																	"nodeType": "YulTypedName",
																	"src": "4697:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4761:839:19",
																"nodeType": "YulBlock",
																"src": "4761:839:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4782:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4782:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nativeSrc": "4795:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4795:6:19"
																								},
																								{
																									"name": "headStart",
																									"nativeSrc": "4803:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "4803:9:19"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "4791:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4791:3:19"
																							},
																							"nativeSrc": "4791:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4791:22:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4819:2:19",
																									"nodeType": "YulLiteral",
																									"src": "4819:2:19",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4815:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4815:3:19"
																							},
																							"nativeSrc": "4815:7:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4815:7:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4787:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4787:3:19"
																					},
																					"nativeSrc": "4787:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4787:36:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4775:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4775:6:19"
																			},
																			"nativeSrc": "4775:49:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4775:49:19"
																		},
																		"nativeSrc": "4775:49:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4775:49:19"
																	},
																	{
																		"nativeSrc": "4837:23:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4837:23:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4853:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "4853:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4847:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4847:5:19"
																			},
																			"nativeSrc": "4847:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4847:13:19"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "4841:2:19",
																				"nodeType": "YulTypedName",
																				"src": "4841:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4873:19:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4873:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "4889:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "4889:2:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4883:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4883:5:19"
																			},
																			"nativeSrc": "4883:9:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4883:9:19"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "4877:2:19",
																				"nodeType": "YulTypedName",
																				"src": "4877:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nativeSrc": "4912:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "4912:6:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "4930:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "4930:2:19"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "4924:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "4924:5:19"
																							},
																							"nativeSrc": "4924:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4924:9:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4943:3:19",
																											"nodeType": "YulLiteral",
																											"src": "4943:3:19",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4948:1:19",
																											"nodeType": "YulLiteral",
																											"src": "4948:1:19",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4939:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "4939:3:19"
																									},
																									"nativeSrc": "4939:11:19",
																									"nodeType": "YulFunctionCall",
																									"src": "4939:11:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4952:1:19",
																									"nodeType": "YulLiteral",
																									"src": "4952:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "4935:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4935:3:19"
																							},
																							"nativeSrc": "4935:19:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4935:19:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4920:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4920:3:19"
																					},
																					"nativeSrc": "4920:35:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4920:35:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4905:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4905:6:19"
																			},
																			"nativeSrc": "4905:51:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4905:51:19"
																		},
																		"nativeSrc": "4905:51:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:51:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "4980:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "4980:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4988:2:19",
																							"nodeType": "YulLiteral",
																							"src": "4988:2:19",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4976:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4976:3:19"
																					},
																					"nativeSrc": "4976:15:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4976:15:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_2",
																											"nativeSrc": "5007:2:19",
																											"nodeType": "YulIdentifier",
																											"src": "5007:2:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5011:2:19",
																											"nodeType": "YulLiteral",
																											"src": "5011:2:19",
																											"type": "",
																											"value": "32"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5003:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "5003:3:19"
																									},
																									"nativeSrc": "5003:11:19",
																									"nodeType": "YulFunctionCall",
																									"src": "5003:11:19"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "4997:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "4997:5:19"
																							},
																							"nativeSrc": "4997:18:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4997:18:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5025:3:19",
																											"nodeType": "YulLiteral",
																											"src": "5025:3:19",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5030:1:19",
																											"nodeType": "YulLiteral",
																											"src": "5030:1:19",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "5021:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "5021:3:19"
																									},
																									"nativeSrc": "5021:11:19",
																									"nodeType": "YulFunctionCall",
																									"src": "5021:11:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5034:1:19",
																									"nodeType": "YulLiteral",
																									"src": "5034:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "5017:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5017:3:19"
																							},
																							"nativeSrc": "5017:19:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5017:19:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4993:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4993:3:19"
																					},
																					"nativeSrc": "4993:44:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4993:44:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4969:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:19"
																			},
																			"nativeSrc": "4969:69:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:69:19"
																		},
																		"nativeSrc": "4969:69:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:69:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5062:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5062:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5070:2:19",
																							"nodeType": "YulLiteral",
																							"src": "5070:2:19",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5058:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:19"
																					},
																					"nativeSrc": "5058:15:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5058:15:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "5085:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "5085:2:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5089:2:19",
																									"nodeType": "YulLiteral",
																									"src": "5089:2:19",
																									"type": "",
																									"value": "64"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5081:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5081:3:19"
																							},
																							"nativeSrc": "5081:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5081:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5075:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "5075:5:19"
																					},
																					"nativeSrc": "5075:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5075:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5051:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5051:6:19"
																			},
																			"nativeSrc": "5051:43:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5051:43:19"
																		},
																		"nativeSrc": "5051:43:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5051:43:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5118:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5118:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5126:4:19",
																							"nodeType": "YulLiteral",
																							"src": "5126:4:19",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5114:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5114:3:19"
																					},
																					"nativeSrc": "5114:17:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5114:17:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "5143:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "5143:2:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5147:4:19",
																									"nodeType": "YulLiteral",
																									"src": "5147:4:19",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5139:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5139:3:19"
																							},
																							"nativeSrc": "5139:13:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5139:13:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5133:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "5133:5:19"
																					},
																					"nativeSrc": "5133:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5133:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5107:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5107:6:19"
																			},
																			"nativeSrc": "5107:47:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5107:47:19"
																		},
																		"nativeSrc": "5107:47:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5107:47:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5178:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5178:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5186:4:19",
																							"nodeType": "YulLiteral",
																							"src": "5186:4:19",
																							"type": "",
																							"value": "0x80"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5174:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5174:3:19"
																					},
																					"nativeSrc": "5174:17:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5174:17:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "5203:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "5203:2:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5207:4:19",
																									"nodeType": "YulLiteral",
																									"src": "5207:4:19",
																									"type": "",
																									"value": "0x80"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5199:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5199:3:19"
																							},
																							"nativeSrc": "5199:13:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5199:13:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5193:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "5193:5:19"
																					},
																					"nativeSrc": "5193:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5193:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5167:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5167:6:19"
																			},
																			"nativeSrc": "5167:47:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5167:47:19"
																		},
																		"nativeSrc": "5167:47:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5167:47:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5238:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5238:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5246:4:19",
																							"nodeType": "YulLiteral",
																							"src": "5246:4:19",
																							"type": "",
																							"value": "0xa0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5234:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5234:3:19"
																					},
																					"nativeSrc": "5234:17:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5234:17:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_2",
																													"nativeSrc": "5277:2:19",
																													"nodeType": "YulIdentifier",
																													"src": "5277:2:19"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "5281:4:19",
																													"nodeType": "YulLiteral",
																													"src": "5281:4:19",
																													"type": "",
																													"value": "0xa0"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "5273:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "5273:3:19"
																											},
																											"nativeSrc": "5273:13:19",
																											"nodeType": "YulFunctionCall",
																											"src": "5273:13:19"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "5267:5:19",
																										"nodeType": "YulIdentifier",
																										"src": "5267:5:19"
																									},
																									"nativeSrc": "5267:20:19",
																									"nodeType": "YulFunctionCall",
																									"src": "5267:20:19"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "5260:6:19",
																								"nodeType": "YulIdentifier",
																								"src": "5260:6:19"
																							},
																							"nativeSrc": "5260:28:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5260:28:19"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "5253:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5253:6:19"
																					},
																					"nativeSrc": "5253:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5253:36:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5227:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5227:6:19"
																			},
																			"nativeSrc": "5227:63:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5227:63:19"
																		},
																		"nativeSrc": "5227:63:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5227:63:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5314:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5314:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5322:4:19",
																							"nodeType": "YulLiteral",
																							"src": "5322:4:19",
																							"type": "",
																							"value": "0xc0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5310:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5310:3:19"
																					},
																					"nativeSrc": "5310:17:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5310:17:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "5339:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "5339:2:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5343:2:19",
																									"nodeType": "YulLiteral",
																									"src": "5343:2:19",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5335:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5335:3:19"
																							},
																							"nativeSrc": "5335:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5335:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5329:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "5329:5:19"
																					},
																					"nativeSrc": "5329:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5329:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5303:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5303:6:19"
																			},
																			"nativeSrc": "5303:45:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5303:45:19"
																		},
																		"nativeSrc": "5303:45:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5303:45:19"
																	},
																	{
																		"nativeSrc": "5361:38:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5361:38:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_1",
																							"nativeSrc": "5391:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "5391:2:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5395:2:19",
																							"nodeType": "YulLiteral",
																							"src": "5395:2:19",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5387:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5387:3:19"
																					},
																					"nativeSrc": "5387:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5387:11:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5381:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5381:5:19"
																			},
																			"nativeSrc": "5381:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5381:18:19"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5365:12:19",
																				"nodeType": "YulTypedName",
																				"src": "5365:12:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5423:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5423:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5431:4:19",
																							"nodeType": "YulLiteral",
																							"src": "5431:4:19",
																							"type": "",
																							"value": "0xe0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5419:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5419:3:19"
																					},
																					"nativeSrc": "5419:17:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5419:17:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5438:6:19",
																					"nodeType": "YulLiteral",
																					"src": "5438:6:19",
																					"type": "",
																					"value": "0x0100"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5412:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:19"
																			},
																			"nativeSrc": "5412:33:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5412:33:19"
																		},
																		"nativeSrc": "5412:33:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5412:33:19"
																	},
																	{
																		"nativeSrc": "5458:62:19",
																		"nodeType": "YulAssignment",
																		"src": "5458:62:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nativeSrc": "5486:12:19",
																					"nodeType": "YulIdentifier",
																					"src": "5486:12:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "5504:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5504:6:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5512:6:19",
																							"nodeType": "YulLiteral",
																							"src": "5512:6:19",
																							"type": "",
																							"value": "0x0100"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5500:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5500:3:19"
																					},
																					"nativeSrc": "5500:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5500:19:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_string",
																				"nativeSrc": "5468:17:19",
																				"nodeType": "YulIdentifier",
																				"src": "5468:17:19"
																			},
																			"nativeSrc": "5468:52:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5468:52:19"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "5458:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5458:6:19"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5533:25:19",
																		"nodeType": "YulAssignment",
																		"src": "5533:25:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5547:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "5547:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5555:2:19",
																					"nodeType": "YulLiteral",
																					"src": "5555:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5543:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5543:3:19"
																			},
																			"nativeSrc": "5543:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:15:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5533:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5533:6:19"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5571:19:19",
																		"nodeType": "YulAssignment",
																		"src": "5571:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5582:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5582:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5587:2:19",
																					"nodeType": "YulLiteral",
																					"src": "5587:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5578:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5578:3:19"
																			},
																			"nativeSrc": "5578:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5578:12:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5571:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5571:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4723:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "4723:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4726:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4726:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4720:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4720:2:19"
																},
																"nativeSrc": "4720:13:19",
																"nodeType": "YulFunctionCall",
																"src": "4720:13:19"
															},
															"nativeSrc": "4712:888:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4734:18:19",
																"nodeType": "YulBlock",
																"src": "4734:18:19",
																"statements": [
																	{
																		"nativeSrc": "4736:14:19",
																		"nodeType": "YulAssignment",
																		"src": "4736:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4745:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "4745:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4748:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4748:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4741:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4741:3:19"
																			},
																			"nativeSrc": "4741:9:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4741:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4736:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "4736:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4716:3:19",
																"nodeType": "YulBlock",
																"src": "4716:3:19",
																"statements": []
															},
															"src": "4712:888:19"
														},
														{
															"nativeSrc": "5609:14:19",
															"nodeType": "YulAssignment",
															"src": "5609:14:19",
															"value": {
																"name": "tail_2",
																"nativeSrc": "5617:6:19",
																"nodeType": "YulIdentifier",
																"src": "5617:6:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5609:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5609:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4158:1471:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4354:9:19",
														"nodeType": "YulTypedName",
														"src": "4354:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4365:6:19",
														"nodeType": "YulTypedName",
														"src": "4365:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4376:4:19",
														"nodeType": "YulTypedName",
														"src": "4376:4:19",
														"type": ""
													}
												],
												"src": "4158:1471:19"
											},
											{
												"body": {
													"nativeSrc": "5704:116:19",
													"nodeType": "YulBlock",
													"src": "5704:116:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5750:16:19",
																"nodeType": "YulBlock",
																"src": "5750:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5759:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5762:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5762:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5752:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:19"
																			},
																			"nativeSrc": "5752:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5752:12:19"
																		},
																		"nativeSrc": "5752:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5725:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5725:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5734:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5721:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5721:3:19"
																		},
																		"nativeSrc": "5721:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5746:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5746:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5717:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:19"
																},
																"nativeSrc": "5717:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5717:32:19"
															},
															"nativeSrc": "5714:52:19",
															"nodeType": "YulIf",
															"src": "5714:52:19"
														},
														{
															"nativeSrc": "5775:39:19",
															"nodeType": "YulAssignment",
															"src": "5775:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5804:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5804:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5785:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "5785:18:19"
																},
																"nativeSrc": "5785:29:19",
																"nodeType": "YulFunctionCall",
																"src": "5785:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5775:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5634:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5670:9:19",
														"nodeType": "YulTypedName",
														"src": "5670:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5681:7:19",
														"nodeType": "YulTypedName",
														"src": "5681:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5693:6:19",
														"nodeType": "YulTypedName",
														"src": "5693:6:19",
														"type": ""
													}
												],
												"src": "5634:186:19"
											},
											{
												"body": {
													"nativeSrc": "5982:188:19",
													"nodeType": "YulBlock",
													"src": "5982:188:19",
													"statements": [
														{
															"nativeSrc": "5992:26:19",
															"nodeType": "YulAssignment",
															"src": "5992:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6004:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6004:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6015:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6015:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6000:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:19"
																},
																"nativeSrc": "6000:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6000:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5992:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5992:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6034:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6034:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6049:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6049:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6065:3:19",
																								"nodeType": "YulLiteral",
																								"src": "6065:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6070:1:19",
																								"nodeType": "YulLiteral",
																								"src": "6070:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6061:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "6061:3:19"
																						},
																						"nativeSrc": "6061:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "6061:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6074:1:19",
																						"nodeType": "YulLiteral",
																						"src": "6074:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6057:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6057:3:19"
																				},
																				"nativeSrc": "6057:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6057:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6045:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:19"
																		},
																		"nativeSrc": "6045:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6045:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6027:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:19"
																},
																"nativeSrc": "6027:51:19",
																"nodeType": "YulFunctionCall",
																"src": "6027:51:19"
															},
															"nativeSrc": "6027:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "6027:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6098:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6098:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6109:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6109:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6094:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:19"
																		},
																		"nativeSrc": "6094:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6094:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6114:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6114:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6087:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6087:6:19"
																},
																"nativeSrc": "6087:34:19",
																"nodeType": "YulFunctionCall",
																"src": "6087:34:19"
															},
															"nativeSrc": "6087:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "6087:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6141:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6141:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6152:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6152:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6137:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6137:3:19"
																		},
																		"nativeSrc": "6137:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6137:18:19"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6157:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6157:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6130:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6130:6:19"
																},
																"nativeSrc": "6130:34:19",
																"nodeType": "YulFunctionCall",
																"src": "6130:34:19"
															},
															"nativeSrc": "6130:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "6130:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5825:345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5935:9:19",
														"nodeType": "YulTypedName",
														"src": "5935:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5946:6:19",
														"nodeType": "YulTypedName",
														"src": "5946:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5954:6:19",
														"nodeType": "YulTypedName",
														"src": "5954:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5962:6:19",
														"nodeType": "YulTypedName",
														"src": "5962:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5973:4:19",
														"nodeType": "YulTypedName",
														"src": "5973:4:19",
														"type": ""
													}
												],
												"src": "5825:345:19"
											},
											{
												"body": {
													"nativeSrc": "6279:316:19",
													"nodeType": "YulBlock",
													"src": "6279:316:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6325:16:19",
																"nodeType": "YulBlock",
																"src": "6325:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6334:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6334:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6337:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6337:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6327:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6327:6:19"
																			},
																			"nativeSrc": "6327:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6327:12:19"
																		},
																		"nativeSrc": "6327:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6327:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6300:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6300:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6309:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6309:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6296:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:19"
																		},
																		"nativeSrc": "6296:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6296:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6321:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6321:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6292:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6292:3:19"
																},
																"nativeSrc": "6292:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6292:32:19"
															},
															"nativeSrc": "6289:52:19",
															"nodeType": "YulIf",
															"src": "6289:52:19"
														},
														{
															"nativeSrc": "6350:39:19",
															"nodeType": "YulAssignment",
															"src": "6350:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6379:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6379:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6360:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "6360:18:19"
																},
																"nativeSrc": "6360:29:19",
																"nodeType": "YulFunctionCall",
																"src": "6360:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6350:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:19"
																}
															]
														},
														{
															"nativeSrc": "6398:14:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6398:14:19",
															"value": {
																"kind": "number",
																"nativeSrc": "6411:1:19",
																"nodeType": "YulLiteral",
																"src": "6411:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6402:5:19",
																	"nodeType": "YulTypedName",
																	"src": "6402:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6421:41:19",
															"nodeType": "YulAssignment",
															"src": "6421:41:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6447:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6447:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6458:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6458:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6443:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6443:3:19"
																		},
																		"nativeSrc": "6443:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6443:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6430:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6430:12:19"
																},
																"nativeSrc": "6430:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6430:32:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6421:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6421:5:19"
																}
															]
														},
														{
															"nativeSrc": "6471:15:19",
															"nodeType": "YulAssignment",
															"src": "6471:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "6481:5:19",
																"nodeType": "YulIdentifier",
																"src": "6481:5:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6471:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6471:6:19"
																}
															]
														},
														{
															"nativeSrc": "6495:16:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6495:16:19",
															"value": {
																"kind": "number",
																"nativeSrc": "6510:1:19",
																"nodeType": "YulLiteral",
																"src": "6510:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6499:7:19",
																	"nodeType": "YulTypedName",
																	"src": "6499:7:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6520:43:19",
															"nodeType": "YulAssignment",
															"src": "6520:43:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6548:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6548:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6559:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6559:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6544:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6544:3:19"
																		},
																		"nativeSrc": "6544:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6544:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6531:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6531:12:19"
																},
																"nativeSrc": "6531:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6531:32:19"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "6520:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "6520:7:19"
																}
															]
														},
														{
															"nativeSrc": "6572:17:19",
															"nodeType": "YulAssignment",
															"src": "6572:17:19",
															"value": {
																"name": "value_1",
																"nativeSrc": "6582:7:19",
																"nodeType": "YulIdentifier",
																"src": "6582:7:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6572:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6572:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "6175:420:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6229:9:19",
														"nodeType": "YulTypedName",
														"src": "6229:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6240:7:19",
														"nodeType": "YulTypedName",
														"src": "6240:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6252:6:19",
														"nodeType": "YulTypedName",
														"src": "6252:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6260:6:19",
														"nodeType": "YulTypedName",
														"src": "6260:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6268:6:19",
														"nodeType": "YulTypedName",
														"src": "6268:6:19",
														"type": ""
													}
												],
												"src": "6175:420:19"
											},
											{
												"body": {
													"nativeSrc": "6729:119:19",
													"nodeType": "YulBlock",
													"src": "6729:119:19",
													"statements": [
														{
															"nativeSrc": "6739:26:19",
															"nodeType": "YulAssignment",
															"src": "6739:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6751:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6751:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6747:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6747:3:19"
																},
																"nativeSrc": "6747:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6747:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6739:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6739:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6781:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6781:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6792:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6792:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6774:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:19"
																},
																"nativeSrc": "6774:25:19",
																"nodeType": "YulFunctionCall",
																"src": "6774:25:19"
															},
															"nativeSrc": "6774:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "6774:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6819:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6830:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6830:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6815:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6815:3:19"
																		},
																		"nativeSrc": "6815:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6815:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6835:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6835:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6808:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6808:6:19"
																},
																"nativeSrc": "6808:34:19",
																"nodeType": "YulFunctionCall",
																"src": "6808:34:19"
															},
															"nativeSrc": "6808:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "6808:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6600:248:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6690:9:19",
														"nodeType": "YulTypedName",
														"src": "6690:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6701:6:19",
														"nodeType": "YulTypedName",
														"src": "6701:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6709:6:19",
														"nodeType": "YulTypedName",
														"src": "6709:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6720:4:19",
														"nodeType": "YulTypedName",
														"src": "6720:4:19",
														"type": ""
													}
												],
												"src": "6600:248:19"
											},
											{
												"body": {
													"nativeSrc": "7027:164:19",
													"nodeType": "YulBlock",
													"src": "7027:164:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7044:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7044:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7055:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7037:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7037:6:19"
																},
																"nativeSrc": "7037:21:19",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:19"
															},
															"nativeSrc": "7037:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "7037:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7078:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7078:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7089:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7089:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7074:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7074:3:19"
																		},
																		"nativeSrc": "7074:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7074:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7094:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7094:2:19",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7067:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7067:6:19"
																},
																"nativeSrc": "7067:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7067:30:19"
															},
															"nativeSrc": "7067:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "7067:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7117:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7117:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7128:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7128:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7113:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7113:3:19"
																		},
																		"nativeSrc": "7113:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7113:18:19"
																	},
																	{
																		"hexValue": "506c6561736520776169742e2e2e",
																		"kind": "string",
																		"nativeSrc": "7133:16:19",
																		"nodeType": "YulLiteral",
																		"src": "7133:16:19",
																		"type": "",
																		"value": "Please wait..."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7106:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7106:6:19"
																},
																"nativeSrc": "7106:44:19",
																"nodeType": "YulFunctionCall",
																"src": "7106:44:19"
															},
															"nativeSrc": "7106:44:19",
															"nodeType": "YulExpressionStatement",
															"src": "7106:44:19"
														},
														{
															"nativeSrc": "7159:26:19",
															"nodeType": "YulAssignment",
															"src": "7159:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7171:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7171:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7182:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7182:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7167:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7167:3:19"
																},
																"nativeSrc": "7167:18:19",
																"nodeType": "YulFunctionCall",
																"src": "7167:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7159:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7159:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6853:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7004:9:19",
														"nodeType": "YulTypedName",
														"src": "7004:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7018:4:19",
														"nodeType": "YulTypedName",
														"src": "7018:4:19",
														"type": ""
													}
												],
												"src": "6853:338:19"
											},
											{
												"body": {
													"nativeSrc": "7370:248:19",
													"nodeType": "YulBlock",
													"src": "7370:248:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7387:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7387:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7398:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7398:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7380:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:19"
																},
																"nativeSrc": "7380:21:19",
																"nodeType": "YulFunctionCall",
																"src": "7380:21:19"
															},
															"nativeSrc": "7380:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "7380:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7421:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7421:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7432:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7432:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7417:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7417:3:19"
																		},
																		"nativeSrc": "7417:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7417:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7437:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7437:2:19",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7410:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7410:6:19"
																},
																"nativeSrc": "7410:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7410:30:19"
															},
															"nativeSrc": "7410:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "7410:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7460:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7460:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7471:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7471:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7456:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7456:3:19"
																		},
																		"nativeSrc": "7456:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7456:18:19"
																	},
																	{
																		"hexValue": "596f75206861766520636c61696d656420796f757220616c6c20726577617264",
																		"kind": "string",
																		"nativeSrc": "7476:34:19",
																		"nodeType": "YulLiteral",
																		"src": "7476:34:19",
																		"type": "",
																		"value": "You have claimed your all reward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7449:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7449:6:19"
																},
																"nativeSrc": "7449:62:19",
																"nodeType": "YulFunctionCall",
																"src": "7449:62:19"
															},
															"nativeSrc": "7449:62:19",
															"nodeType": "YulExpressionStatement",
															"src": "7449:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7531:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7531:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7542:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7542:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7527:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7527:3:19"
																		},
																		"nativeSrc": "7527:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7527:18:19"
																	},
																	{
																		"hexValue": "73206163636f7264696e6720746f2074686973204e46542e2e2e",
																		"kind": "string",
																		"nativeSrc": "7547:28:19",
																		"nodeType": "YulLiteral",
																		"src": "7547:28:19",
																		"type": "",
																		"value": "s according to this NFT..."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7520:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:19"
																},
																"nativeSrc": "7520:56:19",
																"nodeType": "YulFunctionCall",
																"src": "7520:56:19"
															},
															"nativeSrc": "7520:56:19",
															"nodeType": "YulExpressionStatement",
															"src": "7520:56:19"
														},
														{
															"nativeSrc": "7585:27:19",
															"nodeType": "YulAssignment",
															"src": "7585:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7597:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7597:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7608:3:19",
																		"nodeType": "YulLiteral",
																		"src": "7608:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7593:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7593:3:19"
																},
																"nativeSrc": "7593:19:19",
																"nodeType": "YulFunctionCall",
																"src": "7593:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7585:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7585:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2dffa09705d7819d3bdf275be348ee3743884bb5e0f807132c27f7413a2c9bd9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7196:422:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7347:9:19",
														"nodeType": "YulTypedName",
														"src": "7347:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7361:4:19",
														"nodeType": "YulTypedName",
														"src": "7361:4:19",
														"type": ""
													}
												],
												"src": "7196:422:19"
											},
											{
												"body": {
													"nativeSrc": "7655:95:19",
													"nodeType": "YulBlock",
													"src": "7655:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7672:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7672:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7679:3:19",
																				"nodeType": "YulLiteral",
																				"src": "7679:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7684:10:19",
																				"nodeType": "YulLiteral",
																				"src": "7684:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7675:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:19"
																		},
																		"nativeSrc": "7675:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7675:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:19"
																},
																"nativeSrc": "7665:31:19",
																"nodeType": "YulFunctionCall",
																"src": "7665:31:19"
															},
															"nativeSrc": "7665:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "7665:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7712:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7712:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7715:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7715:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7705:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7705:6:19"
																},
																"nativeSrc": "7705:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7705:15:19"
															},
															"nativeSrc": "7705:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7705:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7736:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7736:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7739:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7739:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7729:6:19"
																},
																"nativeSrc": "7729:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7729:15:19"
															},
															"nativeSrc": "7729:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7729:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7623:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "7623:127:19"
											},
											{
												"body": {
													"nativeSrc": "7803:77:19",
													"nodeType": "YulBlock",
													"src": "7803:77:19",
													"statements": [
														{
															"nativeSrc": "7813:16:19",
															"nodeType": "YulAssignment",
															"src": "7813:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7824:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "7824:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7827:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "7827:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7820:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7820:3:19"
																},
																"nativeSrc": "7820:9:19",
																"nodeType": "YulFunctionCall",
																"src": "7820:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7813:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7852:22:19",
																"nodeType": "YulBlock",
																"src": "7852:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7854:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7854:16:19"
																			},
																			"nativeSrc": "7854:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7854:18:19"
																		},
																		"nativeSrc": "7854:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7854:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7844:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "7844:1:19"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7847:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7847:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7841:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7841:2:19"
																},
																"nativeSrc": "7841:10:19",
																"nodeType": "YulFunctionCall",
																"src": "7841:10:19"
															},
															"nativeSrc": "7838:36:19",
															"nodeType": "YulIf",
															"src": "7838:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7755:125:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7786:1:19",
														"nodeType": "YulTypedName",
														"src": "7786:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7789:1:19",
														"nodeType": "YulTypedName",
														"src": "7789:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7795:3:19",
														"nodeType": "YulTypedName",
														"src": "7795:3:19",
														"type": ""
													}
												],
												"src": "7755:125:19"
											},
											{
												"body": {
													"nativeSrc": "7937:116:19",
													"nodeType": "YulBlock",
													"src": "7937:116:19",
													"statements": [
														{
															"nativeSrc": "7947:20:19",
															"nodeType": "YulAssignment",
															"src": "7947:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7962:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "7962:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7965:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "7965:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7958:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:19"
																},
																"nativeSrc": "7958:9:19",
																"nodeType": "YulFunctionCall",
																"src": "7958:9:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7947:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "7947:7:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8025:22:19",
																"nodeType": "YulBlock",
																"src": "8025:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8027:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "8027:16:19"
																			},
																			"nativeSrc": "8027:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:18:19"
																		},
																		"nativeSrc": "8027:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8027:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7996:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "7996:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7989:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "7989:6:19"
																				},
																				"nativeSrc": "7989:9:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7989:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8003:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "8003:1:19"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8010:7:19",
																								"nodeType": "YulIdentifier",
																								"src": "8010:7:19"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8019:1:19",
																								"nodeType": "YulIdentifier",
																								"src": "8019:1:19"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8006:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "8006:3:19"
																						},
																						"nativeSrc": "8006:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8006:15:19"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8000:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "8000:2:19"
																				},
																				"nativeSrc": "8000:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8000:22:19"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7986:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7986:2:19"
																		},
																		"nativeSrc": "7986:37:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7986:37:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7979:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7979:6:19"
																},
																"nativeSrc": "7979:45:19",
																"nodeType": "YulFunctionCall",
																"src": "7979:45:19"
															},
															"nativeSrc": "7976:71:19",
															"nodeType": "YulIf",
															"src": "7976:71:19"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7885:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7916:1:19",
														"nodeType": "YulTypedName",
														"src": "7916:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7919:1:19",
														"nodeType": "YulTypedName",
														"src": "7919:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7925:7:19",
														"nodeType": "YulTypedName",
														"src": "7925:7:19",
														"type": ""
													}
												],
												"src": "7885:168:19"
											},
											{
												"body": {
													"nativeSrc": "8107:79:19",
													"nodeType": "YulBlock",
													"src": "8107:79:19",
													"statements": [
														{
															"nativeSrc": "8117:17:19",
															"nodeType": "YulAssignment",
															"src": "8117:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8129:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "8129:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8132:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "8132:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8125:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8125:3:19"
																},
																"nativeSrc": "8125:9:19",
																"nodeType": "YulFunctionCall",
																"src": "8125:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8117:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8117:4:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8158:22:19",
																"nodeType": "YulBlock",
																"src": "8158:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8160:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "8160:16:19"
																			},
																			"nativeSrc": "8160:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8160:18:19"
																		},
																		"nativeSrc": "8160:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8160:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8149:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:19"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8155:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "8155:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8146:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8146:2:19"
																},
																"nativeSrc": "8146:11:19",
																"nodeType": "YulFunctionCall",
																"src": "8146:11:19"
															},
															"nativeSrc": "8143:37:19",
															"nodeType": "YulIf",
															"src": "8143:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8058:128:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8089:1:19",
														"nodeType": "YulTypedName",
														"src": "8089:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8092:1:19",
														"nodeType": "YulTypedName",
														"src": "8092:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8098:4:19",
														"nodeType": "YulTypedName",
														"src": "8098:4:19",
														"type": ""
													}
												],
												"src": "8058:128:19"
											},
											{
												"body": {
													"nativeSrc": "8365:180:19",
													"nodeType": "YulBlock",
													"src": "8365:180:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8382:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8382:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8393:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8393:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8375:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8375:6:19"
																},
																"nativeSrc": "8375:21:19",
																"nodeType": "YulFunctionCall",
																"src": "8375:21:19"
															},
															"nativeSrc": "8375:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "8375:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8416:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8416:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8427:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8427:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8412:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8412:3:19"
																		},
																		"nativeSrc": "8412:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8412:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8432:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8432:2:19",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8405:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8405:6:19"
																},
																"nativeSrc": "8405:30:19",
																"nodeType": "YulFunctionCall",
																"src": "8405:30:19"
															},
															"nativeSrc": "8405:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "8405:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8455:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8455:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8466:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8466:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8451:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:19"
																		},
																		"nativeSrc": "8451:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8451:18:19"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206f776e6572206f662074686973204e46542e",
																		"kind": "string",
																		"nativeSrc": "8471:32:19",
																		"nodeType": "YulLiteral",
																		"src": "8471:32:19",
																		"type": "",
																		"value": "You are not owner of this NFT."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8444:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:19"
																},
																"nativeSrc": "8444:60:19",
																"nodeType": "YulFunctionCall",
																"src": "8444:60:19"
															},
															"nativeSrc": "8444:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "8444:60:19"
														},
														{
															"nativeSrc": "8513:26:19",
															"nodeType": "YulAssignment",
															"src": "8513:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8525:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8536:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8521:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8521:3:19"
																},
																"nativeSrc": "8521:18:19",
																"nodeType": "YulFunctionCall",
																"src": "8521:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8513:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8513:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8191:354:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8342:9:19",
														"nodeType": "YulTypedName",
														"src": "8342:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8356:4:19",
														"nodeType": "YulTypedName",
														"src": "8356:4:19",
														"type": ""
													}
												],
												"src": "8191:354:19"
											},
											{
												"body": {
													"nativeSrc": "8724:161:19",
													"nodeType": "YulBlock",
													"src": "8724:161:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8741:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8741:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8752:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8752:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8734:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8734:6:19"
																},
																"nativeSrc": "8734:21:19",
																"nodeType": "YulFunctionCall",
																"src": "8734:21:19"
															},
															"nativeSrc": "8734:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "8734:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8775:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8775:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8786:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8786:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8771:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:19"
																		},
																		"nativeSrc": "8771:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8771:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8791:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8791:2:19",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8764:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:19"
																},
																"nativeSrc": "8764:30:19",
																"nodeType": "YulFunctionCall",
																"src": "8764:30:19"
															},
															"nativeSrc": "8764:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "8764:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8814:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8825:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8825:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8810:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8810:3:19"
																		},
																		"nativeSrc": "8810:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8810:18:19"
																	},
																	{
																		"hexValue": "4e4f54204c4f434b45442e",
																		"kind": "string",
																		"nativeSrc": "8830:13:19",
																		"nodeType": "YulLiteral",
																		"src": "8830:13:19",
																		"type": "",
																		"value": "NOT LOCKED."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8803:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8803:6:19"
																},
																"nativeSrc": "8803:41:19",
																"nodeType": "YulFunctionCall",
																"src": "8803:41:19"
															},
															"nativeSrc": "8803:41:19",
															"nodeType": "YulExpressionStatement",
															"src": "8803:41:19"
														},
														{
															"nativeSrc": "8853:26:19",
															"nodeType": "YulAssignment",
															"src": "8853:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8865:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8865:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8876:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8876:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8861:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8861:3:19"
																},
																"nativeSrc": "8861:18:19",
																"nodeType": "YulFunctionCall",
																"src": "8861:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8853:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8853:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d04edaa3b90b3fe18a20db0afbdb02474ec3d1c966fc7ecdbed8d5b968338a42__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8550:335:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8701:9:19",
														"nodeType": "YulTypedName",
														"src": "8701:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8715:4:19",
														"nodeType": "YulTypedName",
														"src": "8715:4:19",
														"type": ""
													}
												],
												"src": "8550:335:19"
											},
											{
												"body": {
													"nativeSrc": "8937:89:19",
													"nodeType": "YulBlock",
													"src": "8937:89:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8964:22:19",
																"nodeType": "YulBlock",
																"src": "8964:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8966:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "8966:16:19"
																			},
																			"nativeSrc": "8966:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8966:18:19"
																		},
																		"nativeSrc": "8966:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8966:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8957:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8957:5:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8950:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8950:6:19"
																},
																"nativeSrc": "8950:13:19",
																"nodeType": "YulFunctionCall",
																"src": "8950:13:19"
															},
															"nativeSrc": "8947:39:19",
															"nodeType": "YulIf",
															"src": "8947:39:19"
														},
														{
															"nativeSrc": "8995:25:19",
															"nodeType": "YulAssignment",
															"src": "8995:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9006:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "9006:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9017:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9017:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9013:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9013:3:19"
																		},
																		"nativeSrc": "9013:6:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9013:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9002:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9002:3:19"
																},
																"nativeSrc": "9002:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9002:18:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8995:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8995:3:19"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "8890:136:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8919:5:19",
														"nodeType": "YulTypedName",
														"src": "8919:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8929:3:19",
														"nodeType": "YulTypedName",
														"src": "8929:3:19",
														"type": ""
													}
												],
												"src": "8890:136:19"
											},
											{
												"body": {
													"nativeSrc": "9188:214:19",
													"nodeType": "YulBlock",
													"src": "9188:214:19",
													"statements": [
														{
															"nativeSrc": "9198:26:19",
															"nodeType": "YulAssignment",
															"src": "9198:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9210:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9210:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9221:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9221:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9206:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9206:3:19"
																},
																"nativeSrc": "9206:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9206:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9198:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9198:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9240:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9240:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9255:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9255:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9271:3:19",
																								"nodeType": "YulLiteral",
																								"src": "9271:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9276:1:19",
																								"nodeType": "YulLiteral",
																								"src": "9276:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9267:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "9267:3:19"
																						},
																						"nativeSrc": "9267:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "9267:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9280:1:19",
																						"nodeType": "YulLiteral",
																						"src": "9280:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9263:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9263:3:19"
																				},
																				"nativeSrc": "9263:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9263:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9251:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9251:3:19"
																		},
																		"nativeSrc": "9251:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9251:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9233:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9233:6:19"
																},
																"nativeSrc": "9233:51:19",
																"nodeType": "YulFunctionCall",
																"src": "9233:51:19"
															},
															"nativeSrc": "9233:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "9233:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9304:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9304:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9315:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9315:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9300:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9300:3:19"
																		},
																		"nativeSrc": "9300:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9300:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9324:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9324:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9340:3:19",
																								"nodeType": "YulLiteral",
																								"src": "9340:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9345:1:19",
																								"nodeType": "YulLiteral",
																								"src": "9345:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9336:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "9336:3:19"
																						},
																						"nativeSrc": "9336:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "9336:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9349:1:19",
																						"nodeType": "YulLiteral",
																						"src": "9349:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9332:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9332:3:19"
																				},
																				"nativeSrc": "9332:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9332:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9320:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9320:3:19"
																		},
																		"nativeSrc": "9320:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9320:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9293:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9293:6:19"
																},
																"nativeSrc": "9293:60:19",
																"nodeType": "YulFunctionCall",
																"src": "9293:60:19"
															},
															"nativeSrc": "9293:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "9293:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9373:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9373:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9384:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9384:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9369:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9369:3:19"
																		},
																		"nativeSrc": "9369:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9369:18:19"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9389:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9389:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9362:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9362:6:19"
																},
																"nativeSrc": "9362:34:19",
																"nodeType": "YulFunctionCall",
																"src": "9362:34:19"
															},
															"nativeSrc": "9362:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "9362:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9031:371:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9141:9:19",
														"nodeType": "YulTypedName",
														"src": "9141:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9152:6:19",
														"nodeType": "YulTypedName",
														"src": "9152:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9160:6:19",
														"nodeType": "YulTypedName",
														"src": "9160:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9168:6:19",
														"nodeType": "YulTypedName",
														"src": "9168:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9179:4:19",
														"nodeType": "YulTypedName",
														"src": "9179:4:19",
														"type": ""
													}
												],
												"src": "9031:371:19"
											},
											{
												"body": {
													"nativeSrc": "9439:95:19",
													"nodeType": "YulBlock",
													"src": "9439:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9456:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9456:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9463:3:19",
																				"nodeType": "YulLiteral",
																				"src": "9463:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9468:10:19",
																				"nodeType": "YulLiteral",
																				"src": "9468:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9459:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9459:3:19"
																		},
																		"nativeSrc": "9459:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9459:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9449:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9449:6:19"
																},
																"nativeSrc": "9449:31:19",
																"nodeType": "YulFunctionCall",
																"src": "9449:31:19"
															},
															"nativeSrc": "9449:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "9449:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9496:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9496:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9499:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9499:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9489:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:19"
																},
																"nativeSrc": "9489:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9489:15:19"
															},
															"nativeSrc": "9489:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9489:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9520:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9520:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9523:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9523:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9513:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9513:6:19"
																},
																"nativeSrc": "9513:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9513:15:19"
															},
															"nativeSrc": "9513:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9513:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9407:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "9407:127:19"
											},
											{
												"body": {
													"nativeSrc": "9630:825:19",
													"nodeType": "YulBlock",
													"src": "9630:825:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9676:16:19",
																"nodeType": "YulBlock",
																"src": "9676:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9685:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9685:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9688:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9688:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9678:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9678:6:19"
																			},
																			"nativeSrc": "9678:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9678:12:19"
																		},
																		"nativeSrc": "9678:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9678:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9651:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9651:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9660:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9660:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9647:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9647:3:19"
																		},
																		"nativeSrc": "9647:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9647:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9672:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9643:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:19"
																},
																"nativeSrc": "9643:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9643:32:19"
															},
															"nativeSrc": "9640:52:19",
															"nodeType": "YulIf",
															"src": "9640:52:19"
														},
														{
															"nativeSrc": "9701:30:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9701:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9721:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9721:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9715:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9715:5:19"
																},
																"nativeSrc": "9715:16:19",
																"nodeType": "YulFunctionCall",
																"src": "9715:16:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "9705:6:19",
																	"nodeType": "YulTypedName",
																	"src": "9705:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9774:16:19",
																"nodeType": "YulBlock",
																"src": "9774:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9783:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9783:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9786:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9786:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9776:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9776:6:19"
																			},
																			"nativeSrc": "9776:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9776:12:19"
																		},
																		"nativeSrc": "9776:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9776:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9746:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9746:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9754:18:19",
																		"nodeType": "YulLiteral",
																		"src": "9754:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9743:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9743:2:19"
																},
																"nativeSrc": "9743:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9743:30:19"
															},
															"nativeSrc": "9740:50:19",
															"nodeType": "YulIf",
															"src": "9740:50:19"
														},
														{
															"nativeSrc": "9799:32:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9799:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9813:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9813:9:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "9824:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9824:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9809:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9809:3:19"
																},
																"nativeSrc": "9809:22:19",
																"nodeType": "YulFunctionCall",
																"src": "9809:22:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9803:2:19",
																	"nodeType": "YulTypedName",
																	"src": "9803:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9879:16:19",
																"nodeType": "YulBlock",
																"src": "9879:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9888:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9888:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9891:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9891:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9881:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9881:6:19"
																			},
																			"nativeSrc": "9881:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9881:12:19"
																		},
																		"nativeSrc": "9881:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9881:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "9858:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "9858:2:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9862:4:19",
																						"nodeType": "YulLiteral",
																						"src": "9862:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9854:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9854:3:19"
																				},
																				"nativeSrc": "9854:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9854:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9869:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9869:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9850:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9850:3:19"
																		},
																		"nativeSrc": "9850:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9850:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9843:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9843:6:19"
																},
																"nativeSrc": "9843:35:19",
																"nodeType": "YulFunctionCall",
																"src": "9843:35:19"
															},
															"nativeSrc": "9840:55:19",
															"nodeType": "YulIf",
															"src": "9840:55:19"
														},
														{
															"nativeSrc": "9904:23:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9904:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "9924:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "9924:2:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9918:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9918:5:19"
																},
																"nativeSrc": "9918:9:19",
																"nodeType": "YulFunctionCall",
																"src": "9918:9:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9908:6:19",
																	"nodeType": "YulTypedName",
																	"src": "9908:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9970:22:19",
																"nodeType": "YulBlock",
																"src": "9970:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9972:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "9972:16:19"
																			},
																			"nativeSrc": "9972:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9972:18:19"
																		},
																		"nativeSrc": "9972:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9972:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9942:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9942:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9950:18:19",
																		"nodeType": "YulLiteral",
																		"src": "9950:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9939:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9939:2:19"
																},
																"nativeSrc": "9939:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9939:30:19"
															},
															"nativeSrc": "9936:56:19",
															"nodeType": "YulIf",
															"src": "9936:56:19"
														},
														{
															"nativeSrc": "10001:23:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10001:23:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10021:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10021:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10015:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10015:5:19"
																},
																"nativeSrc": "10015:9:19",
																"nodeType": "YulFunctionCall",
																"src": "10015:9:19"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10005:6:19",
																	"nodeType": "YulTypedName",
																	"src": "10005:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10033:85:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10033:85:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10055:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10055:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "10079:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "10079:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10087:4:19",
																										"nodeType": "YulLiteral",
																										"src": "10087:4:19",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10075:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "10075:3:19"
																								},
																								"nativeSrc": "10075:17:19",
																								"nodeType": "YulFunctionCall",
																								"src": "10075:17:19"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10098:2:19",
																										"nodeType": "YulLiteral",
																										"src": "10098:2:19",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "10094:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "10094:3:19"
																								},
																								"nativeSrc": "10094:7:19",
																								"nodeType": "YulFunctionCall",
																								"src": "10094:7:19"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "10071:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "10071:3:19"
																						},
																						"nativeSrc": "10071:31:19",
																						"nodeType": "YulFunctionCall",
																						"src": "10071:31:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10104:2:19",
																						"nodeType": "YulLiteral",
																						"src": "10104:2:19",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10067:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10067:3:19"
																				},
																				"nativeSrc": "10067:40:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10067:40:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10113:2:19",
																						"nodeType": "YulLiteral",
																						"src": "10113:2:19",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10109:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10109:3:19"
																				},
																				"nativeSrc": "10109:7:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10109:7:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10063:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10063:3:19"
																		},
																		"nativeSrc": "10063:54:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10063:54:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10051:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10051:3:19"
																},
																"nativeSrc": "10051:67:19",
																"nodeType": "YulFunctionCall",
																"src": "10051:67:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "10037:10:19",
																	"nodeType": "YulTypedName",
																	"src": "10037:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10193:22:19",
																"nodeType": "YulBlock",
																"src": "10193:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10195:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10195:16:19"
																			},
																			"nativeSrc": "10195:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10195:18:19"
																		},
																		"nativeSrc": "10195:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10195:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10136:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "10136:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10148:18:19",
																				"nodeType": "YulLiteral",
																				"src": "10148:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10133:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "10133:2:19"
																		},
																		"nativeSrc": "10133:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10133:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10172:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "10172:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "10184:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10184:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10169:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "10169:2:19"
																		},
																		"nativeSrc": "10169:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10169:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10130:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10130:2:19"
																},
																"nativeSrc": "10130:62:19",
																"nodeType": "YulFunctionCall",
																"src": "10130:62:19"
															},
															"nativeSrc": "10127:88:19",
															"nodeType": "YulIf",
															"src": "10127:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10231:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10235:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "10235:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10224:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10224:6:19"
																},
																"nativeSrc": "10224:22:19",
																"nodeType": "YulFunctionCall",
																"src": "10224:22:19"
															},
															"nativeSrc": "10224:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "10224:22:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10262:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10262:6:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10270:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10270:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10255:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10255:6:19"
																},
																"nativeSrc": "10255:22:19",
																"nodeType": "YulFunctionCall",
																"src": "10255:22:19"
															},
															"nativeSrc": "10255:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "10255:22:19"
														},
														{
															"body": {
																"nativeSrc": "10327:16:19",
																"nodeType": "YulBlock",
																"src": "10327:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10336:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10336:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10339:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10339:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10329:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10329:6:19"
																			},
																			"nativeSrc": "10329:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10329:12:19"
																		},
																		"nativeSrc": "10329:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10329:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "10300:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "10300:2:19"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "10304:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10304:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10296:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10296:3:19"
																				},
																				"nativeSrc": "10296:15:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10296:15:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10313:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10313:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10292:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10292:3:19"
																		},
																		"nativeSrc": "10292:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10292:24:19"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "10318:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "10318:7:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10289:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10289:2:19"
																},
																"nativeSrc": "10289:37:19",
																"nodeType": "YulFunctionCall",
																"src": "10289:37:19"
															},
															"nativeSrc": "10286:57:19",
															"nodeType": "YulIf",
															"src": "10286:57:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "10391:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "10391:2:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10395:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10395:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10387:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10387:3:19"
																		},
																		"nativeSrc": "10387:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10387:11:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10404:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10404:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10412:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10412:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10400:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10400:3:19"
																		},
																		"nativeSrc": "10400:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10400:15:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10417:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10417:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10352:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "10352:34:19"
																},
																"nativeSrc": "10352:72:19",
																"nodeType": "YulFunctionCall",
																"src": "10352:72:19"
															},
															"nativeSrc": "10352:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "10352:72:19"
														},
														{
															"nativeSrc": "10433:16:19",
															"nodeType": "YulAssignment",
															"src": "10433:16:19",
															"value": {
																"name": "memPtr",
																"nativeSrc": "10443:6:19",
																"nodeType": "YulIdentifier",
																"src": "10443:6:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10433:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "9539:916:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9596:9:19",
														"nodeType": "YulTypedName",
														"src": "9596:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9607:7:19",
														"nodeType": "YulTypedName",
														"src": "9607:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9619:6:19",
														"nodeType": "YulTypedName",
														"src": "9619:6:19",
														"type": ""
													}
												],
												"src": "9539:916:19"
											},
											{
												"body": {
													"nativeSrc": "10492:95:19",
													"nodeType": "YulBlock",
													"src": "10492:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10509:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10509:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10516:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10516:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10521:10:19",
																				"nodeType": "YulLiteral",
																				"src": "10521:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10512:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10512:3:19"
																		},
																		"nativeSrc": "10512:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10512:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10502:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10502:6:19"
																},
																"nativeSrc": "10502:31:19",
																"nodeType": "YulFunctionCall",
																"src": "10502:31:19"
															},
															"nativeSrc": "10502:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "10502:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10549:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10549:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10552:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10552:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10542:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10542:6:19"
																},
																"nativeSrc": "10542:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10542:15:19"
															},
															"nativeSrc": "10542:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10542:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10573:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10573:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10576:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10576:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10566:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10566:6:19"
																},
																"nativeSrc": "10566:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10566:15:19"
															},
															"nativeSrc": "10566:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10566:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10460:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10460:127:19"
											},
											{
												"body": {
													"nativeSrc": "10639:88:19",
													"nodeType": "YulBlock",
													"src": "10639:88:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10670:22:19",
																"nodeType": "YulBlock",
																"src": "10670:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10672:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10672:16:19"
																			},
																			"nativeSrc": "10672:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10672:18:19"
																		},
																		"nativeSrc": "10672:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10672:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10655:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10655:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10666:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10666:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10662:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:19"
																		},
																		"nativeSrc": "10662:6:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10662:6:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10652:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10652:2:19"
																},
																"nativeSrc": "10652:17:19",
																"nodeType": "YulFunctionCall",
																"src": "10652:17:19"
															},
															"nativeSrc": "10649:43:19",
															"nodeType": "YulIf",
															"src": "10649:43:19"
														},
														{
															"nativeSrc": "10701:20:19",
															"nodeType": "YulAssignment",
															"src": "10701:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10712:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10712:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10719:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10719:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10708:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10708:3:19"
																},
																"nativeSrc": "10708:13:19",
																"nodeType": "YulFunctionCall",
																"src": "10708:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10701:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10592:135:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10621:5:19",
														"nodeType": "YulTypedName",
														"src": "10621:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10631:3:19",
														"nodeType": "YulTypedName",
														"src": "10631:3:19",
														"type": ""
													}
												],
												"src": "10592:135:19"
											},
											{
												"body": {
													"nativeSrc": "10906:174:19",
													"nodeType": "YulBlock",
													"src": "10906:174:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10923:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10923:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10934:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10934:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10916:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10916:6:19"
																},
																"nativeSrc": "10916:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10916:21:19"
															},
															"nativeSrc": "10916:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10916:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10957:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10957:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10968:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10968:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10953:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10953:3:19"
																		},
																		"nativeSrc": "10953:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10953:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10973:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10973:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10946:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10946:6:19"
																},
																"nativeSrc": "10946:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10946:30:19"
															},
															"nativeSrc": "10946:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "10946:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10996:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10996:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11007:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11007:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10992:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10992:3:19"
																		},
																		"nativeSrc": "10992:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10992:18:19"
																	},
																	{
																		"hexValue": "4f776e65722043616e27742042757920497473204e667473",
																		"kind": "string",
																		"nativeSrc": "11012:26:19",
																		"nodeType": "YulLiteral",
																		"src": "11012:26:19",
																		"type": "",
																		"value": "Owner Can't Buy Its Nfts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10985:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10985:6:19"
																},
																"nativeSrc": "10985:54:19",
																"nodeType": "YulFunctionCall",
																"src": "10985:54:19"
															},
															"nativeSrc": "10985:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "10985:54:19"
														},
														{
															"nativeSrc": "11048:26:19",
															"nodeType": "YulAssignment",
															"src": "11048:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11060:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11060:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11071:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11071:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11056:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11056:3:19"
																},
																"nativeSrc": "11056:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11056:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11048:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11048:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c986b099ac986c497fdbd62f86c74d9b9900815f0f1af5e1bf50fcbfb3806e52__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10732:348:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10883:9:19",
														"nodeType": "YulTypedName",
														"src": "10883:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10897:4:19",
														"nodeType": "YulTypedName",
														"src": "10897:4:19",
														"type": ""
													}
												],
												"src": "10732:348:19"
											},
											{
												"body": {
													"nativeSrc": "11259:228:19",
													"nodeType": "YulBlock",
													"src": "11259:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11276:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11276:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11287:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11287:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11269:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11269:6:19"
																},
																"nativeSrc": "11269:21:19",
																"nodeType": "YulFunctionCall",
																"src": "11269:21:19"
															},
															"nativeSrc": "11269:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "11269:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11310:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11310:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11321:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11321:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11306:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:19"
																		},
																		"nativeSrc": "11306:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11306:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11326:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11326:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11299:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11299:6:19"
																},
																"nativeSrc": "11299:30:19",
																"nodeType": "YulFunctionCall",
																"src": "11299:30:19"
															},
															"nativeSrc": "11299:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "11299:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11349:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11349:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11360:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11360:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11345:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11345:3:19"
																		},
																		"nativeSrc": "11345:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11345:18:19"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67",
																		"kind": "string",
																		"nativeSrc": "11365:34:19",
																		"nodeType": "YulLiteral",
																		"src": "11365:34:19",
																		"type": "",
																		"value": "Not enough ether to cover asking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11338:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11338:6:19"
																},
																"nativeSrc": "11338:62:19",
																"nodeType": "YulFunctionCall",
																"src": "11338:62:19"
															},
															"nativeSrc": "11338:62:19",
															"nodeType": "YulExpressionStatement",
															"src": "11338:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11420:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11420:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11431:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11431:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11416:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11416:3:19"
																		},
																		"nativeSrc": "11416:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11416:18:19"
																	},
																	{
																		"hexValue": "207072696365",
																		"kind": "string",
																		"nativeSrc": "11436:8:19",
																		"nodeType": "YulLiteral",
																		"src": "11436:8:19",
																		"type": "",
																		"value": " price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11409:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11409:6:19"
																},
																"nativeSrc": "11409:36:19",
																"nodeType": "YulFunctionCall",
																"src": "11409:36:19"
															},
															"nativeSrc": "11409:36:19",
															"nodeType": "YulExpressionStatement",
															"src": "11409:36:19"
														},
														{
															"nativeSrc": "11454:27:19",
															"nodeType": "YulAssignment",
															"src": "11454:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11466:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11466:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11477:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11477:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11462:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11462:3:19"
																},
																"nativeSrc": "11462:19:19",
																"nodeType": "YulFunctionCall",
																"src": "11462:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11454:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11454:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11085:402:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11236:9:19",
														"nodeType": "YulTypedName",
														"src": "11236:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11250:4:19",
														"nodeType": "YulTypedName",
														"src": "11250:4:19",
														"type": ""
													}
												],
												"src": "11085:402:19"
											},
											{
												"body": {
													"nativeSrc": "11649:214:19",
													"nodeType": "YulBlock",
													"src": "11649:214:19",
													"statements": [
														{
															"nativeSrc": "11659:26:19",
															"nodeType": "YulAssignment",
															"src": "11659:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11671:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11671:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11682:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11682:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11667:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:19"
																},
																"nativeSrc": "11667:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11667:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11659:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11659:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11701:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11701:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11716:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11716:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11732:3:19",
																								"nodeType": "YulLiteral",
																								"src": "11732:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11737:1:19",
																								"nodeType": "YulLiteral",
																								"src": "11737:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11728:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "11728:3:19"
																						},
																						"nativeSrc": "11728:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "11728:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11741:1:19",
																						"nodeType": "YulLiteral",
																						"src": "11741:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11724:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11724:3:19"
																				},
																				"nativeSrc": "11724:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11724:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11712:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:19"
																		},
																		"nativeSrc": "11712:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11712:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11694:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11694:6:19"
																},
																"nativeSrc": "11694:51:19",
																"nodeType": "YulFunctionCall",
																"src": "11694:51:19"
															},
															"nativeSrc": "11694:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "11694:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11765:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11765:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11776:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11776:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11761:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11761:3:19"
																		},
																		"nativeSrc": "11761:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11761:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11781:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11781:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11754:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:19"
																},
																"nativeSrc": "11754:34:19",
																"nodeType": "YulFunctionCall",
																"src": "11754:34:19"
															},
															"nativeSrc": "11754:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "11754:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11808:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11808:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11819:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11819:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11804:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:19"
																		},
																		"nativeSrc": "11804:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11804:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "11828:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11828:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11844:3:19",
																								"nodeType": "YulLiteral",
																								"src": "11844:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11849:1:19",
																								"nodeType": "YulLiteral",
																								"src": "11849:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11840:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "11840:3:19"
																						},
																						"nativeSrc": "11840:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "11840:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11853:1:19",
																						"nodeType": "YulLiteral",
																						"src": "11853:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11836:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11836:3:19"
																				},
																				"nativeSrc": "11836:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11836:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11824:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:19"
																		},
																		"nativeSrc": "11824:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11824:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11797:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:19"
																},
																"nativeSrc": "11797:60:19",
																"nodeType": "YulFunctionCall",
																"src": "11797:60:19"
															},
															"nativeSrc": "11797:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "11797:60:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "11492:371:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11602:9:19",
														"nodeType": "YulTypedName",
														"src": "11602:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11613:6:19",
														"nodeType": "YulTypedName",
														"src": "11613:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11621:6:19",
														"nodeType": "YulTypedName",
														"src": "11621:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11629:6:19",
														"nodeType": "YulTypedName",
														"src": "11629:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11640:4:19",
														"nodeType": "YulTypedName",
														"src": "11640:4:19",
														"type": ""
													}
												],
												"src": "11492:371:19"
											},
											{
												"body": {
													"nativeSrc": "12042:167:19",
													"nodeType": "YulBlock",
													"src": "12042:167:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12059:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12059:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12070:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12070:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12052:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12052:6:19"
																},
																"nativeSrc": "12052:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12052:21:19"
															},
															"nativeSrc": "12052:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "12052:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12093:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12093:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12104:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12104:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12089:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12089:3:19"
																		},
																		"nativeSrc": "12089:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12109:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12109:2:19",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12082:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12082:6:19"
																},
																"nativeSrc": "12082:30:19",
																"nodeType": "YulFunctionCall",
																"src": "12082:30:19"
															},
															"nativeSrc": "12082:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "12082:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12132:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12132:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12143:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12143:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12128:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:19"
																		},
																		"nativeSrc": "12128:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12128:18:19"
																	},
																	{
																		"hexValue": "54696d65204e6f742053746172742e2e2e",
																		"kind": "string",
																		"nativeSrc": "12148:19:19",
																		"nodeType": "YulLiteral",
																		"src": "12148:19:19",
																		"type": "",
																		"value": "Time Not Start..."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12121:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12121:6:19"
																},
																"nativeSrc": "12121:47:19",
																"nodeType": "YulFunctionCall",
																"src": "12121:47:19"
															},
															"nativeSrc": "12121:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "12121:47:19"
														},
														{
															"nativeSrc": "12177:26:19",
															"nodeType": "YulAssignment",
															"src": "12177:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12189:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12189:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12200:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12200:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12185:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12185:3:19"
																},
																"nativeSrc": "12185:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12185:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12177:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12177:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e19132e2a5b3988a131326da472e0805afa005fd7e3d266a14f7a8d674f841d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11868:341:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12019:9:19",
														"nodeType": "YulTypedName",
														"src": "12019:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12033:4:19",
														"nodeType": "YulTypedName",
														"src": "12033:4:19",
														"type": ""
													}
												],
												"src": "11868:341:19"
											},
											{
												"body": {
													"nativeSrc": "12388:158:19",
													"nodeType": "YulBlock",
													"src": "12388:158:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12405:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12405:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12416:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12416:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12398:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12398:6:19"
																},
																"nativeSrc": "12398:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12398:21:19"
															},
															"nativeSrc": "12398:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "12398:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12439:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12439:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12450:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12450:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12435:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12435:3:19"
																		},
																		"nativeSrc": "12435:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12435:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12455:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12455:1:19",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12428:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12428:6:19"
																},
																"nativeSrc": "12428:29:19",
																"nodeType": "YulFunctionCall",
																"src": "12428:29:19"
															},
															"nativeSrc": "12428:29:19",
															"nodeType": "YulExpressionStatement",
															"src": "12428:29:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12477:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12488:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:19"
																		},
																		"nativeSrc": "12473:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:18:19"
																	},
																	{
																		"hexValue": "54696d6520456e642e",
																		"kind": "string",
																		"nativeSrc": "12493:11:19",
																		"nodeType": "YulLiteral",
																		"src": "12493:11:19",
																		"type": "",
																		"value": "Time End."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12466:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:19"
																},
																"nativeSrc": "12466:39:19",
																"nodeType": "YulFunctionCall",
																"src": "12466:39:19"
															},
															"nativeSrc": "12466:39:19",
															"nodeType": "YulExpressionStatement",
															"src": "12466:39:19"
														},
														{
															"nativeSrc": "12514:26:19",
															"nodeType": "YulAssignment",
															"src": "12514:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12526:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12526:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12537:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12537:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12522:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12522:3:19"
																},
																"nativeSrc": "12522:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12522:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12514:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12514:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23f1c66c38ab7839449758902632d5872a6a1d39e9064d0ff56a16c4fa72c960__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12214:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12365:9:19",
														"nodeType": "YulTypedName",
														"src": "12365:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12379:4:19",
														"nodeType": "YulTypedName",
														"src": "12379:4:19",
														"type": ""
													}
												],
												"src": "12214:332:19"
											},
											{
												"body": {
													"nativeSrc": "12725:164:19",
													"nodeType": "YulBlock",
													"src": "12725:164:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12742:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12742:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12753:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12753:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12735:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12735:6:19"
																},
																"nativeSrc": "12735:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12735:21:19"
															},
															"nativeSrc": "12735:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "12735:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12776:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12776:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12787:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12787:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12772:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12772:3:19"
																		},
																		"nativeSrc": "12772:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12772:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12792:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12792:2:19",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12765:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12765:6:19"
																},
																"nativeSrc": "12765:30:19",
																"nodeType": "YulFunctionCall",
																"src": "12765:30:19"
															},
															"nativeSrc": "12765:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "12765:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12815:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12815:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12826:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12826:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12811:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12811:3:19"
																		},
																		"nativeSrc": "12811:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12811:18:19"
																	},
																	{
																		"hexValue": "416c7265616479205374616b6564",
																		"kind": "string",
																		"nativeSrc": "12831:16:19",
																		"nodeType": "YulLiteral",
																		"src": "12831:16:19",
																		"type": "",
																		"value": "Already Staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12804:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12804:6:19"
																},
																"nativeSrc": "12804:44:19",
																"nodeType": "YulFunctionCall",
																"src": "12804:44:19"
															},
															"nativeSrc": "12804:44:19",
															"nodeType": "YulExpressionStatement",
															"src": "12804:44:19"
														},
														{
															"nativeSrc": "12857:26:19",
															"nodeType": "YulAssignment",
															"src": "12857:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12869:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12869:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12880:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12880:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12865:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12865:3:19"
																},
																"nativeSrc": "12865:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12865:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12857:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12857:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3ce79e63d2a68db572db3a2ced6b344e5a9c11238f22961b122c12c58cc4a54__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12551:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12702:9:19",
														"nodeType": "YulTypedName",
														"src": "12702:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12716:4:19",
														"nodeType": "YulTypedName",
														"src": "12716:4:19",
														"type": ""
													}
												],
												"src": "12551:338:19"
											},
											{
												"body": {
													"nativeSrc": "13068:180:19",
													"nodeType": "YulBlock",
													"src": "13068:180:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13085:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13085:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13096:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13096:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13078:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13078:6:19"
																},
																"nativeSrc": "13078:21:19",
																"nodeType": "YulFunctionCall",
																"src": "13078:21:19"
															},
															"nativeSrc": "13078:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "13078:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13119:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13119:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13130:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13130:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13115:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13115:3:19"
																		},
																		"nativeSrc": "13115:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13115:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13135:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13135:2:19",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13108:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13108:6:19"
																},
																"nativeSrc": "13108:30:19",
																"nodeType": "YulFunctionCall",
																"src": "13108:30:19"
															},
															"nativeSrc": "13108:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "13108:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13158:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13158:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13169:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13169:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13154:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13154:3:19"
																		},
																		"nativeSrc": "13154:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13154:18:19"
																	},
																	{
																		"hexValue": "416c7265616479204c697374656420496e204d61726b6574706c61636521",
																		"kind": "string",
																		"nativeSrc": "13174:32:19",
																		"nodeType": "YulLiteral",
																		"src": "13174:32:19",
																		"type": "",
																		"value": "Already Listed In Marketplace!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13147:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13147:6:19"
																},
																"nativeSrc": "13147:60:19",
																"nodeType": "YulFunctionCall",
																"src": "13147:60:19"
															},
															"nativeSrc": "13147:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "13147:60:19"
														},
														{
															"nativeSrc": "13216:26:19",
															"nodeType": "YulAssignment",
															"src": "13216:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13228:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13228:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13239:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13239:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13224:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13224:3:19"
																},
																"nativeSrc": "13224:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13224:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13216:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13216:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12894:354:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13045:9:19",
														"nodeType": "YulTypedName",
														"src": "13045:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13059:4:19",
														"nodeType": "YulTypedName",
														"src": "13059:4:19",
														"type": ""
													}
												],
												"src": "12894:354:19"
											},
											{
												"body": {
													"nativeSrc": "13427:168:19",
													"nodeType": "YulBlock",
													"src": "13427:168:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13444:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13444:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13455:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13455:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13437:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13437:6:19"
																},
																"nativeSrc": "13437:21:19",
																"nodeType": "YulFunctionCall",
																"src": "13437:21:19"
															},
															"nativeSrc": "13437:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "13437:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13478:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13478:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13489:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13489:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13474:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13474:3:19"
																		},
																		"nativeSrc": "13474:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13474:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13494:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13494:2:19",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13467:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13467:6:19"
																},
																"nativeSrc": "13467:30:19",
																"nodeType": "YulFunctionCall",
																"src": "13467:30:19"
															},
															"nativeSrc": "13467:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "13467:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13517:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13517:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13528:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13528:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13513:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13513:3:19"
																		},
																		"nativeSrc": "13513:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13513:18:19"
																	},
																	{
																		"hexValue": "4e465420616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "13533:20:19",
																		"nodeType": "YulLiteral",
																		"src": "13533:20:19",
																		"type": "",
																		"value": "NFT already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13506:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13506:6:19"
																},
																"nativeSrc": "13506:48:19",
																"nodeType": "YulFunctionCall",
																"src": "13506:48:19"
															},
															"nativeSrc": "13506:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "13506:48:19"
														},
														{
															"nativeSrc": "13563:26:19",
															"nodeType": "YulAssignment",
															"src": "13563:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13575:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13575:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13586:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13586:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13571:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13571:3:19"
																},
																"nativeSrc": "13571:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13571:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13563:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13563:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02b0958c6fd549a6c6f0235031b40ad58506be9f00f4f8ac078a8d3bc2a53a75__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13253:342:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13404:9:19",
														"nodeType": "YulTypedName",
														"src": "13404:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13418:4:19",
														"nodeType": "YulTypedName",
														"src": "13418:4:19",
														"type": ""
													}
												],
												"src": "13253:342:19"
											},
											{
												"body": {
													"nativeSrc": "13774:178:19",
													"nodeType": "YulBlock",
													"src": "13774:178:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13791:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13791:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13802:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13802:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13784:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13784:6:19"
																},
																"nativeSrc": "13784:21:19",
																"nodeType": "YulFunctionCall",
																"src": "13784:21:19"
															},
															"nativeSrc": "13784:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "13784:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13825:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13825:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13836:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13836:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13821:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13821:3:19"
																		},
																		"nativeSrc": "13821:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13821:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13841:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13841:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13814:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13814:6:19"
																},
																"nativeSrc": "13814:30:19",
																"nodeType": "YulFunctionCall",
																"src": "13814:30:19"
															},
															"nativeSrc": "13814:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "13814:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13864:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13864:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13875:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13875:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13860:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:19"
																		},
																		"nativeSrc": "13860:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:18:19"
																	},
																	{
																		"hexValue": "5072696365204d757374204265204174204c65617374203020576569",
																		"kind": "string",
																		"nativeSrc": "13880:30:19",
																		"nodeType": "YulLiteral",
																		"src": "13880:30:19",
																		"type": "",
																		"value": "Price Must Be At Least 0 Wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13853:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13853:6:19"
																},
																"nativeSrc": "13853:58:19",
																"nodeType": "YulFunctionCall",
																"src": "13853:58:19"
															},
															"nativeSrc": "13853:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "13853:58:19"
														},
														{
															"nativeSrc": "13920:26:19",
															"nodeType": "YulAssignment",
															"src": "13920:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13932:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13932:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13943:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13943:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13928:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13928:3:19"
																},
																"nativeSrc": "13928:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13928:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13920:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13920:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13600:352:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13751:9:19",
														"nodeType": "YulTypedName",
														"src": "13751:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13765:4:19",
														"nodeType": "YulTypedName",
														"src": "13765:4:19",
														"type": ""
													}
												],
												"src": "13600:352:19"
											},
											{
												"body": {
													"nativeSrc": "14003:171:19",
													"nodeType": "YulBlock",
													"src": "14003:171:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14034:111:19",
																"nodeType": "YulBlock",
																"src": "14034:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14055:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14055:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14062:3:19",
																							"nodeType": "YulLiteral",
																							"src": "14062:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14067:10:19",
																							"nodeType": "YulLiteral",
																							"src": "14067:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "14058:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "14058:3:19"
																					},
																					"nativeSrc": "14058:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "14058:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14048:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14048:6:19"
																			},
																			"nativeSrc": "14048:31:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14048:31:19"
																		},
																		"nativeSrc": "14048:31:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14048:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14099:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14099:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14102:4:19",
																					"nodeType": "YulLiteral",
																					"src": "14102:4:19",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14092:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14092:6:19"
																			},
																			"nativeSrc": "14092:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14092:15:19"
																		},
																		"nativeSrc": "14092:15:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14092:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14127:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14127:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14130:4:19",
																					"nodeType": "YulLiteral",
																					"src": "14130:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14120:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14120:6:19"
																			},
																			"nativeSrc": "14120:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14120:15:19"
																		},
																		"nativeSrc": "14120:15:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14120:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14023:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "14023:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14016:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14016:6:19"
																},
																"nativeSrc": "14016:9:19",
																"nodeType": "YulFunctionCall",
																"src": "14016:9:19"
															},
															"nativeSrc": "14013:132:19",
															"nodeType": "YulIf",
															"src": "14013:132:19"
														},
														{
															"nativeSrc": "14154:14:19",
															"nodeType": "YulAssignment",
															"src": "14154:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14163:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "14163:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14166:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "14166:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14159:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14159:3:19"
																},
																"nativeSrc": "14159:9:19",
																"nodeType": "YulFunctionCall",
																"src": "14159:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14154:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "14154:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13957:217:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13988:1:19",
														"nodeType": "YulTypedName",
														"src": "13988:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13991:1:19",
														"nodeType": "YulTypedName",
														"src": "13991:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13997:1:19",
														"nodeType": "YulTypedName",
														"src": "13997:1:19",
														"type": ""
													}
												],
												"src": "13957:217:19"
											},
											{
												"body": {
													"nativeSrc": "14353:181:19",
													"nodeType": "YulBlock",
													"src": "14353:181:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14370:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14370:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14381:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14381:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14363:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14363:6:19"
																},
																"nativeSrc": "14363:21:19",
																"nodeType": "YulFunctionCall",
																"src": "14363:21:19"
															},
															"nativeSrc": "14363:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "14363:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14404:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14404:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14415:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14415:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14400:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14400:3:19"
																		},
																		"nativeSrc": "14400:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14400:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14420:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14420:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14393:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14393:6:19"
																},
																"nativeSrc": "14393:30:19",
																"nodeType": "YulFunctionCall",
																"src": "14393:30:19"
															},
															"nativeSrc": "14393:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "14393:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14443:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14443:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14454:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14454:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14439:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14439:3:19"
																		},
																		"nativeSrc": "14439:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14439:18:19"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14459:33:19",
																		"nodeType": "YulLiteral",
																		"src": "14459:33:19",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14432:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14432:6:19"
																},
																"nativeSrc": "14432:61:19",
																"nodeType": "YulFunctionCall",
																"src": "14432:61:19"
															},
															"nativeSrc": "14432:61:19",
															"nodeType": "YulExpressionStatement",
															"src": "14432:61:19"
														},
														{
															"nativeSrc": "14502:26:19",
															"nodeType": "YulAssignment",
															"src": "14502:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14514:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14514:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14525:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14525:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14510:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14510:3:19"
																},
																"nativeSrc": "14510:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14510:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14502:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14502:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14179:355:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14330:9:19",
														"nodeType": "YulTypedName",
														"src": "14330:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14344:4:19",
														"nodeType": "YulTypedName",
														"src": "14344:4:19",
														"type": ""
													}
												],
												"src": "14179:355:19"
											},
											{
												"body": {
													"nativeSrc": "14713:177:19",
													"nodeType": "YulBlock",
													"src": "14713:177:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14730:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14730:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14741:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14741:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14723:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14723:6:19"
																},
																"nativeSrc": "14723:21:19",
																"nodeType": "YulFunctionCall",
																"src": "14723:21:19"
															},
															"nativeSrc": "14723:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "14723:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14764:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14764:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14775:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14775:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14760:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14760:3:19"
																		},
																		"nativeSrc": "14760:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14760:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14780:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14780:2:19",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14753:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14753:6:19"
																},
																"nativeSrc": "14753:30:19",
																"nodeType": "YulFunctionCall",
																"src": "14753:30:19"
															},
															"nativeSrc": "14753:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "14753:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14803:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14814:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14814:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14799:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14799:3:19"
																		},
																		"nativeSrc": "14799:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14799:18:19"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "14819:29:19",
																		"nodeType": "YulLiteral",
																		"src": "14819:29:19",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14792:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14792:6:19"
																},
																"nativeSrc": "14792:57:19",
																"nodeType": "YulFunctionCall",
																"src": "14792:57:19"
															},
															"nativeSrc": "14792:57:19",
															"nodeType": "YulExpressionStatement",
															"src": "14792:57:19"
														},
														{
															"nativeSrc": "14858:26:19",
															"nodeType": "YulAssignment",
															"src": "14858:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14870:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14870:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14881:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14881:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14866:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14866:3:19"
																},
																"nativeSrc": "14866:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14866:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14858:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14858:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14539:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14690:9:19",
														"nodeType": "YulTypedName",
														"src": "14690:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14704:4:19",
														"nodeType": "YulTypedName",
														"src": "14704:4:19",
														"type": ""
													}
												],
												"src": "14539:351:19"
											},
											{
												"body": {
													"nativeSrc": "14973:199:19",
													"nodeType": "YulBlock",
													"src": "14973:199:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "15019:16:19",
																"nodeType": "YulBlock",
																"src": "15019:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15028:1:19",
																					"nodeType": "YulLiteral",
																					"src": "15028:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15031:1:19",
																					"nodeType": "YulLiteral",
																					"src": "15031:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15021:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15021:6:19"
																			},
																			"nativeSrc": "15021:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15021:12:19"
																		},
																		"nativeSrc": "15021:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15021:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14994:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "14994:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15003:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15003:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14990:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14990:3:19"
																		},
																		"nativeSrc": "14990:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14990:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15015:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15015:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14986:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14986:3:19"
																},
																"nativeSrc": "14986:32:19",
																"nodeType": "YulFunctionCall",
																"src": "14986:32:19"
															},
															"nativeSrc": "14983:52:19",
															"nodeType": "YulIf",
															"src": "14983:52:19"
														},
														{
															"nativeSrc": "15044:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "15044:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15063:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15063:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15057:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15057:5:19"
																},
																"nativeSrc": "15057:16:19",
																"nodeType": "YulFunctionCall",
																"src": "15057:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "15048:5:19",
																	"nodeType": "YulTypedName",
																	"src": "15048:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15126:16:19",
																"nodeType": "YulBlock",
																"src": "15126:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15135:1:19",
																					"nodeType": "YulLiteral",
																					"src": "15135:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15138:1:19",
																					"nodeType": "YulLiteral",
																					"src": "15138:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15128:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15128:6:19"
																			},
																			"nativeSrc": "15128:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15128:12:19"
																		},
																		"nativeSrc": "15128:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15128:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15095:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "15095:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "15116:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "15116:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "15109:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "15109:6:19"
																						},
																						"nativeSrc": "15109:13:19",
																						"nodeType": "YulFunctionCall",
																						"src": "15109:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15102:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "15102:6:19"
																				},
																				"nativeSrc": "15102:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "15102:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15092:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "15092:2:19"
																		},
																		"nativeSrc": "15092:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15092:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15085:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:19"
																},
																"nativeSrc": "15085:40:19",
																"nodeType": "YulFunctionCall",
																"src": "15085:40:19"
															},
															"nativeSrc": "15082:60:19",
															"nodeType": "YulIf",
															"src": "15082:60:19"
														},
														{
															"nativeSrc": "15151:15:19",
															"nodeType": "YulAssignment",
															"src": "15151:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "15161:5:19",
																"nodeType": "YulIdentifier",
																"src": "15161:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15151:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15151:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14895:277:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14939:9:19",
														"nodeType": "YulTypedName",
														"src": "14939:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14950:7:19",
														"nodeType": "YulTypedName",
														"src": "14950:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14962:6:19",
														"nodeType": "YulTypedName",
														"src": "14962:6:19",
														"type": ""
													}
												],
												"src": "14895:277:19"
											},
											{
												"body": {
													"nativeSrc": "15314:150:19",
													"nodeType": "YulBlock",
													"src": "15314:150:19",
													"statements": [
														{
															"nativeSrc": "15324:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "15324:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15344:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15344:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15338:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15338:5:19"
																},
																"nativeSrc": "15338:13:19",
																"nodeType": "YulFunctionCall",
																"src": "15338:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15328:6:19",
																	"nodeType": "YulTypedName",
																	"src": "15328:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15399:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15399:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15407:4:19",
																				"nodeType": "YulLiteral",
																				"src": "15407:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15395:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15395:3:19"
																		},
																		"nativeSrc": "15395:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15395:17:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15414:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15414:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15419:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15419:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15360:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "15360:34:19"
																},
																"nativeSrc": "15360:66:19",
																"nodeType": "YulFunctionCall",
																"src": "15360:66:19"
															},
															"nativeSrc": "15360:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "15360:66:19"
														},
														{
															"nativeSrc": "15435:23:19",
															"nodeType": "YulAssignment",
															"src": "15435:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15446:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15446:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15451:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15451:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15442:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15442:3:19"
																},
																"nativeSrc": "15442:16:19",
																"nodeType": "YulFunctionCall",
																"src": "15442:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15435:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15435:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15177:287:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15290:3:19",
														"nodeType": "YulTypedName",
														"src": "15290:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15295:6:19",
														"nodeType": "YulTypedName",
														"src": "15295:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15306:3:19",
														"nodeType": "YulTypedName",
														"src": "15306:3:19",
														"type": ""
													}
												],
												"src": "15177:287:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC721_$1879__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _1 := mload(srcPtr)\n            let _2 := mload(_1)\n            mstore(tail_2, and(mload(_2), sub(shl(160, 1), 1)))\n            mstore(add(tail_2, 32), and(mload(add(_2, 32)), sub(shl(160, 1), 1)))\n            mstore(add(tail_2, 64), mload(add(_2, 64)))\n            mstore(add(tail_2, 0x60), mload(add(_2, 0x60)))\n            mstore(add(tail_2, 0x80), mload(add(_2, 0x80)))\n            mstore(add(tail_2, 0xa0), iszero(iszero(mload(add(_2, 0xa0)))))\n            mstore(add(tail_2, 0xc0), mload(add(_1, 32)))\n            let memberValue0 := mload(add(_1, 64))\n            mstore(add(tail_2, 0xe0), 0x0100)\n            tail_2 := abi_encode_string(memberValue0, add(tail_2, 0x0100))\n            srcPtr := add(srcPtr, 32)\n            pos := add(pos, 32)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Please wait...\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2dffa09705d7819d3bdf275be348ee3743884bb5e0f807132c27f7413a2c9bd9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"You have claimed your all reward\")\n        mstore(add(headStart, 96), \"s according to this NFT...\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"You are not owner of this NFT.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d04edaa3b90b3fe18a20db0afbdb02474ec3d1c966fc7ecdbed8d5b968338a42__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"NOT LOCKED.\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c986b099ac986c497fdbd62f86c74d9b9900815f0f1af5e1bf50fcbfb3806e52__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Owner Can't Buy Its Nfts\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Not enough ether to cover asking\")\n        mstore(add(headStart, 96), \" price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1e19132e2a5b3988a131326da472e0805afa005fd7e3d266a14f7a8d674f841d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Time Not Start...\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_23f1c66c38ab7839449758902632d5872a6a1d39e9064d0ff56a16c4fa72c960__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Time End.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3ce79e63d2a68db572db3a2ced6b344e5a9c11238f22961b122c12c58cc4a54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already Staked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Already Listed In Marketplace!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_02b0958c6fd549a6c6f0235031b40ad58506be9f00f4f8ac078a8d3bc2a53a75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"NFT already staked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price Must Be At Least 0 Wei\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3798": [
									{
										"length": 32,
										"start": 1276
									},
									{
										"length": 32,
										"start": 2187
									},
									{
										"length": 32,
										"start": 4179
									},
									{
										"length": 32,
										"start": 4240
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061019c5760003560e01c80639158444b116100ec578063bb623d131161008a578063d84c0fd311610064578063d84c0fd314610655578063ec4b65e7146106c0578063f0441f95146106e0578063f2fde38b1461071557600080fd5b8063bb623d131461058b578063c456fc9e146105ab578063c85e4d491461061d57600080fd5b80639d76ea58116100c65780639d76ea58146104ea578063a34805691461051e578063b8237ab71461054b578063ba41c8441461056b57600080fd5b80639158444b146104955780639677ca0b146104b55780639d02e67c146104d757600080fd5b8063716135c71161015957806378e979251161013357806378e979251461035d57806384fccd5e146103735780638d02f792146104185780638da5cb5b1461047757600080fd5b8063716135c71461028657806373233ea61461029d578063772635ee1461034757600080fd5b806303d07340146101a157806319f34bf3146101de5780631e903868146102005780633197cbb61461023b578063699d503a14610251578063715018a614610271575b600080fd5b3480156101ad57600080fd5b506003546101c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ea57600080fd5b506101fe6101f93660046119d2565b610735565b005b34801561020c57600080fd5b5061022d61021b3660046119fc565b60096020526000908152604090205481565b6040519081526020016101d5565b34801561024757600080fd5b5061022d60065481565b34801561025d57600080fd5b506101fe61026c366004611a15565b610949565b34801561027d57600080fd5b506101fe610abc565b34801561029257600080fd5b5060025461022d9081565b3480156102a957600080fd5b506103046102b83660046119fc565b600a60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b039485169594909316939192909160ff1687565b604080519788526001600160a01b03968716602089015294909516938601939093526060850191909152608084015260a0830152151560c082015260e0016101d5565b34801561035357600080fd5b5061022d60045481565b34801561036957600080fd5b5061022d60055481565b34801561037f57600080fd5b506103de61038e3660046119d2565b600e6020908152600092835260408084209091529082529020805460018201546002830154600384015460048501546005909501546001600160a01b039485169593909416939192909160ff1686565b604080516001600160a01b0397881681529690951660208701529385019290925260608401526080830152151560a082015260c0016101d5565b34801561042457600080fd5b506104586104333660046119fc565b600760205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101d5565b34801561048357600080fd5b506001546001600160a01b03166101c1565b3480156104a157600080fd5b506101fe6104b0366004611a52565b610ad0565b3480156104c157600080fd5b506104ca610ae3565b6040516101d59190611ac4565b6101fe6104e5366004611a52565b610d1c565b3480156104f657600080fd5b506101c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561052a57600080fd5b5061022d610539366004611b8c565b60086020526000908152604090205481565b34801561055757600080fd5b506101fe6105663660046119d2565b61103e565b34801561057757600080fd5b506101fe6105863660046119d2565b61107b565b34801561059757600080fd5b506101fe6105a6366004611a15565b6110b8565b3480156105b757600080fd5b506103046105c63660046119d2565b600c602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b039485169594909316939192909160ff1687565b34801561062957600080fd5b5061022d6106383660046119d2565b600d60209081526000928352604080842090915290825290205481565b34801561066157600080fd5b5061069b6106703660046119fc565b600b602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060016101d5565b3480156106cc57600080fd5b506101fe6106db366004611ba7565b6112e1565b3480156106ec57600080fd5b506107006106fb3660046119fc565b611582565b604080519283526020830191909152016101d5565b34801561072157600080fd5b506101fe610730366004611b8c565b611624565b60008061074183611582565b915091508060000361076e5760405162461bcd60e51b815260040161076590611bda565b60405180910390fd5b6000838152600a6020526040902060040154600c036107f55760405162461bcd60e51b815260206004820152603a60248201527f596f75206861766520636c61696d656420796f757220616c6c2072657761726460448201527f73206163636f7264696e6720746f2074686973204e46542e2e2e0000000000006064820152608401610765565b6000838152600a6020526040902060040154600c90610815908390611c18565b10156108b7576000838152600a60205260408120600401805483929061083c908490611c18565b9091555061084c90508183611c2b565b6000848152600a60205260408120600301805490919061086d908490611c18565b909155506108b29050846108818385611c2b565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611662565b610943565b6000838152600a60205260408120600401546108d490600c611c42565b905080600a600086815260200190815260200160002060040160008282546108fc9190611c18565b9091555061090c90508184611c2b565b6000858152600a60205260408120600301805490919061092d908490611c18565b909155506109419050856108818386611c2b565b505b50505050565b8082426006541061096c5760405162461bcd60e51b815260040161076590611bda565b6000828152600a60205260409020600101546001600160a01b038281169116146109d85760405162461bcd60e51b815260206004820152601e60248201527f596f7520617265206e6f74206f776e6572206f662074686973204e46542e00006044820152606401610765565b6000828152600a602052604090206006015460ff16610a275760405162461bcd60e51b815260206004820152600b60248201526a2727aa102627a1a5a2a21760a91b6044820152606401610765565b6000838152600a60205260408120600601805460ff191690556004805491610a4e83611c55565b90915550506040516323b872dd60e01b81526001600160a01b038616906323b872dd90610a8390309088908890600401611c6c565b600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050505050505050565b610ac46116c1565b610ace60006116ee565b565b610ad86116c1565b600591909155600655565b60606000610af060025490565b905060008167ffffffffffffffff811115610b0d57610b0d611c90565b604051908082528060200260200182016040528015610b8857816020015b6040805161012081018252600060608083018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390528352602083019190915291810191909152815260200190600190039081610b2b5790505b509050600060015b6002548111610d1357600081815260076020908152604080832080546001600160a01b03168452600e8352818420600190910154845290915290206005015460ff1615610d01576040805160008381526007602081815284832080546001600160a01b03908116808652600e845287862060019384015480885290855288872061012089018a528054841660608a01908152948101549093166080890152600283015460a0890152600383015460c089015260048084015460e08a015260059093015460ff16151561010089015292875283870189905294889052929091528451638ad9134560e01b8152918201529192830191638ad9134590602401600060405180830381865afa158015610caa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cd29190810190611ca6565b815250838381518110610ce757610ce7611d5b565b60200260200101819052508180610cfd90611d71565b9250505b80610d0b81611d71565b915050610b90565b50909392505050565b610d24611740565b600082815260076020908152604080832080546001600160a01b039081168552600e8452828520600190920154855292529091205433911603610da95760405162461bcd60e51b815260206004820152601860248201527f4f776e65722043616e27742042757920497473204e66747300000000000000006044820152606401610765565b600082815260076020908152604080832080546001600160a01b03168452600e83528184206001909101548452909152902060040154811015610e3d5760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760448201526520707269636560d01b6064820152608401610765565b600082815260076020908152604080832080546001600160a01b039081168552600e845282852060019092015485529252808320600481015490549151909391909216916108fc84150291849190818181858888f19350505050158015610ea8573d6000803e3d6000fd5b5060008381526007602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116916323b872dd91610ef0913091339190600401611c6c565b600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050600084815260076020908152604080832080546001918201546001600160a01b03918216808752600e865284872082885290955294839020909101549151636e0cee0960e01b815233600482015260248101949094521660448301529150636e0cee0990606401600060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050600084815260076020818152604080842080546001600160a01b03168552600e835281852060019091015485529091528220600501805460ff19169055915061100160025490565b81526020810191909152604001600090812080546001600160a01b03191681556001015561102f6002611799565b5061103a6001600055565b5050565b6110466116c1565b61103a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168330846117f0565b6110836116c1565b61103a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163084846117f0565b80600654600554036110dc5760405162461bcd60e51b815260040161076590611bda565b42600554106111215760405162461bcd60e51b81526020600482015260116024820152702a34b6b2902737ba1029ba30b93a17171760791b6044820152606401610765565b426006541161115e5760405162461bcd60e51b81526020600482015260096024820152682a34b6b29022b7321760b91b6044820152606401610765565b6000818152600a602052604090206006015460ff16156111b15760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4814dd185ad95960921b6044820152606401610765565b6040805160e0810182528381526001600160a01b03858116602080840191825230848601908152600060608601818152608087018281524260a08901908152600160c08a018181528d8652600a90975299842098518955955198880180546001600160a01b03199081169a89169a909a17905592516002880180549099169616959095179096559251600385015591516004808501919091559051600584015590516006909201805460ff19169215159290921790915580549161127483611d71565b90915550506040516323b872dd60e01b81526001600160a01b038516906323b872dd906112a990869030908790600401611c6c565b600060405180830381600087803b1580156112c357600080fd5b505af11580156112d7573d6000803e3d6000fd5b5050505050505050565b6112e9611740565b6001600160a01b0383166000908152600e6020908152604080832084845290915290206005015460ff16156113605760405162461bcd60e51b815260206004820152601e60248201527f416c7265616479204c697374656420496e204d61726b6574706c6163652100006044820152606401610765565b6001600160a01b0383166000908152600c6020908152604080832084845290915290206006015460ff16156113cc5760405162461bcd60e51b815260206004820152601260248201527113919508185b1c9958591e481cdd185ad95960721b6044820152606401610765565b6113da600280546001019055565b6040805160c0810182523381523060208201529081018290526060810161140060025490565b81526020808201859052600160409283018190526001600160a01b038088166000818152600e85528581208882528552858120875181549085166001600160a01b03199182161782558887015195820180549690951695169490941790925585850151600280850191909155606087015160038501556080870151600485015560a0909601516005909301805493151560ff199094169390931790925583518085019094529083529082018490529091600791906114bc905490565b81526020808201929092526040908101600020835181546001600160a01b0319166001600160a01b039182161782559390920151600190920191909155516323b872dd60e01b8152908416906323b872dd9061152090339030908690600401611c6c565b600060405180830381600087803b15801561153a57600080fd5b505af115801561154e573d6000803e3d6000fd5b505033600090815260086020526040812080549350915061156e83611d71565b919050555061157d6001600055565b505050565b6000818152600a60205260408120600401548190603c906115a39082611c2b565b6006546115b09042611c42565b6115ba9190611c42565b10611619576000838152600a6020526040812060040154603c906115de9082611c2b565b6006546115eb9042611c42565b6115f59190611c42565b6115ff9190611d8a565b9050600061160e826001611c2b565b959194509092505050565b506000928392509050565b61162c6116c1565b6001600160a01b03811661165657604051631e4fbdf760e01b815260006004820152602401610765565b61165f816116ee565b50565b6040516001600160a01b0383811660248301526044820183905261157d91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611818565b6001546001600160a01b03163314610ace5760405163118cdaa760e01b8152336004820152602401610765565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600054036117925760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610765565b6002600055565b8054806117e85760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006044820152606401610765565b600019019055565b61094384856001600160a01b03166323b872dd86868660405160240161168f93929190611c6c565b600061182d6001600160a01b0384168361187b565b905080516000141580156118525750808060200190518101906118509190611dac565b155b1561157d57604051635274afe760e01b81526001600160a01b0384166004820152602401610765565b606061188983836000611892565b90505b92915050565b6060814710156118b75760405163cd78605960e01b8152306004820152602401610765565b600080856001600160a01b031684866040516118d39190611dce565b60006040518083038185875af1925050503d8060008114611910576040519150601f19603f3d011682016040523d82523d6000602084013e611915565b606091505b5091509150611925868383611931565b925050505b9392505050565b606082611946576119418261198d565b61192a565b815115801561195d57506001600160a01b0384163b155b1561198657604051639996b31560e01b81526001600160a01b0385166004820152602401610765565b508061192a565b80511561199d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146119cd57600080fd5b919050565b600080604083850312156119e557600080fd5b6119ee836119b6565b946020939093013593505050565b600060208284031215611a0e57600080fd5b5035919050565b600080600060608486031215611a2a57600080fd5b611a33846119b6565b9250611a41602085016119b6565b929592945050506040919091013590565b60008060408385031215611a6557600080fd5b50508035926020909101359150565b60005b83811015611a8f578181015183820152602001611a77565b50506000910152565b60008151808452611ab0816020860160208601611a74565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015611b8057868503603f190184528151805180516001600160a01b03908116885260208083015190911681890152604080830151818a0152606080840151908a0152608080840151908a015260a09283015115159289019290925282015160c0880152015161010060e08701819052611b6a90870182611a98565b9550506020938401939190910190600101611aec565b50929695505050505050565b600060208284031215611b9e57600080fd5b611889826119b6565b600080600060608486031215611bbc57600080fd5b611bc5846119b6565b95602085013595506040909401359392505050565b6020808252600e908201526d283632b0b9b2903bb0b4ba17171760911b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561188c5761188c611c02565b808202811582820484141761188c5761188c611c02565b8181038181111561188c5761188c611c02565b600081611c6457611c64611c02565b506000190190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611cb857600080fd5b815167ffffffffffffffff811115611ccf57600080fd5b8201601f81018413611ce057600080fd5b805167ffffffffffffffff811115611cfa57611cfa611c90565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611d2957611d29611c90565b604052818152828201602001861015611d4157600080fd5b611d52826020830160208601611a74565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611d8357611d83611c02565b5060010190565b600082611da757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611dbe57600080fd5b8151801515811461192a57600080fd5b60008251611de0818460208701611a74565b919091019291505056fea2646970667358221220618a9aa8ae3be73f2f4aed89dbe00508b35be14d491773c96e2f61b9085a2e8464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9158444B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xBB623D13 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD84C0FD3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD84C0FD3 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xEC4B65E7 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xF0441F95 EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBB623D13 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xC456FC9E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xC85E4D49 EQ PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D76EA58 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xA3480569 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xB8237AB7 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xBA41C844 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9158444B EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x9677CA0B EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x9D02E67C EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x716135C7 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x78E97925 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x84FCCD5E EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x8D02F792 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x716135C7 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x73233EA6 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x772635EE EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D07340 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x19F34BF3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1E903868 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x699D503A EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0xABC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x22D SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 SWAP1 SWAP6 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DE PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP7 SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xD1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x586 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x107B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x10B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x6DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0x12E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x700 PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x730 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x741 DUP4 PUSH2 0x1582 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x0 SUB PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xC SUB PUSH2 0x7F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520636C61696D656420796F757220616C6C20726577617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206163636F7264696E6720746F2074686973204E46542E2E2E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xC SWAP1 PUSH2 0x815 SWAP1 DUP4 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST LT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x83C SWAP1 DUP5 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x84C SWAP1 POP DUP2 DUP4 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x86D SWAP1 DUP5 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8B2 SWAP1 POP DUP5 PUSH2 0x881 DUP4 DUP6 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x8D4 SWAP1 PUSH1 0xC PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x90C SWAP1 POP DUP2 DUP5 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x92D SWAP1 DUP5 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x941 SWAP1 POP DUP6 PUSH2 0x881 DUP4 DUP7 PUSH2 0x1C2B JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP3 TIMESTAMP PUSH1 0x6 SLOAD LT PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206F776E6572206F662074686973204E46542E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2727AA102627A1A5A2A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 PUSH2 0xA4E DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA83 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC4 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xACE PUSH1 0x0 PUSH2 0x16EE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAF0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB88 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 DUP5 ADD DUP4 SWAP1 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB2B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0xD13 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD01 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0xE DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x120 DUP10 ADD DUP11 MSTORE DUP1 SLOAD DUP5 AND PUSH1 0x60 DUP11 ADD SWAP1 DUP2 MSTORE SWAP5 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x4 DUP1 DUP5 ADD SLOAD PUSH1 0xE0 DUP11 ADD MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x100 DUP10 ADD MSTORE SWAP3 DUP8 MSTORE DUP4 DUP8 ADD DUP10 SWAP1 MSTORE SWAP5 DUP9 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP5 MLOAD PUSH4 0x8AD91345 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 PUSH4 0x8AD91345 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCD2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CA6 JUMP JUMPDEST DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCE7 JUMPI PUSH2 0xCE7 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xCFD SWAP1 PUSH2 0x1D71 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xD0B DUP2 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB90 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD24 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xE DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD CALLER SWAP2 AND SUB PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722043616E27742042757920497473204E6674730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 LT ISZERO PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x207072696365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xE DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 MLOAD SWAP1 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xEF0 SWAP2 ADDRESS SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP8 MSTORE PUSH1 0xE DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP3 DUP9 MSTORE SWAP1 SWAP6 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x6E0CEE09 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 POP PUSH4 0x6E0CEE09 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 POP PUSH2 0x1001 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD SSTORE PUSH2 0x102F PUSH1 0x2 PUSH2 0x1799 JUMP JUMPDEST POP PUSH2 0x103A PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x103A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 ADDRESS DUP5 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1083 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x103A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS DUP5 DUP5 PUSH2 0x17F0 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD SUB PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2A34B6B2902737BA1029BA30B93A171717 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 SLOAD GT PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2A34B6B29022B73217 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E4814DD185AD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE ADDRESS DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0xA0 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 DUP11 ADD DUP2 DUP2 MSTORE DUP14 DUP7 MSTORE PUSH1 0xA SWAP1 SWAP8 MSTORE SWAP10 DUP5 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP6 MLOAD SWAP9 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP11 DUP10 AND SWAP11 SWAP1 SWAP11 OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP9 ADD DUP1 SLOAD SWAP1 SWAP10 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP7 SSTORE SWAP3 MLOAD PUSH1 0x3 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x5 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x1274 DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x12A9 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12E9 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479204C697374656420496E204D61726B6574706C616365210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13919508185B1C9958591E481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x1400 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE DUP6 MSTORE DUP6 DUP2 KECCAK256 DUP9 DUP3 MSTORE DUP6 MSTORE DUP6 DUP2 KECCAK256 DUP8 MLOAD DUP2 SLOAD SWAP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE DUP9 DUP8 ADD MLOAD SWAP6 DUP3 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE DUP6 DUP6 ADD MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x5 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP1 DUP4 MSTORE SWAP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x7 SWAP2 SWAP1 PUSH2 0x14BC SWAP1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1520 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x154E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP4 POP SWAP2 POP PUSH2 0x156E DUP4 PUSH2 0x1D71 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x157D PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH1 0x3C SWAP1 PUSH2 0x15A3 SWAP1 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x15B0 SWAP1 TIMESTAMP PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST LT PUSH2 0x1619 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x3C SWAP1 PUSH2 0x15DE SWAP1 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x15EB SWAP1 TIMESTAMP PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x15FF SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x160E DUP3 PUSH1 0x1 PUSH2 0x1C2B JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 DUP4 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x162C PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1656 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH2 0x165F DUP2 PUSH2 0x16EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x157D SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x17E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x943 DUP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x168F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x187B JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x1852 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1850 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x157D JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1889 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1892 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x18D3 SWAP2 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1925 DUP7 DUP4 DUP4 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1946 JUMPI PUSH2 0x1941 DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x192A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x195D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x765 JUMP JUMPDEST POP DUP1 PUSH2 0x192A JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x199D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19EE DUP4 PUSH2 0x19B6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A33 DUP5 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A41 PUSH1 0x20 DUP6 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A8F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A77 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AB0 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B80 JUMPI DUP7 DUP6 SUB PUSH1 0x3F NOT ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND DUP2 DUP10 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP2 DUP11 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 DUP11 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP11 ADD MSTORE PUSH1 0xA0 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 ADD MLOAD PUSH1 0xC0 DUP9 ADD MSTORE ADD MLOAD PUSH2 0x100 PUSH1 0xE0 DUP8 ADD DUP2 SWAP1 MSTORE PUSH2 0x1B6A SWAP1 DUP8 ADD DUP3 PUSH2 0x1A98 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AEC JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1889 DUP3 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC5 DUP5 PUSH2 0x19B6 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x283632B0B9B2903BB0B4BA171717 PUSH1 0x91 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x188C JUMPI PUSH2 0x188C PUSH2 0x1C02 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x188C JUMPI PUSH2 0x188C PUSH2 0x1C02 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x188C JUMPI PUSH2 0x188C PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1CE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CFA PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D29 JUMPI PUSH2 0x1D29 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D52 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A74 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D83 JUMPI PUSH2 0x1D83 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DE0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A74 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x8A9A 0xA8 0xAE EXTCODESIZE 0xE7 EXTCODEHASH 0x2F BLOBBASEFEE 0xED DUP10 0xDB 0xE0 SDIV ADDMOD 0xB3 JUMPDEST 0xE1 0x4D BLOBHASH OR PUSH20 0xC96E2F61B9085A2E8464736F6C634300081A0033 ",
							"sourceMap": "953:9728:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:27;;;;;;;;;;-1:-1:-1;1180:27:18;;;;-1:-1:-1;;;;;1180:27:18;;;;;;-1:-1:-1;;;;;194:32:19;;;176:51;;164:2;149:18;1180:27:18;;;;;;;;7901:898;;;;;;;;;;-1:-1:-1;7901:898:18;;;;;:::i;:::-;;:::i;:::-;;2317:42;;;;;;;;;;-1:-1:-1;2317:42:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1098:25:19;;;1086:2;1071:18;2317:42:18;952:177:19;1316:19:18;;;;;;;;;;;;;;;;7328:288;;;;;;;;;;-1:-1:-1;7328:288:18;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;1083:38:18:-;;;;;;;;;;-1:-1:-1;1083:38:18;;;;;;2366:44;;;;;;;;;;-1:-1:-1;2366:44:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2366:44:18;;;;;;;;;;;;;;;;;;;;;1822:25:19;;;-1:-1:-1;;;;;1883:32:19;;;1878:2;1863:18;;1856:60;1952:32;;;;1932:18;;;1925:60;;;;2016:2;2001:18;;1994:34;;;;2059:3;2044:19;;2037:35;1903:3;2088:19;;2081:35;2160:14;2153:22;2147:3;2132:19;;2125:51;1809:3;1794:19;2366:44:18;1513:669:19;1214:26:18;;;;;;;;;;;;;;;;1289:21;;;;;;;;;;;;;;;;2793:72;;;;;;;;;;-1:-1:-1;2793:72:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2793:72:18;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2486:32:19;;;2468:51;;2555:32;;;;2550:2;2535:18;;2528:60;2604:18;;;2597:34;;;;2662:2;2647:18;;2640:34;2705:3;2690:19;;2683:35;2762:14;2755:22;2506:3;2734:19;;2727:51;2455:3;2440:19;2793:72:18;2187:597:19;2211:50:18;;;;;;;;;;-1:-1:-1;2211:50:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2211:50:18;;;;;;;;;;-1:-1:-1;;;;;2981:32:19;;;2963:51;;3045:2;3030:18;;3023:34;;;;2936:18;2211:50:18;2789:274:19;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;6478:119:18;;;;;;;;;;-1:-1:-1;6478:119:18;;;;;:::i;:::-;;:::i;9969:709::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5060:1180::-;;;;;;:::i;:::-;;:::i;1246:37::-;;;;;;;;;;;;;;;2267:44;;;;;;;;;;-1:-1:-1;2267:44:18;;;;;:::i;:::-;;;;;;;;;;;;;;9586:182;;;;;;;;;;-1:-1:-1;9586:182:18;;;;;:::i;:::-;;:::i;9774:184::-;;;;;;;;;;-1:-1:-1;9774:184:18;;;;;:::i;:::-;;:::i;6752:336::-;;;;;;;;;;-1:-1:-1;6752:336:18;;;;;:::i;:::-;;:::i;2633:86::-;;;;;;;;;;-1:-1:-1;2633:86:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2633:86:18;;;;;;;;;;;;;;;;;2725:62;;;;;;;;;;-1:-1:-1;2725:62:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2497:53;;;;;;;;;;-1:-1:-1;2497:53:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2497:53:18;;;;;;;;;;;-1:-1:-1;;;;;6045:32:19;;;6027:51;;6109:2;6094:18;;6087:34;;;;6137:18;;;6130:34;6015:2;6000:18;2497:53:18;5825:345:19;4323:729:18;;;;;;;;;;-1:-1:-1;4323:729:18;;;;;:::i;:::-;;:::i;9155:425::-;;;;;;;;;;-1:-1:-1;9155:425:18;;;;;:::i;:::-;;:::i;:::-;;;;6774:25:19;;;6830:2;6815:18;;6808:34;;;;6747:18;9155:425:18;6600:248:19;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;7901:898:18:-;7975:11;7988:10;8002:29;8023:7;8002:20;:29::i;:::-;7974:57;;;;8049:5;8058:1;8049:10;8041:37;;;;-1:-1:-1;;;8041:37:18;;;;;;;:::i;:::-;;;;;;;;;8096:18;;;;:9;:18;;;;;:32;;;8132:2;8096:38;8088:108;;;;-1:-1:-1;;;8088:108:18;;7398:2:19;8088:108:18;;;7380:21:19;7437:2;7417:18;;;7410:30;7476:34;7456:18;;;7449:62;7547:28;7527:18;;;7520:56;7593:19;;8088:108:18;7196:422:19;8088:108:18;8210:18;;;;:9;:18;;;;;:32;;;8253:2;;8210:40;;8245:5;;8210:40;:::i;:::-;:45;8206:587;;;8271:18;;;;:9;:18;;;;;:32;;:41;;8307:5;;8271:18;:41;;8307:5;;8271:41;:::i;:::-;;;;-1:-1:-1;8367:14:18;;-1:-1:-1;8376:5:18;8367:6;:14;:::i;:::-;8326:18;;;;:9;:18;;;;;:36;;:56;;:36;;:18;:56;;;;;:::i;:::-;;;;-1:-1:-1;8396:64:18;;-1:-1:-1;8430:11:18;8444:14;8453:5;8444:6;:14;:::i;:::-;-1:-1:-1;;;;;8403:12:18;8396:33;;:64;:33;:64::i;:::-;8206:587;;;8491:19;8519:18;;;:9;:18;;;;;:32;;;8514:37;;:2;:37;:::i;:::-;8491:61;;8602:14;8566:9;:18;8576:7;8566:18;;;;;;;;;;;:32;;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;8671:23:18;;-1:-1:-1;8680:14:18;8671:6;:23;:::i;:::-;8630:18;;;;:9;:18;;;;;:36;;:65;;:36;;:18;:65;;;;;:::i;:::-;;;;-1:-1:-1;8709:73:18;;-1:-1:-1;8743:11:18;8757:23;8766:14;8757:6;:23;:::i;8709:73::-;8477:316;8206:587;7964:835;;7901:898;;:::o;7328:288::-;7432:7;7441:13;3851:15;3841:7;;:25;3833:52;;;;-1:-1:-1;;;3833:52:18;;;;;;;:::i;:::-;3934:18;;;;:9;:18;;;;;:32;;;-1:-1:-1;;;;;3934:49:18;;;:32;;:49;3926:92;;;;-1:-1:-1;;;3926:92:18;;8393:2:19;3926:92:18;;;8375:21:19;8432:2;8412:18;;;8405:30;8471:32;8451:18;;;8444:60;8521:18;;3926:92:18;8191:354:19;3926:92:18;4054:18;;;;:9;:18;;;;;:27;;;;;4046:51;;;;-1:-1:-1;;;4046:51:18;;8752:2:19;4046:51:18;;;8734:21:19;8791:2;8771:18;;;8764:30;-1:-1:-1;;;8810:18:19;;;8803:41;8861:18;;4046:51:18;8550:335:19;4046:51:18;7496:5:::1;7466:18:::0;;;:9:::1;:18;::::0;;;;:27:::1;;:35:::0;;-1:-1:-1;;7466:35:18::1;::::0;;7511:14:::1;:16:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;7537:72:18::1;::::0;-1:-1:-1;;;7537:72:18;;-1:-1:-1;;;;;7537:33:18;::::1;::::0;::::1;::::0;:72:::1;::::0;7579:4:::1;::::0;7586:13;;7601:7;;7537:72:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7328:288:::0;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;6478:119:18:-;1531:13:0;:11;:13::i;:::-;6550:9:18::1;:17:::0;;;;6577:7:::1;:13:::0;6478:119::o;9969:709::-;10022:29;10063:12;10078:24;:14;918::12;;827:112;10078:24:18;10063:39;;10112;10181:7;10154:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10154:35:18;;;;;;;;;;;;;;;-1:-1:-1;10112:77:18;-1:-1:-1;10199:16:18;10243:1;10229:415;10251:14;918::12;10246:1:18;:29;10229:415;;10301:46;10318:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;10318:28:18;10301:46;;:16;:46;;;;;10318:28;10348:20;;;;10301:68;;;;;;;:75;;;;;10297:337;;;10421:167;;;-1:-1:-1;10459:12:18;;;:9;:12;;;;;;;:28;;-1:-1:-1;;;;;10459:28:18;;;10442:46;;;:16;:46;;;;;10459:28;10489:20;;;;10442:68;;;;;;;;;10421:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10459:28;10421:167;;;;;;;;;;;;10524:12;;;;;;;;10513:74;;-1:-1:-1;;;10513:74:18;;;;;1098:25:19;10421:167:18;;;;;10513:52;;1071:18:19;;10513:74:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10513:74:18;;;;;;;;;;;;:::i;:::-;10421:167;;;10396:9;10406:11;10396:22;;;;;;;;:::i;:::-;;;;;;:192;;;;10606:13;;;;;:::i;:::-;;;;10297:337;10278:3;;;;:::i;:::-;;;;10229:415;;;-1:-1:-1;10661:9:18;;9969:709;-1:-1:-1;;;9969:709:18:o;5060:1180::-;2261:21:2;:19;:21::i;:::-;5162:54:18::1;5179:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;5179:36:18;;::::1;5162:54:::0;;:16:::1;:54:::0;;;;;5179:36;5217:28;;::::1;::::0;5162:84;;;;;;;:90;5256:10:::1;5162:90:::0;::::1;:104:::0;5154:141:::1;;;::::0;-1:-1:-1;;;5154:141:18;;10934:2:19;5154:141:18::1;::::0;::::1;10916:21:19::0;10973:2;10953:18;;;10946:30;11012:26;10992:18;;;10985:54;11056:18;;5154:141:18::1;10732:348:19::0;5154:141:18::1;5322:54;5339:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;5339:36:18::1;5322:54:::0;;:16:::1;:54:::0;;;;;5339:36;5377:28;;::::1;::::0;5322:84;;;;;;;:90:::1;;::::0;5313:99;::::1;;5305:150;;;::::0;-1:-1:-1;;;5305:150:18;;11287:2:19;5305:150:18::1;::::0;::::1;11269:21:19::0;11326:2;11306:18;;;11299:30;11365:34;11345:18;;;11338:62;-1:-1:-1;;;11416:18:19;;;11409:36;11462:19;;5305:150:18::1;11085:402:19::0;5305:150:18::1;5465:17;5502:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;5502:36:18;;::::1;5485:54:::0;;:16:::1;:54:::0;;;;;5502:36;5540:28;;::::1;::::0;5485:84;;;;;;;:90:::1;::::0;::::1;::::0;5593;;5585:122;;5485:90;;5593;;;::::1;::::0;5585:122:::1;::::0;::::1;;::::0;5485:90;;5585:122;;5465:17;5585:122;5485:90;5593;5585:122;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5724:20:18::1;::::0;;;:9:::1;:20;::::0;;;;;;:36;;;5802:28;;::::1;::::0;5717:114;;-1:-1:-1;;;5717:114:18;;-1:-1:-1;;;;;5724:36:18;;::::1;::::0;5717:57:::1;::::0;:114:::1;::::0;5783:4:::1;::::0;5790:10:::1;::::0;5802:28;5717:114:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;5852:20:18::1;::::0;;;:9:::1;:20;::::0;;;;;;;:36;;;5915:28;;::::1;::::0;-1:-1:-1;;;;;5852:36:18;;::::1;5944:54:::0;;;:16:::1;:54:::0;;;;;:84;;;;;;;;;;:91;;::::1;::::0;5841:195;;-1:-1:-1;;;5841:195:18;;5904:10:::1;5841:195;::::0;::::1;11694:51:19::0;11761:18;;;11754:34;;;;5944:91:18::1;11804:18:19::0;;;11797:60;5852:36:18;-1:-1:-1;5841:62:18::1;::::0;11667:18:19;;5841:195:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;6140:5:18::1;6063:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;6063:36:18::1;6046:54:::0;;:16:::1;:54:::0;;;;;6063:36;6101:28;;::::1;::::0;6046:84;;;;;;;:91:::1;;:99:::0;;-1:-1:-1;;6046:99:18::1;::::0;;6063:9;-1:-1:-1;6172:24:18::1;:14;918::12::0;;827:112;6172:24:18::1;6162:35:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;6162:35:18;;;6155:42;;-1:-1:-1;;;;;;6155:42:18::1;::::0;;;::::1;::::0;6207:26:::1;:14;:24;:26::i;:::-;5144:1096;2303:20:2::0;1716:1;2809:7;:22;2629:209;2303:20;5060:1180:18;;:::o;9586:182::-;1531:13:0;:11;:13::i;:::-;9681:80:18::1;-1:-1:-1::0;;;;;9688:12:18::1;9681:37;9719:12:::0;9741:4:::1;9748:12:::0;9681:37:::1;:80::i;9774:184::-:0;1531:13:0;:11;:13::i;:::-;9870:81:18::1;-1:-1:-1::0;;;;;9877:12:18::1;9870:37;9917:4;9924:12:::0;9938;9870:37:::1;:81::i;6752:336::-:0;6851:7;3176;;3163:9;;:20;3155:47;;;;-1:-1:-1;;;3155:47:18;;;;;;;:::i;:::-;3232:15;3220:9;;:27;3212:57;;;;-1:-1:-1;;;3212:57:18;;12070:2:19;3212:57:18;;;12052:21:19;12109:2;12089:18;;;12082:30;-1:-1:-1;;;12128:18:19;;;12121:47;12185:18;;3212:57:18;11868:341:19;3212:57:18;3326:15;3316:7;;:25;3308:47;;;;-1:-1:-1;;;3308:47:18;;12416:2:19;3308:47:18;;;12398:21:19;12455:1;12435:18;;;12428:29;-1:-1:-1;;;12473:18:19;;;12466:39;12522:18;;3308:47:18;12214:332:19;3308:47:18;3405:18;;;;:9;:18;;;;;:27;;;;;3404:28;3396:55;;;;-1:-1:-1;;;3396:55:18;;12753:2:19;3396:55:18;;;12735:21:19;12792:2;12772:18;;;12765:30;-1:-1:-1;;;12811:18:19;;;12804:44;12865:18;;3396:55:18;12551:338:19;3396:55:18;6895:78:::1;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;6895:78:18;;::::1;;::::0;;::::1;::::0;;;6938:4:::1;6895:78:::0;;;;;;-1:-1:-1;6895:78:18;;;;;;;;;;;;6951:15:::1;6895:78:::0;;;;;;6968:4:::1;6895:78:::0;;;;;;6874:18;;;:9:::1;:18:::0;;;;;;:99;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;6874:99:18;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6874:99:18::1;::::0;::::1;;::::0;;;::::1;::::0;;;6983:16;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;7009:72:18::1;::::0;-1:-1:-1;;;7009:72:18;;-1:-1:-1;;;;;7009:33:18;::::1;::::0;::::1;::::0;:72:::1;::::0;7043:13;;7066:4:::1;::::0;7073:7;;7009:72:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6752:336:::0;;;;:::o;4323:729::-;2261:21:2;:19;:21::i;:::-;-1:-1:-1;;;;;4440:31:18;::::1;;::::0;;;:16:::1;:31;::::0;;;;;;;:41;;;;;;;;:48:::1;;::::0;::::1;;4439:49;4431:92;;;::::0;-1:-1:-1;;;4431:92:18;;13096:2:19;4431:92:18::1;::::0;::::1;13078:21:19::0;13135:2;13115:18;;;13108:30;13174:32;13154:18;;;13147:60;13224:18;;4431:92:18::1;12894:354:19::0;4431:92:18::1;-1:-1:-1::0;;;;;4542:24:18;::::1;;::::0;;;:9:::1;:24;::::0;;;;;;;:34;;;;;;;;:43:::1;;::::0;::::1;;4541:44;4533:74;;;::::0;-1:-1:-1;;;4533:74:18;;13455:2:19;4533:74:18::1;::::0;::::1;13437:21:19::0;13494:2;13474:18;;;13467:30;-1:-1:-1;;;13513:18:19;;;13506:48;13571:18;;4533:74:18::1;13253:342:19::0;4533:74:18::1;4679:26;:14;1032:19:12::0;;1050:1;1032:19;;;945:123;4679:26:18::1;4759:85;::::0;;::::1;::::0;::::1;::::0;;4768:10:::1;4759:85:::0;;4788:4:::1;4759:85;::::0;::::1;::::0;;;;;;;;;;4805:24:::1;:14;918::12::0;;827:112;4805:24:18::1;4759:85:::0;;::::1;::::0;;::::1;::::0;;;4839:4:::1;4759:85:::0;;;;;;;-1:-1:-1;;;;;4715:31:18;;::::1;-1:-1:-1::0;4715:31:18;;;:16:::1;:31:::0;;;;;:41;;;;;;;;:129;;;;;;::::1;-1:-1:-1::0;;;;;;4715:129:18;;::::1;;::::0;;;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;4715:129:18;;::::1;::::0;;;::::1;::::0;;;4892:38;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;4854:9:::1;::::0;-1:-1:-1;4864:24:18::1;::::0;918:14:12;;827:112;4864:24:18::1;4854:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;4854:35:18;:76;;;;-1:-1:-1;;;;;;4854:76:18::1;-1:-1:-1::0;;;;;4854:76:18;;::::1;;::::0;;;;;::::1;::::0;-1:-1:-1;4854:76:18;;::::1;::::0;;;;4940:71;-1:-1:-1;;;4940:71:18;;:34;;::::1;::::0;::::1;::::0;:71:::1;::::0;4975:10:::1;::::0;4995:4:::1;::::0;5002:8;;4940:71:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5032:10:18::1;5022:21;::::0;;;:9:::1;:21;::::0;;;;:23;;;-1:-1:-1;5022:21:18;-1:-1:-1;5022:23:18::1;::::0;::::1;:::i;:::-;;;;;;2303:20:2::0;1716:1;2809:7;:22;2629:209;2303:20;4323:729:18;;;:::o;9155:425::-;9220:12;9292:18;;;:9;:18;;;;;:32;;;9220:12;;9335:2;;9292:37;;9335:2;9292:37;:::i;:::-;9280:7;;9262:25;;:15;:25;:::i;:::-;9261:69;;;;:::i;:::-;9260:77;9256:318;;9353:11;9399:18;;;:9;:18;;;;;:32;;;9441:2;;9399:37;;9441:2;9399:37;:::i;:::-;9387:7;;9369:25;;:15;:25;:::i;:::-;9368:69;;;;:::i;:::-;9367:76;;;;:::i;:::-;9353:90;-1:-1:-1;9457:11:18;9472:10;9353:90;9472:1;:10;:::i;:::-;9457:26;9513:6;;-1:-1:-1;9155:425:18;;-1:-1:-1;;;9155:425:18:o;9256:318::-;-1:-1:-1;9559:1:18;;;;-1:-1:-1;9155:425:18;-1:-1:-1;9155:425:18:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;176:51:19::0;149:18;;2672:31:0::1;14:219:19::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1303:160:5:-;1412:43;;-1:-1:-1;;;;;2981:32:19;;;1412:43:5;;;2963:51:19;3030:18;;;3023:34;;;1385:71:5;;1405:5;;1427:14;;;;;2936:18:19;;1412:43:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:5;;;;;;;;;;;1385:19;:71::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:11;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:11;1901:40:0;;;176:51:19;149:18;;1901:40:0;14:219:19;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;14381:2:19;2460:63:2;;;14363:21:19;14420:2;14400:18;;;14393:30;14459:33;14439:18;;;14432:61;14510:18;;2460:63:2;14179:355:19;2460:63:2;1759:1;2598:7;:18;2336:287::o;1074:229:12:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:12;;14741:2:19;1177:49:12;;;14723:21:19;14780:2;14760:18;;;14753:30;14819:29;14799:18;;;14792:57;14866:18;;1177:49:12;14539:351:19;1177:49:12;-1:-1:-1;;1277:9:12;1260:26;;1074:229::o;1702:188:5:-;1802:81;1822:5;1844;-1:-1:-1;;;;;1844:18:5;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;4059:629::-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:5;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:5;;-1:-1:-1;;;;;194:32:19;;4631:40:5;;;176:51:19;149:18;;4631:40:5;14:219:19;2705:151:10;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:10;;3394:4;3359:41;;;176:51:19;149:18;;3359:41:10;14:219:19;3303:108:10;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:10;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:10;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:10;;-1:-1:-1;;;;;194:32:19;;5121:24:10;;;176:51:19;149:18;;5121:24:10;14:219:19;5041:119:10;-1:-1:-1;5180:10:10;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:10;;;;;;;;;;;238:173:19;306:20;;-1:-1:-1;;;;;355:31:19;;345:42;;335:70;;401:1;398;391:12;335:70;238:173;;;:::o;416:300::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:52;;;561:1;558;551:12;513:52;584:29;603:9;584:29;:::i;:::-;574:39;682:2;667:18;;;;654:32;;-1:-1:-1;;;416:300:19:o;721:226::-;780:6;833:2;821:9;812:7;808:23;804:32;801:52;;;849:1;846;839:12;801:52;-1:-1:-1;894:23:19;;721:226;-1:-1:-1;721:226:19:o;1134:374::-;1211:6;1219;1227;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;1319:29;1338:9;1319:29;:::i;:::-;1309:39;;1367:38;1401:2;1390:9;1386:18;1367:38;:::i;:::-;1134:374;;1357:48;;-1:-1:-1;;;1474:2:19;1459:18;;;;1446:32;;1134:374::o;3276:346::-;3344:6;3352;3405:2;3393:9;3384:7;3380:23;3376:32;3373:52;;;3421:1;3418;3411:12;3373:52;-1:-1:-1;;3466:23:19;;;3586:2;3571:18;;;3558:32;;-1:-1:-1;3276:346:19:o;3627:250::-;3712:1;3722:113;3736:6;3733:1;3730:13;3722:113;;;3812:11;;;3806:18;3793:11;;;3786:39;3758:2;3751:10;3722:113;;;-1:-1:-1;;3869:1:19;3851:16;;3844:27;3627:250::o;3882:271::-;3924:3;3962:5;3956:12;3989:6;3984:3;3977:19;4005:76;4074:6;4067:4;4062:3;4058:14;4051:4;4044:5;4040:16;4005:76;:::i;:::-;4135:2;4114:15;-1:-1:-1;;4110:29:19;4101:39;;;;4142:4;4097:50;;3882:271;-1:-1:-1;;3882:271:19:o;4158:1471::-;4376:4;4424:2;4413:9;4409:18;4454:2;4443:9;4436:21;4477:6;4512;4506:13;4543:6;4535;4528:22;4581:2;4570:9;4566:18;4559:25;;4643:2;4633:6;4630:1;4626:14;4615:9;4611:30;4607:39;4593:53;;4681:2;4673:6;4669:15;4702:1;4712:888;4726:6;4723:1;4720:13;4712:888;;;4791:22;;;-1:-1:-1;;4787:36:19;4775:49;;4847:13;;4883:9;;4924;;-1:-1:-1;;;;;4920:35:19;;;4905:51;;5011:2;5003:11;;;4997:18;4993:44;;;4976:15;;;4969:69;5089:2;5081:11;;;5075:18;5058:15;;;5051:43;5147:4;5139:13;;;5133:20;5114:17;;;5107:47;5207:4;5199:13;;;5193:20;5174:17;;;5167:47;4943:3;5273:13;;;5267:20;5260:28;5253:36;5234:17;;;5227:63;;;;5335:11;;5329:18;5322:4;5310:17;;5303:45;5387:11;5381:18;5438:6;5431:4;5419:17;;5412:33;;;5468:52;;5500:19;;5381:18;5468:52;:::i;:::-;5458:62;-1:-1:-1;;5555:2:19;5578:12;;;;5543:15;;;;;4748:1;4741:9;4712:888;;;-1:-1:-1;5617:6:19;;4158:1471;-1:-1:-1;;;;;;4158:1471:19:o;5634:186::-;5693:6;5746:2;5734:9;5725:7;5721:23;5717:32;5714:52;;;5762:1;5759;5752:12;5714:52;5785:29;5804:9;5785:29;:::i;6175:420::-;6252:6;6260;6268;6321:2;6309:9;6300:7;6296:23;6292:32;6289:52;;;6337:1;6334;6327:12;6289:52;6360:29;6379:9;6360:29;:::i;:::-;6350:39;6458:2;6443:18;;6430:32;;-1:-1:-1;6559:2:19;6544:18;;;6531:32;;6175:420;-1:-1:-1;;;6175:420:19:o;6853:338::-;7055:2;7037:21;;;7094:2;7074:18;;;7067:30;-1:-1:-1;;;7128:2:19;7113:18;;7106:44;7182:2;7167:18;;6853:338::o;7623:127::-;7684:10;7679:3;7675:20;7672:1;7665:31;7715:4;7712:1;7705:15;7739:4;7736:1;7729:15;7755:125;7820:9;;;7841:10;;;7838:36;;;7854:18;;:::i;7885:168::-;7958:9;;;7989;;8006:15;;;8000:22;;7986:37;7976:71;;8027:18;;:::i;8058:128::-;8125:9;;;8146:11;;;8143:37;;;8160:18;;:::i;8890:136::-;8929:3;8957:5;8947:39;;8966:18;;:::i;:::-;-1:-1:-1;;;9002:18:19;;8890:136::o;9031:371::-;-1:-1:-1;;;;;9251:32:19;;;9233:51;;9320:32;;;;9315:2;9300:18;;9293:60;9384:2;9369:18;;9362:34;;;;9221:2;9206:18;;9031:371::o;9407:127::-;9468:10;9463:3;9459:20;9456:1;9449:31;9499:4;9496:1;9489:15;9523:4;9520:1;9513:15;9539:916;9619:6;9672:2;9660:9;9651:7;9647:23;9643:32;9640:52;;;9688:1;9685;9678:12;9640:52;9721:9;9715:16;9754:18;9746:6;9743:30;9740:50;;;9786:1;9783;9776:12;9740:50;9809:22;;9862:4;9854:13;;9850:27;-1:-1:-1;9840:55:19;;9891:1;9888;9881:12;9840:55;9924:2;9918:9;9950:18;9942:6;9939:30;9936:56;;;9972:18;;:::i;:::-;10021:2;10015:9;10113:2;10075:17;;-1:-1:-1;;10071:31:19;;;10104:2;10067:40;10063:54;10051:67;;10148:18;10133:34;;10169:22;;;10130:62;10127:88;;;10195:18;;:::i;:::-;10231:2;10224:22;10255;;;10296:15;;;10313:2;10292:24;10289:37;-1:-1:-1;10286:57:19;;;10339:1;10336;10329:12;10286:57;10352:72;10417:6;10412:2;10404:6;10400:15;10395:2;10391;10387:11;10352:72;:::i;:::-;10443:6;9539:916;-1:-1:-1;;;;;9539:916:19:o;10460:127::-;10521:10;10516:3;10512:20;10509:1;10502:31;10552:4;10549:1;10542:15;10576:4;10573:1;10566:15;10592:135;10631:3;10652:17;;;10649:43;;10672:18;;:::i;:::-;-1:-1:-1;10719:1:19;10708:13;;10592:135::o;13957:217::-;13997:1;14023;14013:132;;14067:10;14062:3;14058:20;14055:1;14048:31;14102:4;14099:1;14092:15;14130:4;14127:1;14120:15;14013:132;-1:-1:-1;14159:9:19;;13957:217::o;14895:277::-;14962:6;15015:2;15003:9;14994:7;14990:23;14986:32;14983:52;;;15031:1;15028;15021:12;14983:52;15063:9;15057:16;15116:5;15109:13;15102:21;15095:5;15092:32;15082:60;;15138:1;15135;15128:12;15177:287;15306:3;15344:6;15338:13;15360:66;15419:6;15414:3;15407:4;15399:6;15395:17;15360:66;:::i;:::-;15442:16;;;;;15177:287;-1:-1:-1;;15177:287:19:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1542400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NftSupply(address,uint256)": "15558",
								"adminDepositToken(address,uint256)": "infinite",
								"adminWithdrawToken(address,uint256)": "infinite",
								"auctionListCount(uint256)": "6799",
								"buyLandNft(uint256,uint256)": "infinite",
								"endTime()": "2385",
								"getAllLandListedNfts()": "infinite",
								"landContract()": "2350",
								"listCount(uint256)": "4714",
								"listLandNft(address,uint256,uint256)": "infinite",
								"lockedNFT(uint256)": "15385",
								"nextLandListId()": "2344",
								"owner()": "2431",
								"renounceOwnership()": "infinite",
								"rewardAmount(address,uint256)": "2701",
								"stakeNFT(address,address,uint256)": "infinite",
								"stakingPeriod(uint256,uint256)": "46669",
								"startTime()": "2340",
								"tokenAddress()": "infinite",
								"totalLockedNft()": "2385",
								"transferOwnership(address)": "28450",
								"unStakeNFT(address,address,uint256)": "infinite",
								"userClaimFT(address,uint256)": "infinite",
								"userCount(address)": "2590",
								"userLandListings(address,uint256)": "13416",
								"userListCount(uint256)": "2506",
								"user_Staking_Rewards(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH",
									"source": 18,
									"value": "A0"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 4138,
									"end": 4317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4138,
									"end": 4317,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4223,
									"end": 4235,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 836,
									"end": 887,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 809,
									"end": 827,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 809,
									"end": 827,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4247,
									"end": 4259,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 4247,
									"end": 4274,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4247,
									"end": 4274,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4247,
									"end": 4274,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4247,
									"end": 4274,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 4247,
									"end": 4274,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4247,
									"end": 4274,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4247,
									"end": 4274,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 4247,
									"end": 4274,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4247,
									"end": 4274,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4284,
									"end": 4310,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4284,
									"end": 4310,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4284,
									"end": 4310,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 14,
									"end": 145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 685,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 254,
									"end": 260,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 268,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 270,
									"end": 276,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 302,
									"end": 309,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 298,
									"end": 321,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 294,
									"end": 326,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 291,
									"end": 343,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 291,
									"end": 343,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 291,
									"end": 343,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 339,
									"end": 340,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 337,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 329,
									"end": 341,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 291,
									"end": 343,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 291,
									"end": 343,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 380,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 365,
									"end": 381,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 390,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 415,
									"end": 420,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 390,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 390,
									"end": 421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 390,
									"end": 421,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 390,
									"end": 421,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 490,
									"end": 492,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 475,
									"end": 493,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 475,
									"end": 493,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 469,
									"end": 494,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 440,
									"end": 445,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 440,
									"end": 445,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 503,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 469,
									"end": 494,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 503,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 503,
									"end": 536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 503,
									"end": 536,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 503,
									"end": 536,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 607,
									"end": 609,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 592,
									"end": 610,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 586,
									"end": 611,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 555,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 555,
									"end": 562,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 620,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 586,
									"end": 611,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 620,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 620,
									"end": 653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 620,
									"end": 653,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 620,
									"end": 653,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 672,
									"end": 679,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 662,
									"end": 679,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 662,
									"end": 679,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 662,
									"end": 679,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 150,
									"end": 685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 690,
									"end": 893,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 690,
									"end": 893,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "3798"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 10681,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220618a9aa8ae3be73f2f4aed89dbe00508b35be14d491773c96e2f61b9085a2e8464736f6c634300081a0033",
									".code": [
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "9158444B"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "BB623D13"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "D84C0FD3"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "D84C0FD3"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "EC4B65E7"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "F0441F95"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "BB623D13"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "C456FC9E"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "C85E4D49"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "9D76EA58"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "9D76EA58"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "A3480569"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "B8237AB7"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "BA41C844"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "9158444B"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "9677CA0B"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "9D02E67C"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "716135C7"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "78E97925"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "78E97925"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "84FCCD5E"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "8D02F792"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "716135C7"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "73233EA6"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "772635EE"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "3D07340"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "19F34BF3"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "1E903868"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "3197CBB6"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "699D503A"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 953,
											"end": 10681,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 194,
											"end": 226,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 194,
											"end": 226,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 194,
											"end": 226,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 176,
											"end": 227,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 176,
											"end": 227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 164,
											"end": 166,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 7901,
											"end": 8799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7901,
											"end": 8799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2317,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 952,
											"end": 1129,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 7328,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7328,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2366,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1878,
											"end": 1880,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1881,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 1863,
											"end": 1881,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1856,
											"end": 1916,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1985,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1985,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1985,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1985,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1994,
											"end": 2028,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1994,
											"end": 2028,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1994,
											"end": 2028,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1994,
											"end": 2028,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2059,
											"end": 2062,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2037,
											"end": 2072,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1906,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2081,
											"end": 2116,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2160,
											"end": 2174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 2132,
											"end": 2151,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2132,
											"end": 2151,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2125,
											"end": 2176,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1809,
											"end": 1812,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1794,
											"end": 1813,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1513,
											"end": 2182,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1240,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2793,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2550,
											"end": 2552,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2528,
											"end": 2588,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2597,
											"end": 2631,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2597,
											"end": 2631,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2597,
											"end": 2631,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2597,
											"end": 2631,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2640,
											"end": 2674,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2683,
											"end": 2718,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2755,
											"end": 2777,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2506,
											"end": 2509,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 2734,
											"end": 2753,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2734,
											"end": 2753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2727,
											"end": 2778,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2793,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 2187,
											"end": 2784,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2211,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2963,
											"end": 3014,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2963,
											"end": 3014,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2211,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 2789,
											"end": 3063,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 6478,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 6478,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 9969,
											"end": 10678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 9969,
											"end": 10678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 5060,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 5060,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "3798"
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1283,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "tag",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 2267,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "tag",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 9586,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 9586,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 9774,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "tag",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 9774,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "tag",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 6752,
											"end": 7088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 6752,
											"end": 7088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2633,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2719,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2725,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH",
											"source": 18,
											"value": "D"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2725,
											"end": 2787,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2497,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "tag",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6027,
											"end": 6078,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6027,
											"end": 6078,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6109,
											"end": 6111,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 5825,
											"end": 6170,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "tag",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 4323,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "tag",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 4323,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 9155,
											"end": 9580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "tag",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 9155,
											"end": 9580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6774,
											"end": 6799,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6774,
											"end": 6799,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6774,
											"end": 6799,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6830,
											"end": 6832,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6842,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6842,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6842,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6842,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 6600,
											"end": 6848,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7975,
											"end": 7986,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 7998,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 8023,
											"end": 8030,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7974,
											"end": 8031,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7974,
											"end": 8031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7974,
											"end": 8031,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7974,
											"end": 8031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8049,
											"end": 8054,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8058,
											"end": 8059,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8059,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 8041,
											"end": 8078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "tag",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8105,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8128,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8128,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8096,
											"end": 8128,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8132,
											"end": 8134,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 8096,
											"end": 8134,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7398,
											"end": 7400,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7380,
											"end": 7401,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7437,
											"end": 7439,
											"name": "PUSH",
											"source": 19,
											"value": "3A"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7410,
											"end": 7440,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "PUSH",
											"source": 19,
											"value": "596F75206861766520636C61696D656420796F757220616C6C20726577617264"
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7449,
											"end": 7511,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7547,
											"end": 7575,
											"name": "PUSH",
											"source": 19,
											"value": "73206163636F7264696E6720746F2074686973204E46542E2E2E000000000000"
										},
										{
											"begin": 7527,
											"end": 7545,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 7527,
											"end": 7545,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7527,
											"end": 7545,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7520,
											"end": 7576,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7593,
											"end": 7612,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 7593,
											"end": 7612,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 7196,
											"end": 7618,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 8088,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8219,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8242,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8210,
											"end": 8242,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8242,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 8210,
											"end": 8250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8245,
											"end": 8250,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8245,
											"end": 8250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 8210,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8250,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 8210,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8255,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8303,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8271,
											"end": 8303,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8307,
											"end": 8312,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8307,
											"end": 8312,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8307,
											"end": 8312,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8307,
											"end": 8312,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 8271,
											"end": 8312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8271,
											"end": 8312,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8367,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 8367,
											"end": 8381,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8376,
											"end": 8381,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8367,
											"end": 8373,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8367,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 8367,
											"end": 8381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8367,
											"end": 8381,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 8367,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8362,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 8326,
											"end": 8362,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8362,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 8326,
											"end": 8382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8396,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 8396,
											"end": 8460,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8430,
											"end": 8441,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8444,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 8453,
											"end": 8458,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8444,
											"end": 8450,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8444,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 8444,
											"end": 8458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8444,
											"end": 8458,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 8444,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8403,
											"end": 8415,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "3798"
										},
										{
											"begin": 8396,
											"end": 8429,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8396,
											"end": 8429,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8396,
											"end": 8460,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8396,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 8396,
											"end": 8460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8396,
											"end": 8460,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 8396,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8491,
											"end": 8510,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8551,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8519,
											"end": 8551,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8519,
											"end": 8551,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8514,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 8514,
											"end": 8551,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8514,
											"end": 8516,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 8514,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 8514,
											"end": 8551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8514,
											"end": 8551,
											"name": "tag",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 8514,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8491,
											"end": 8552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8491,
											"end": 8552,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8602,
											"end": 8616,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8576,
											"end": 8583,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8598,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8566,
											"end": 8598,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8598,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 8566,
											"end": 8616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8616,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8680,
											"end": 8694,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 8671,
											"end": 8694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8639,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8666,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 8630,
											"end": 8666,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8666,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8666,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 8630,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8630,
											"end": 8695,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8709,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 8709,
											"end": 8782,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8743,
											"end": 8754,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8757,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 8766,
											"end": 8780,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8757,
											"end": 8763,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8757,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 8757,
											"end": 8780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8709,
											"end": 8782,
											"name": "tag",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 8709,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8477,
											"end": 8793,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 8206,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 8799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 8799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7901,
											"end": 8799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 3841,
											"end": 3848,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3841,
											"end": 3848,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3841,
											"end": 3866,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 3833,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 3833,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3943,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8393,
											"end": 8395,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8375,
											"end": 8396,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "PUSH",
											"source": 19,
											"value": "1E"
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8405,
											"end": 8435,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8471,
											"end": 8503,
											"name": "PUSH",
											"source": 19,
											"value": "596F7520617265206E6F74206F776E6572206F662074686973204E46542E0000"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8444,
											"end": 8504,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8521,
											"end": 8539,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 8521,
											"end": 8539,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 8191,
											"end": 8545,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 3926,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8752,
											"end": 8754,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8734,
											"end": 8755,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8791,
											"end": 8793,
											"name": "PUSH",
											"source": 19,
											"value": "B"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8764,
											"end": 8794,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2727AA102627A1A5A2A217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8803,
											"end": 8844,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 8550,
											"end": 8885,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 4046,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7496,
											"end": 7501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 7466,
											"end": 7484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7466,
											"end": 7493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7466,
											"end": 7501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 7511,
											"end": 7527,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 7511,
											"end": 7527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7537,
											"end": 7609,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7570,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7570,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 7537,
											"end": 7570,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 7537,
											"end": 7609,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7583,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7583,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7586,
											"end": 7599,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7586,
											"end": 7599,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 7537,
											"end": 7609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7609,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7609,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 6478,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6550,
											"end": 6567,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6550,
											"end": 6567,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6550,
											"end": 6567,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6550,
											"end": 6567,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6577,
											"end": 6584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6577,
											"end": 6590,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6478,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10022,
											"end": 10051,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 10063,
											"end": 10075,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 10078,
											"end": 10092,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10078,
											"end": 10102,
											"name": "tag",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 10078,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10063,
											"end": 10102,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10063,
											"end": 10102,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10112,
											"end": 10151,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10188,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "222"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "222"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "223"
										},
										{
											"begin": 10154,
											"end": 10189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "tag",
											"source": 18,
											"value": "222"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "224"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "tag",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "tag",
											"source": 18,
											"value": "224"
										},
										{
											"begin": 10154,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10112,
											"end": 10189,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10199,
											"end": 10215,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10244,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "tag",
											"source": 18,
											"value": "228"
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "229"
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10327,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10330,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10346,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10346,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10318,
											"end": 10346,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10317,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10347,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10346,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10348,
											"end": 10368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10348,
											"end": 10368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10348,
											"end": 10368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10348,
											"end": 10368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10369,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10376,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 10301,
											"end": 10376,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10376,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10301,
											"end": 10376,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 10301,
											"end": 10376,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10297,
											"end": 10634,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10297,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 10297,
											"end": 10634,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10471,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10458,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10488,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10442,
											"end": 10510,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10487,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8AD91345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10565,
											"name": "PUSH",
											"source": 18,
											"value": "8AD91345"
										},
										{
											"begin": 10513,
											"end": 10565,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "235"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "tag",
											"source": 18,
											"value": "235"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "236"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "237"
										},
										{
											"begin": 10513,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "tag",
											"source": 18,
											"value": "236"
										},
										{
											"begin": 10513,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10406,
											"end": 10417,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 10396,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "tag",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10418,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 10606,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "tag",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10606,
											"end": 10619,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10297,
											"end": 10634,
											"name": "tag",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 10297,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 10278,
											"end": 10281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "tag",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "228"
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "tag",
											"source": 18,
											"value": "229"
										},
										{
											"begin": 10229,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10661,
											"end": 10670,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10661,
											"end": 10670,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10678,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9969,
											"end": 10678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5216,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5217,
											"end": 5245,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5217,
											"end": 5245,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5217,
											"end": 5245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5217,
											"end": 5245,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5246,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5252,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5266,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5252,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5266,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "248"
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5154,
											"end": 5295,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5295,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5154,
											"end": 5295,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10934,
											"end": 10936,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5154,
											"end": 5295,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10916,
											"end": 10937,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10973,
											"end": 10975,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10946,
											"end": 10976,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11012,
											"end": 11038,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E65722043616E27742042757920497473204E6674730000000000000000"
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10985,
											"end": 11039,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11056,
											"end": 11074,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 11056,
											"end": 11074,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 10732,
											"end": 11080,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "248"
										},
										{
											"begin": 5154,
											"end": 5295,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5339,
											"end": 5359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5359,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5339,
											"end": 5375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5377,
											"end": 5405,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5377,
											"end": 5405,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5377,
											"end": 5405,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5377,
											"end": 5405,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5406,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5322,
											"end": 5412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5322,
											"end": 5412,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5313,
											"end": 5412,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5313,
											"end": 5412,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 5313,
											"end": 5412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5305,
											"end": 5455,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5305,
											"end": 5455,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5305,
											"end": 5455,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11289,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5305,
											"end": 5455,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11326,
											"end": 11328,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11299,
											"end": 11329,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11365,
											"end": 11399,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67"
										},
										{
											"begin": 11345,
											"end": 11363,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 11345,
											"end": 11363,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11345,
											"end": 11363,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11338,
											"end": 11400,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11416,
											"end": 11434,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 11416,
											"end": 11434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11416,
											"end": 11434,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11409,
											"end": 11445,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11462,
											"end": 11481,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 11462,
											"end": 11481,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 11085,
											"end": 11487,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 5305,
											"end": 5455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5465,
											"end": 5482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5502,
											"end": 5522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5538,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5538,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5502,
											"end": 5538,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5538,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5539,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5538,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5540,
											"end": 5568,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5540,
											"end": 5568,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5540,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5540,
											"end": 5568,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5569,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8FC"
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5465,
											"end": 5482,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5575,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5707,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 5585,
											"end": 5707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5724,
											"end": 5744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5724,
											"end": 5744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5760,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5760,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5760,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5802,
											"end": 5830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5724,
											"end": 5760,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5760,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5760,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 5717,
											"end": 5774,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "256"
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5783,
											"end": 5787,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5800,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 5717,
											"end": 5831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "256"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5831,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 5717,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5852,
											"end": 5872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5852,
											"end": 5872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5915,
											"end": 5943,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5915,
											"end": 5943,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5915,
											"end": 5943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5915,
											"end": 5943,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5852,
											"end": 5888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5998,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6028,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6035,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6035,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 6035,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E0CEE09"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5904,
											"end": 5914,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11694,
											"end": 11745,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11788,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11788,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11788,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11788,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5944,
											"end": 6035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11804,
											"end": 11822,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 11804,
											"end": 11822,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11804,
											"end": 11822,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11797,
											"end": 11857,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6E0CEE09"
										},
										{
											"begin": 5841,
											"end": 5903,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11667,
											"end": 11685,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 11667,
											"end": 11685,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 6036,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 5841,
											"end": 6036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6140,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 6063,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6063,
											"end": 6099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6100,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6101,
											"end": 6129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6101,
											"end": 6129,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6101,
											"end": 6129,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6101,
											"end": 6129,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6130,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6046,
											"end": 6137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6145,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6145,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6046,
											"end": 6145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6145,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6145,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6072,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6172,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 6172,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6172,
											"end": 6196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 6172,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6197,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6197,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6155,
											"end": 6197,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6197,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6197,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6197,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6155,
											"end": 6197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6197,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 6207,
											"end": 6221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 6207,
											"end": 6231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 6207,
											"end": 6233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 6207,
											"end": 6233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5144,
											"end": 6240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 6240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 9586,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "268"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9688,
											"end": 9700,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "3798"
										},
										{
											"begin": 9681,
											"end": 9718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9719,
											"end": 9731,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9741,
											"end": 9745,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 9748,
											"end": 9760,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9681,
											"end": 9718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "274"
										},
										{
											"begin": 9681,
											"end": 9761,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "tag",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 9774,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "268"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9877,
											"end": 9889,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "3798"
										},
										{
											"begin": 9870,
											"end": 9907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9917,
											"end": 9921,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 9924,
											"end": 9936,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9938,
											"end": 9950,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "274"
										},
										{
											"begin": 9870,
											"end": 9951,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "tag",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6851,
											"end": 6858,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3163,
											"end": 3183,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 3155,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "tag",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 3155,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3247,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12070,
											"end": 12072,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12052,
											"end": 12073,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12109,
											"end": 12111,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12082,
											"end": 12112,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A34B6B2902737BA1029BA30B93A171717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12121,
											"end": 12168,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 11868,
											"end": 12209,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "tag",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 3212,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3326,
											"end": 3341,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 3316,
											"end": 3323,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3316,
											"end": 3323,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3316,
											"end": 3341,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12416,
											"end": 12418,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12398,
											"end": 12419,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12455,
											"end": 12456,
											"name": "PUSH",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12428,
											"end": 12457,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A34B6B29022B73217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12466,
											"end": 12505,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 12214,
											"end": 12546,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "tag",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 3308,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12755,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12735,
											"end": 12756,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12792,
											"end": 12794,
											"name": "PUSH",
											"source": 19,
											"value": "E"
										},
										{
											"begin": 12772,
											"end": 12790,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12772,
											"end": 12790,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12772,
											"end": 12790,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12765,
											"end": 12795,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E4814DD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12811,
											"end": 12829,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 12811,
											"end": 12829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12811,
											"end": 12829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12804,
											"end": 12848,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12865,
											"end": 12883,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 12865,
											"end": 12883,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 12551,
											"end": 12889,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "tag",
											"source": 18,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6938,
											"end": 6942,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6951,
											"end": 6966,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6968,
											"end": 6972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6895,
											"end": 6973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "DUP14",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "SWAP10",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP11",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP11",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP11",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP10",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6874,
											"end": 6973,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "292"
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 6983,
											"end": 6999,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "292"
										},
										{
											"begin": 6983,
											"end": 6999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 6999,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7081,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7009,
											"end": 7081,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7009,
											"end": 7042,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7042,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 7009,
											"end": 7042,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "293"
										},
										{
											"begin": 7009,
											"end": 7081,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7066,
											"end": 7070,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 7009,
											"end": 7081,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "293"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7081,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "296"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7081,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "296"
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7009,
											"end": 7081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6752,
											"end": 7088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 4440,
											"end": 4471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4471,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4481,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 4440,
											"end": 4488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4488,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4440,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4440,
											"end": 4488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4439,
											"end": 4488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4523,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4523,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4431,
											"end": 4523,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13096,
											"end": 13098,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4523,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13078,
											"end": 13099,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 19,
											"value": "1E"
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13174,
											"end": 13206,
											"name": "PUSH",
											"source": 19,
											"value": "416C7265616479204C697374656420496E204D61726B6574706C616365210000"
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13147,
											"end": 13207,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 12894,
											"end": 13248,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 4431,
											"end": 4523,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 4542,
											"end": 4566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 4542,
											"end": 4585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4585,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4542,
											"end": 4585,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4585,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4607,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4607,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4533,
											"end": 4607,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4533,
											"end": 4607,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13437,
											"end": 13458,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13494,
											"end": 13496,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13467,
											"end": 13497,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13919508185B1C9958591E481CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13513,
											"end": 13531,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 13513,
											"end": 13531,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13513,
											"end": 13531,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13506,
											"end": 13554,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 13253,
											"end": 13595,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 4533,
											"end": 4607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4679,
											"end": 4705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 4679,
											"end": 4693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 4679,
											"end": 4705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4768,
											"end": 4778,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4792,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "311"
										},
										{
											"begin": 4805,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "311"
										},
										{
											"begin": 4805,
											"end": 4829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4756,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4715,
											"end": 4844,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4892,
											"end": 4930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4864,
											"end": 4888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 4864,
											"end": 4888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4889,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4854,
											"end": 4930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4930,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4940,
											"end": 5011,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4974,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4974,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4974,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 4940,
											"end": 4974,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "313"
										},
										{
											"begin": 4940,
											"end": 5011,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 4985,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 4985,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4995,
											"end": 4999,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 4995,
											"end": 4999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 4940,
											"end": 5011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "313"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "314"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5011,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "314"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5011,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 4940,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5032,
											"end": 5042,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 5022,
											"end": 5043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "317"
										},
										{
											"begin": 5022,
											"end": 5045,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 5022,
											"end": 5045,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "317"
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5022,
											"end": 5045,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 5052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "tag",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9220,
											"end": 9232,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9301,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9310,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9324,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9292,
											"end": 9324,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9324,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 9220,
											"end": 9232,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9220,
											"end": 9232,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "PUSH",
											"source": 18,
											"value": "3C"
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 9292,
											"end": 9329,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 9292,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9292,
											"end": 9329,
											"name": "tag",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 9292,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9280,
											"end": 9287,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 9280,
											"end": 9287,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9262,
											"end": 9277,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 9262,
											"end": 9287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "tag",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9261,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 9261,
											"end": 9330,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9261,
											"end": 9330,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9261,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 9261,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9261,
											"end": 9330,
											"name": "tag",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 9261,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9260,
											"end": 9337,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9256,
											"end": 9574,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 9256,
											"end": 9574,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9408,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 18,
											"value": "3C"
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 9399,
											"end": 9436,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 9399,
											"end": 9436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9399,
											"end": 9436,
											"name": "tag",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 9399,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9387,
											"end": 9394,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 9387,
											"end": 9394,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 9369,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 9369,
											"end": 9394,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 9369,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 9369,
											"end": 9394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9369,
											"end": 9394,
											"name": "tag",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 9369,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9368,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 9368,
											"end": 9437,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9368,
											"end": 9437,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9368,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 9368,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9368,
											"end": 9437,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 9368,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9367,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 9367,
											"end": 9443,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9367,
											"end": 9443,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9367,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 9367,
											"end": 9443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9367,
											"end": 9443,
											"name": "tag",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 9367,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9353,
											"end": 9443,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9457,
											"end": 9468,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 9353,
											"end": 9443,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 9472,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 9472,
											"end": 9482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9472,
											"end": 9482,
											"name": "tag",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 9472,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9457,
											"end": 9483,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 9513,
											"end": 9519,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9513,
											"end": 9519,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9256,
											"end": 9574,
											"name": "tag",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 9256,
											"end": 9574,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9580,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14,
											"end": 233,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 3014,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3057,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14,
											"end": 233,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14363,
											"end": 14384,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14420,
											"end": 14422,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 14400,
											"end": 14418,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14400,
											"end": 14418,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14400,
											"end": 14418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14393,
											"end": 14423,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14459,
											"end": 14492,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14439,
											"end": 14457,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 14439,
											"end": 14457,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14439,
											"end": 14457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14432,
											"end": 14493,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 14179,
											"end": 14534,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14741,
											"end": 14743,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14723,
											"end": 14744,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14780,
											"end": 14782,
											"name": "PUSH",
											"source": 19,
											"value": "1B"
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14753,
											"end": 14783,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14819,
											"end": 14848,
											"name": "PUSH",
											"source": 19,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 14799,
											"end": 14817,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 14799,
											"end": 14817,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14799,
											"end": 14817,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14792,
											"end": 14849,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14866,
											"end": 14884,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 14866,
											"end": 14884,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 14539,
											"end": 14890,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 194,
											"end": 226,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 194,
											"end": 226,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 176,
											"end": 227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 14,
											"end": 233,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 176,
											"end": 227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 14,
											"end": 233,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 194,
											"end": 226,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 194,
											"end": 226,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 176,
											"end": 227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 14,
											"end": 233,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 238,
											"end": 411,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 238,
											"end": 411,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 306,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 355,
											"end": 386,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 345,
											"end": 387,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 345,
											"end": 387,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 335,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 335,
											"end": 405,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 401,
											"end": 402,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 391,
											"end": 403,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 335,
											"end": 405,
											"name": "tag",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 335,
											"end": 405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 238,
											"end": 411,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 238,
											"end": 411,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 238,
											"end": 411,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 238,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 416,
											"end": 716,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 416,
											"end": 716,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 484,
											"end": 490,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 545,
											"end": 547,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 524,
											"end": 531,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 516,
											"end": 548,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 513,
											"end": 565,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 513,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 513,
											"end": 565,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 559,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 551,
											"end": 563,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 513,
											"end": 565,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 513,
											"end": 565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 584,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 603,
											"end": 612,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 584,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 584,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 584,
											"end": 613,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 584,
											"end": 613,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 574,
											"end": 613,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 682,
											"end": 684,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 667,
											"end": 685,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 654,
											"end": 686,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 416,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 721,
											"end": 947,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 721,
											"end": 947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 780,
											"end": 786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 835,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 812,
											"end": 819,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 808,
											"end": 831,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 804,
											"end": 836,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 801,
											"end": 853,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 839,
											"end": 851,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 801,
											"end": 853,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 894,
											"end": 917,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 894,
											"end": 917,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 721,
											"end": 947,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 721,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1134,
											"end": 1508,
											"name": "tag",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 1134,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1255,
											"end": 1278,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1319,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1319,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 1319,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1319,
											"end": 1348,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 1319,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1367,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1390,
											"end": 1399,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1367,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 1367,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1367,
											"end": 1405,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 1367,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1134,
											"end": 1508,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1134,
											"end": 1508,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 1357,
											"end": 1405,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1357,
											"end": 1405,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1474,
											"end": 1476,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1459,
											"end": 1477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1459,
											"end": 1477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1459,
											"end": 1477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1446,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1446,
											"end": 1478,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1134,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3276,
											"end": 3622,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 3276,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3380,
											"end": 3403,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3376,
											"end": 3408,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3373,
											"end": 3425,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3373,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 3373,
											"end": 3425,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3411,
											"end": 3423,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3373,
											"end": 3425,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 3373,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3489,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3466,
											"end": 3489,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3466,
											"end": 3489,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3586,
											"end": 3588,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3558,
											"end": 3590,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3558,
											"end": 3590,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3627,
											"end": 3877,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 3627,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3730,
											"end": 3743,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3823,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3823,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3823,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3793,
											"end": 3804,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3793,
											"end": 3804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3793,
											"end": 3804,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3786,
											"end": 3825,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3761,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 3722,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3844,
											"end": 3871,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3627,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3882,
											"end": 4153,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 3882,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3924,
											"end": 3927,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3967,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3984,
											"end": 3987,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4005,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4065,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4058,
											"end": 4072,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4051,
											"end": 4055,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4049,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4040,
											"end": 4056,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4005,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 4005,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4005,
											"end": 4081,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 4005,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4139,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4101,
											"end": 4140,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4101,
											"end": 4140,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4101,
											"end": 4140,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4101,
											"end": 4140,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4146,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4097,
											"end": 4147,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4097,
											"end": 4147,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3882,
											"end": 4153,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3882,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 5629,
											"name": "tag",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 4158,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4452,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4436,
											"end": 4457,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4477,
											"end": 4483,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4512,
											"end": 4518,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4506,
											"end": 4519,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4543,
											"end": 4549,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4535,
											"end": 4541,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4581,
											"end": 4583,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4559,
											"end": 4584,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4559,
											"end": 4584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4630,
											"end": 4631,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 4626,
											"end": 4640,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4611,
											"end": 4641,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4607,
											"end": 4646,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4593,
											"end": 4646,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4593,
											"end": 4646,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4669,
											"end": 4684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4720,
											"end": 4733,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4823,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4824,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4824,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4847,
											"end": 4860,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4847,
											"end": 4860,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4955,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4920,
											"end": 4955,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4920,
											"end": 4955,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4905,
											"end": 4956,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4905,
											"end": 4956,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4993,
											"end": 5037,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4993,
											"end": 5037,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4993,
											"end": 5037,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4976,
											"end": 4991,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4976,
											"end": 4991,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 4976,
											"end": 4991,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4969,
											"end": 5038,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5089,
											"end": 5091,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5092,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5081,
											"end": 5092,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5081,
											"end": 5092,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5075,
											"end": 5093,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5051,
											"end": 5094,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5147,
											"end": 5151,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5114,
											"end": 5131,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5114,
											"end": 5131,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 5114,
											"end": 5131,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5107,
											"end": 5154,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5207,
											"end": 5211,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 5199,
											"end": 5212,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5199,
											"end": 5212,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5199,
											"end": 5212,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5193,
											"end": 5213,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5167,
											"end": 5214,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 5273,
											"end": 5286,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5286,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5286,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5267,
											"end": 5287,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5260,
											"end": 5288,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5253,
											"end": 5289,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5234,
											"end": 5251,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5234,
											"end": 5251,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 5234,
											"end": 5251,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5227,
											"end": 5290,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5227,
											"end": 5290,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5227,
											"end": 5290,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5227,
											"end": 5290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5335,
											"end": 5346,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5335,
											"end": 5346,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5303,
											"end": 5348,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5387,
											"end": 5398,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5412,
											"end": 5445,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5412,
											"end": 5445,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5412,
											"end": 5445,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 5468,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5555,
											"end": 5557,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4748,
											"end": 4749,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 4741,
											"end": 4750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 4712,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 5629,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4158,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5634,
											"end": 5820,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 5634,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5693,
											"end": 5699,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5748,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5725,
											"end": 5732,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5721,
											"end": 5744,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5717,
											"end": 5749,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5714,
											"end": 5766,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5714,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 5714,
											"end": 5766,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5762,
											"end": 5763,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5714,
											"end": 5766,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 5714,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5785,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5785,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 5785,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6175,
											"end": 6595,
											"name": "tag",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 6175,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6266,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6268,
											"end": 6274,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6309,
											"end": 6318,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6300,
											"end": 6307,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6319,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6292,
											"end": 6324,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6327,
											"end": 6339,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 6360,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6350,
											"end": 6389,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 6458,
											"end": 6460,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6430,
											"end": 6462,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6430,
											"end": 6462,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6561,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6544,
											"end": 6562,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6544,
											"end": 6562,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6544,
											"end": 6562,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6531,
											"end": 6563,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6531,
											"end": 6563,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6175,
											"end": 6595,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6175,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6853,
											"end": 7191,
											"name": "tag",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 6853,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7094,
											"end": 7096,
											"name": "PUSH",
											"source": 19,
											"value": "E"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7067,
											"end": 7097,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "283632B0B9B2903BB0B4BA171717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7130,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7106,
											"end": 7150,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7182,
											"end": 7184,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6853,
											"end": 7191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7623,
											"end": 7750,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 7623,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7684,
											"end": 7694,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 7679,
											"end": 7682,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 7675,
											"end": 7695,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 7672,
											"end": 7673,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7696,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 7712,
											"end": 7713,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7705,
											"end": 7720,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7739,
											"end": 7743,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7755,
											"end": 7880,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 7755,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7841,
											"end": 7851,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7841,
											"end": 7851,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7841,
											"end": 7851,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7838,
											"end": 7874,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7838,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 7838,
											"end": 7874,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7854,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 7854,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 7854,
											"end": 7872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7885,
											"end": 8053,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 7885,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 7976,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 7976,
											"end": 8047,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 8027,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8058,
											"end": 8186,
											"name": "tag",
											"source": 19,
											"value": "185"
										},
										{
											"begin": 8058,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8157,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8157,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8157,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8143,
											"end": 8180,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8143,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 8143,
											"end": 8180,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8160,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 8160,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 8160,
											"end": 8178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8890,
											"end": 9026,
											"name": "tag",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 8890,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8962,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8947,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 8947,
											"end": 8986,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8966,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 8966,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 8966,
											"end": 8984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8966,
											"end": 8984,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 8966,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8890,
											"end": 9026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9031,
											"end": 9402,
											"name": "tag",
											"source": 19,
											"value": "204"
										},
										{
											"begin": 9031,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9251,
											"end": 9283,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9251,
											"end": 9283,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9251,
											"end": 9283,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9233,
											"end": 9284,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9233,
											"end": 9284,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9320,
											"end": 9352,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9320,
											"end": 9352,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9320,
											"end": 9352,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9320,
											"end": 9352,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9315,
											"end": 9317,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9293,
											"end": 9353,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9384,
											"end": 9386,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9387,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9369,
											"end": 9387,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9396,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9396,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9396,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9396,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9206,
											"end": 9224,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9206,
											"end": 9224,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9031,
											"end": 9402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9407,
											"end": 9534,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 9407,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9468,
											"end": 9478,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 9463,
											"end": 9466,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 9459,
											"end": 9479,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9480,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9499,
											"end": 9503,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 9489,
											"end": 9504,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9523,
											"end": 9527,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9528,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9539,
											"end": 10455,
											"name": "tag",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 9539,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9619,
											"end": 9625,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9672,
											"end": 9674,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9669,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9651,
											"end": 9658,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9647,
											"end": 9670,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9643,
											"end": 9675,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9640,
											"end": 9692,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9640,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 9640,
											"end": 9692,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9688,
											"end": 9689,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9686,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9678,
											"end": 9690,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9640,
											"end": 9692,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 9640,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9721,
											"end": 9730,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9715,
											"end": 9731,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9746,
											"end": 9752,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9743,
											"end": 9773,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9740,
											"end": 9790,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9740,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 9740,
											"end": 9790,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9786,
											"end": 9787,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9783,
											"end": 9784,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9740,
											"end": 9790,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 9740,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9809,
											"end": 9831,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9809,
											"end": 9831,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9862,
											"end": 9866,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 9854,
											"end": 9867,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9854,
											"end": 9867,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9850,
											"end": 9877,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 9840,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 9840,
											"end": 9895,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9881,
											"end": 9893,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9840,
											"end": 9895,
											"name": "tag",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 9840,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9924,
											"end": 9926,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9918,
											"end": 9927,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9942,
											"end": 9948,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9936,
											"end": 9992,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9936,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 9936,
											"end": 9992,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 9972,
											"end": 9990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10021,
											"end": 10023,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10015,
											"end": 10024,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 10113,
											"end": 10115,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 10075,
											"end": 10092,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10075,
											"end": 10092,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10071,
											"end": 10102,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10071,
											"end": 10102,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10071,
											"end": 10102,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10104,
											"end": 10106,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 10067,
											"end": 10107,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10063,
											"end": 10117,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10051,
											"end": 10118,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10051,
											"end": 10118,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10169,
											"end": 10191,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10169,
											"end": 10191,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10169,
											"end": 10191,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 10130,
											"end": 10192,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 10127,
											"end": 10215,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10127,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 10127,
											"end": 10215,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 10195,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10224,
											"end": 10246,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10277,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10277,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10277,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10296,
											"end": 10311,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10296,
											"end": 10311,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10296,
											"end": 10311,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10313,
											"end": 10315,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10292,
											"end": 10316,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10289,
											"end": 10326,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 10286,
											"end": 10343,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10286,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 10286,
											"end": 10343,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10337,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10329,
											"end": 10341,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10286,
											"end": 10343,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 10286,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10352,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 10417,
											"end": 10423,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10404,
											"end": 10410,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10400,
											"end": 10415,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10395,
											"end": 10397,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10391,
											"end": 10393,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10387,
											"end": 10398,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10352,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 10352,
											"end": 10424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10352,
											"end": 10424,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 10352,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 9539,
											"end": 10455,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9539,
											"end": 10455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10460,
											"end": 10587,
											"name": "tag",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 10460,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10521,
											"end": 10531,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 10516,
											"end": 10519,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 10509,
											"end": 10510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10533,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10552,
											"end": 10556,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10542,
											"end": 10557,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10576,
											"end": 10580,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10573,
											"end": 10574,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10566,
											"end": 10581,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10592,
											"end": 10727,
											"name": "tag",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 10592,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10631,
											"end": 10634,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10652,
											"end": 10669,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 10652,
											"end": 10669,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10652,
											"end": 10669,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10649,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 10649,
											"end": 10692,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 10672,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10719,
											"end": 10720,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 10708,
											"end": 10721,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10708,
											"end": 10721,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10592,
											"end": 10727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13957,
											"end": 14174,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 13957,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13997,
											"end": 13998,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14024,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14013,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 14013,
											"end": 14145,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14067,
											"end": 14077,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 14062,
											"end": 14065,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 14058,
											"end": 14078,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 14055,
											"end": 14056,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14048,
											"end": 14079,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14102,
											"end": 14106,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 14099,
											"end": 14100,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 14092,
											"end": 14107,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14130,
											"end": 14134,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14127,
											"end": 14128,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14135,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14013,
											"end": 14145,
											"name": "tag",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 14013,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14159,
											"end": 14168,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 14159,
											"end": 14168,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13957,
											"end": 14174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14895,
											"end": 15172,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 14895,
											"end": 15172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14962,
											"end": 14968,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15015,
											"end": 15017,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15003,
											"end": 15012,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14994,
											"end": 15001,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14990,
											"end": 15013,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14986,
											"end": 15018,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 14983,
											"end": 15035,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14983,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 14983,
											"end": 15035,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15031,
											"end": 15032,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15029,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15021,
											"end": 15033,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14983,
											"end": 15035,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 14983,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15063,
											"end": 15072,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15057,
											"end": 15073,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15116,
											"end": 15121,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15109,
											"end": 15122,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15095,
											"end": 15100,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15092,
											"end": 15124,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 15082,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 15082,
											"end": 15142,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15138,
											"end": 15139,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15135,
											"end": 15136,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15128,
											"end": 15140,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 15177,
											"end": 15464,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 15177,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15306,
											"end": 15309,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15344,
											"end": 15350,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15338,
											"end": 15351,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15360,
											"end": 15426,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 15419,
											"end": 15425,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15414,
											"end": 15417,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15407,
											"end": 15411,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15399,
											"end": 15405,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 15395,
											"end": 15412,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15360,
											"end": 15426,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 15360,
											"end": 15426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15360,
											"end": 15426,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 15360,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15442,
											"end": 15458,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15442,
											"end": 15458,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15442,
											"end": 15458,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15442,
											"end": 15458,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15442,
											"end": 15458,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15177,
											"end": 15464,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15177,
											"end": 15464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/practiceProject/marketPlace/marketplace2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NftSupply(address,uint256)": "c456fc9e",
							"adminDepositToken(address,uint256)": "b8237ab7",
							"adminWithdrawToken(address,uint256)": "ba41c844",
							"auctionListCount(uint256)": "d84c0fd3",
							"buyLandNft(uint256,uint256)": "9d02e67c",
							"endTime()": "3197cbb6",
							"getAllLandListedNfts()": "9677ca0b",
							"landContract()": "03d07340",
							"listCount(uint256)": "8d02f792",
							"listLandNft(address,uint256,uint256)": "ec4b65e7",
							"lockedNFT(uint256)": "73233ea6",
							"nextLandListId()": "716135c7",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount(address,uint256)": "c85e4d49",
							"stakeNFT(address,address,uint256)": "bb623d13",
							"stakingPeriod(uint256,uint256)": "9158444b",
							"startTime()": "78e97925",
							"tokenAddress()": "9d76ea58",
							"totalLockedNft()": "772635ee",
							"transferOwnership(address)": "f2fde38b",
							"unStakeNFT(address,address,uint256)": "699d503a",
							"userClaimFT(address,uint256)": "19f34bf3",
							"userCount(address)": "a3480569",
							"userLandListings(address,uint256)": "84fccd5e",
							"userListCount(uint256)": "1e903868",
							"user_Staking_Rewards(uint256)": "f0441f95"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"_landMinting\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDCAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokedId\",\"type\":\"uint256\"}],\"name\":\"NftSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"TokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwnerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userWithdrawToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenDeposit\",\"type\":\"uint256\"}],\"name\":\"adminDepositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenDeposit\",\"type\":\"uint256\"}],\"name\":\"adminWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctionListCount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"buyLandNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllLandListedNfts\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.ListLand\",\"name\":\"listedData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"listCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uriData\",\"type\":\"string\"}],\"internalType\":\"struct NFTMarketplace.ListedLandNftTokenId[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listCount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mintContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"listLandNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockedNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"TokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwnerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userWithdrawToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLandListId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"stakingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unStakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"userClaimFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLandListings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userListCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"user_Staking_Rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stakeNFT(address,address,uint256)\":{\"details\":\"Locks NFT.\",\"params\":{\"stakerAddress\":\"The address of the staker.\",\"tokenId\":\"The unique identifier of the NFT.\"}},\"stakingPeriod(uint256,uint256)\":{\"details\":\"Sets the vesting period. Configures the start and end times for the vesting period.\",\"params\":{\"end\":\"The end time of the vesting period.\",\"start\":\"The start time of the vesting period.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unStakeNFT(address,address,uint256)\":{\"details\":\"Unlocks NFT. Unlocks the specified Starlight NFT by transferring it back to the staker.\",\"params\":{\"stakerAddress\":\"The address of the staker.\",\"tokenId\":\"The unique identifier of the NFT.\"}},\"userClaimFT(address,uint256)\":{\"details\":\"Allows users to claim their earned tokens based on the locked NFT. Users can claim their rewards based on the category of their locked NFT.\",\"params\":{\"tokenId\":\"The unique identifier of the NFT.\",\"userAddress\":\"The address of the user.\"}},\"user_Staking_Rewards(uint256)\":{\"details\":\"Calculates user rewards based on the time and category of the NFT. Calculates the rewards and the number of months the user can claim.\",\"params\":{\"tokenId\":\"The unique identifier of the NFT.\"},\"returns\":{\"month\":\"The number of months the user can claim rewards for.\",\"rewards\":\"The calculated rewards.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/practiceProject/marketPlace/marketplace2.sol\":\"NFTMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/practiceProject/marketPlace/marketplace2.sol\":{\"keccak256\":\"0x74f2121b38d6b24b3b5fa5979d9577378e0d3b8bc788c3e9d0b05a4fdb49286a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503a4377f0baab5d38e5e6c386f0df8db71fcfaa485f9581cd24647c7b477b10\",\"dweb:/ipfs/QmacvsZkRa7YtQ2NPadVPR16PH3Dgxo1aBK1qWX23W1Ydv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 3791,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "nextLandListId",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)2214_storage"
							},
							{
								"astId": 3794,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "landContract",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)1879"
							},
							{
								"astId": 3796,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "totalLockedNft",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 3800,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "startTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3802,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "endTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 3855,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "listCount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Address_Token)3842_storage)"
							},
							{
								"astId": 3859,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "userCount",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3863,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "userListCount",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3868,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "lockedNFT",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(NftDetails)3830_storage)"
							},
							{
								"astId": 3873,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "auctionListCount",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_struct(AddressToken)3837_storage)"
							},
							{
								"astId": 3880,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "NftSupply",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftDetails)3830_storage))"
							},
							{
								"astId": 3886,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "rewardAmount",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 3893,
								"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
								"label": "userLandListings",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListLand)3815_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC721)1879": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(ListLand)3815_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(ListLand)3815_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(NftDetails)3830_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct NFTMarketplace.NftDetails))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(NftDetails)3830_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(AddressToken)3837_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.AddressToken)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressToken)3837_storage"
							},
							"t_mapping(t_uint256,t_struct(Address_Token)3842_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.Address_Token)",
								"numberOfBytes": "32",
								"value": "t_struct(Address_Token)3842_storage"
							},
							"t_mapping(t_uint256,t_struct(ListLand)3815_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.ListLand)",
								"numberOfBytes": "32",
								"value": "t_struct(ListLand)3815_storage"
							},
							"t_mapping(t_uint256,t_struct(NftDetails)3830_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.NftDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(NftDetails)3830_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressToken)3837_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.AddressToken",
								"members": [
									{
										"astId": 3832,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3834,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3836,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Address_Token)3842_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.Address_Token",
								"members": [
									{
										"astId": 3839,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3841,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Counter)2214_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2213,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(ListLand)3815_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.ListLand",
								"members": [
									{
										"astId": 3804,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3806,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3808,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3810,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "count",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3812,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3814,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "listed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(NftDetails)3830_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.NftDetails",
								"members": [
									{
										"astId": 3817,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "TokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3819,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "stakerAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3821,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "currentOwnerAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 3823,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "userWithdrawToken",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3825,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "withdrawMonth",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3827,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "stakeTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3829,
										"contract": "contracts/practiceProject/marketPlace/marketplace2.sol:NFTMarketplace",
										"label": "isActive",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2208
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 2209,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2208,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2208,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								2208
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							427
						]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 427,
							"linearizedBaseContracts": [
								427
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 361,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 370,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 427,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 427,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 427,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 427,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 427,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 427,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 428,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								361,
								370
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							463
						]
					},
					"id": 464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 463,
							"linearizedBaseContracts": [
								463
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 440,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 463,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 463,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 463,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 464,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2178
						],
						"IERC20": [
							427
						],
						"IERC20Permit": [
							463
						],
						"SafeERC20": [
							753
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 465,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 428,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 427,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 464,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 463,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 2179,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 470,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2178,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 475,
									"libraryName": {
										"id": 473,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2178,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 480,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 489,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 504,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 394,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 506,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 502,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 500,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 491,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 427,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 753,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 530,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 532,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 533,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 534,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 526,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 515,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 427,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 753,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 557,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 564,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 566,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 427,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 753,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 612,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 612,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 592,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 588,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 586,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 590,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 594,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 602,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 597,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 577,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 598,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 599,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 596,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 601,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 605,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 606,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 607,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 608,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 604,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 611,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 573,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 427,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 753,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 625,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 629,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 631,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 632,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 633,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 627,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 637,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 638,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 636,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 642,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$427",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 414,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 647,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 620,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 649,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 643,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 641,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 652,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 654,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 655,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 653,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 427,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 753,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 670,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1999,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 680,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 686,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 696,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$427",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$427",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 694,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 693,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 699,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 427,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 753,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													715,
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 714,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 716,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 727,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 733,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 734,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 736,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 731,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$427",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$427",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 713,
												"id": 750,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 427,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 753,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "751:5018:5",
							"usedErrors": [
								480,
								489
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2208
						],
						"ERC165": [
							2561
						],
						"ERC721": [
							1762
						],
						"IERC165": [
							2573
						],
						"IERC721": [
							1879
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1925
						],
						"IERC721Receiver": [
							1897
						],
						"Strings": [
							2537
						]
					},
					"id": 1763,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1880,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 756,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1898,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 758,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1897,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1926,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 760,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1925,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2209,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 762,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2208,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2538,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2537,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2562,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 766,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2573,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 767,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2561,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 285,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2208,
										"src": "804:7:6"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2561,
										"src": "813:6:6"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "821:7:6"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1925,
										"src": "830:15:6"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:6"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1762,
							"linearizedBaseContracts": [
								1762,
								237,
								1925,
								1879,
								2561,
								2573,
								2208
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 784,
									"libraryName": {
										"id": 782,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2537,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 786,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 785,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 787,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 791,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 789,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 790,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 795,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 794,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 799,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 806,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 805,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 804,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 802,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 803,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 815,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 819,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 823,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1762,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2560,
										2572
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1879_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1879_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 835,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1879",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 842,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1925_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1925_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 841,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1925",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 849,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 847,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1762_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2560,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 833,
												"id": 852,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 830,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 828,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2561,
												"src": "1637:6:6"
											},
											{
												"id": 829,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2573,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 825,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1762,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1804
									],
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 868,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 877,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 879,
													"indexExpression": {
														"id": 878,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 861,
												"id": 880,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1762,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1812
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 889,
												"id": 893,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1762,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1910
									],
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 901,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 900,
												"id": 902,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1762,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 910,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 909,
												"id": 911,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1762,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1924
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 921,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 925,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 927,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 932,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 940,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 941,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2350,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 937,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 920,
												"id": 947,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1762,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 954,
												"id": 956,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1762,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1852
									],
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 969,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 966,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1631
														],
														"referencedDeclaration": 1565,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1762,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1868
									],
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 981,
												"id": 989,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1762,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1860
									],
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1000,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 999,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1762,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1878
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1017,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1019,
														"indexExpression": {
															"id": 1018,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1021,
													"indexExpression": {
														"id": 1020,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1022,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1762,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1844
									],
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1034,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1035,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1041,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1040,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1046,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1049,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [
														{
															"id": 1052,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1054,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1051,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1059,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1062,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1063,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1064,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1061,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1762,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1080,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1088,
															1114
														],
														"referencedDeclaration": 1114,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1762,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1824
									],
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1110,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1106,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1762,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1122,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1124,
													"indexExpression": {
														"id": 1123,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1125,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1762,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1135,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1137,
													"indexExpression": {
														"id": 1136,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1138,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1762,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1158,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1159,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1162,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1163,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1161,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1167,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1166,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1169,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1172,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1174,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1762,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1187,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1188,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1189,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1186,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1193,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1208,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1204,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1205,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1203,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1207,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 1209,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 1202,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1199,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1198,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1201,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1762,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1221,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1223,
																"indexExpression": {
																	"id": 1222,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1224,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1226,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1217,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1762,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1241,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": {
													"arguments": [
														{
															"id": 1244,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1247,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1248,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1256,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1253,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 1287,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1268,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1273,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1267,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1565,
																		1631
																	],
																	"referencedDeclaration": 1631,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 1286,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1280,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1282,
																			"indexExpression": {
																				"id": 1281,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1285,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1290,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 1301,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1295,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1297,
																			"indexExpression": {
																				"id": 1296,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1304,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1306,
														"indexExpression": {
															"id": 1305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 1316,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1242,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1317,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1762,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "10008:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "10022:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "10018:87:6",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "10040:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1333,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1339,
															"nodeType": "RevertStatement",
															"src": "10054:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "10114:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"id": 1345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "10146:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "10150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1344,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "10138:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1353,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "10184:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1354,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "10180:96:6",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "10213:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1360,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1359,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1365,
															"nodeType": "RevertStatement",
															"src": "10227:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "9970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "9982:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:6"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:6"
									},
									"scope": 1762,
									"src": "9955:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "10690:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "10710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "10714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1377,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1410
														],
														"referencedDeclaration": 1410,
														"src": "10700:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:6"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10652:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10664:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:6"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:6"
									},
									"scope": 1762,
									"src": "10633:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "11038:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "11054:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11058:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "11048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "11111:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11115:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1399,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "11076:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:6"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "10973:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "10985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:6"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:6"
									},
									"scope": 1762,
									"src": "10954:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "11503:186:6",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "11513:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "11557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1418,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1430,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "11591:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "11587:96:6",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "11620:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1437,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "11664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1436,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1439,
															"nodeType": "RevertStatement",
															"src": "11634:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "11477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:6"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:6"
									},
									"scope": 1762,
									"src": "11462:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "12084:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "12098:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1454,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "12094:87:6",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "12116:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1460,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1459,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1465,
															"nodeType": "RevertStatement",
															"src": "12130:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "12190:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1471,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "12222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "12226:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1470,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "12214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1479,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "12260:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1490,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "12362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "12379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1500,
													"nodeType": "IfStatement",
													"src": "12358:109:6",
													"trueBody": {
														"id": 1499,
														"nodeType": "Block",
														"src": "12385:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1494,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "12427:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1495,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "12433:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1496,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "12442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1493,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1498,
																"nodeType": "RevertStatement",
																"src": "12399:57:6"
															}
														]
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "12256:211:6",
												"trueBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "12289:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1486,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "12333:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1485,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1488,
															"nodeType": "RevertStatement",
															"src": "12303:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12046:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:6"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:6"
									},
									"scope": 1762,
									"src": "12013:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "13481:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1514,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "13505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "13511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1516,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "13515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1513,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1521,
															1547
														],
														"referencedDeclaration": 1547,
														"src": "13491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:6"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:6"
									},
									"scope": 1762,
									"src": "13406:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "13873:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "13893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13899:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1536,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "13883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "13944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13950:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13963:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1539,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "13921:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:6"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13808:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13820:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13837:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:6"
									},
									"scope": 1762,
									"src": "13771:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "14488:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "14507:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "14511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1560,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "14520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1557,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1631
														],
														"referencedDeclaration": 1631,
														"src": "14498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:6"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14436:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:6"
									},
									"scope": 1762,
									"src": "14418:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "14814:568:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "14880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1578,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "14893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "14876:460:6",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "14913:423:6",
													"statements": [
														{
															"assignments": [
																1586
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1586,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1622,
																	"src": "14927:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1590,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1588,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "14957:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1587,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14943:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "15093:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1592,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1597,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "15115:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1598,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "15124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1602,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1586,
																				"src": "15150:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1603,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "15157:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1601,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "15133:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1612,
															"nodeType": "IfStatement",
															"src": "15089:142:6",
															"trueBody": {
																"id": 1611,
																"nodeType": "Block",
																"src": "15164:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1608,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "15211:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1607,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1610,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1613,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "15249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1621,
															"nodeType": "IfStatement",
															"src": "15245:81:6",
															"trueBody": {
																"id": 1620,
																"nodeType": "Block",
																"src": "15260:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1615,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "15292:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1616,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "15299:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1617,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "15303:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1614,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "15283:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1619,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1624,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "15346:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "15362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1627,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "15373:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:6"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14738:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14750:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:6"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:6"
									},
									"scope": 1762,
									"src": "14720:662:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "15684:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "15698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1642,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "15694:91:6",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "15722:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "15765:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1647,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "15736:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1653,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "15794:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1656,
															"indexExpression": {
																"id": 1654,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "15813:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1657,
														"indexExpression": {
															"id": 1655,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1658,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "15832:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1662,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "15870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15877:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15887:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1661,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "15855:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "EmitStatement",
												"src": "15850:46:6"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15634:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:6"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:6"
									},
									"scope": 1762,
									"src": "15591:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "16210:169:6",
										"statements": [
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "16220:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1676,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "16245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "16236:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "16267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1693,
												"nodeType": "IfStatement",
												"src": "16263:88:6",
												"trueBody": {
													"id": 1692,
													"nodeType": "Block",
													"src": "16288:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1689,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "16332:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1688,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1691,
															"nodeType": "RevertStatement",
															"src": "16302:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1694,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1677,
													"src": "16367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1695,
												"nodeType": "Return",
												"src": "16360:12:6"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "16161:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:6"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "16201:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:6"
									},
									"scope": 1762,
									"src": "16138:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "17020:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1709,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "17034:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1759,
												"nodeType": "IfStatement",
												"src": "17030:664:6",
												"trueBody": {
													"id": 1758,
													"nodeType": "Block",
													"src": "17054:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1738,
																		"nodeType": "Block",
																		"src": "17168:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1727,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1725,
																						"src": "17190:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1728,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1897,
																								"src": "17200:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1897_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1729,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1896,
																							"src": "17200:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1737,
																				"nodeType": "IfStatement",
																				"src": "17186:130:6",
																				"trueBody": {
																					"id": 1736,
																					"nodeType": "Block",
																					"src": "17243:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1733,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1702,
																										"src": "17294:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1732,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1734,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1735,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1739,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1726,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1725,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1739,
																				"src": "17153:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1724,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:6"
																	},
																	"src": "17144:186:6"
																},
																{
																	"block": {
																		"id": 1755,
																		"nodeType": "Block",
																		"src": "17359:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1743,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1741,
																							"src": "17381:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1753,
																					"nodeType": "Block",
																					"src": "17480:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:6",
																								"nodeType": "YulBlock",
																								"src": "17566:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:6"
																													},
																													"nativeSrc": "17599:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:6"
																													},
																													"nativeSrc": "17616:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:6"
																											},
																											"nativeSrc": "17592:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:6"
																										},
																										"nativeSrc": "17592:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1741,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1741,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1752,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:6"
																						}
																					]
																				},
																				"id": 1754,
																				"nodeType": "IfStatement",
																				"src": "17377:293:6",
																				"trueBody": {
																					"id": 1751,
																					"nodeType": "Block",
																					"src": "17401:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1748,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1702,
																										"src": "17452:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1747,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1749,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1750,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1756,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1742,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1741,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1756,
																				"src": "17338:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1740,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:6"
																	},
																	"src": "17331:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1718,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "17109:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "17123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "17129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1722,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "17138:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1715,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "17088:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1714,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "17072:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1897_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1897",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1896,
																	"src": "17072:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1757,
															"nodeType": "TryStatement",
															"src": "17068:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16950:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16976:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16993:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:6"
									},
									"scope": 1762,
									"src": "16918:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1763,
							"src": "776:16926:6",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "107:17596:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2573
						],
						"IERC721": [
							1879
						]
					},
					"id": 1880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1764,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2574,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1765,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2573,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1768,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2573,
										"src": "287:7:7"
									},
									"id": 1769,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1767,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1879,
							"linearizedBaseContracts": [
								1879,
								2573
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1778,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1787,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1796,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1879,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1879,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1879,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1879,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1879,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1879,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1879,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1879,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1879,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1880,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1897
						]
					},
					"id": 1898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1882,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1897,
							"linearizedBaseContracts": [
								1897
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1897,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1898,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1879
						],
						"IERC721Metadata": [
							1925
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 1880,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1900,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1903,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "357:7:9"
									},
									"id": 1904,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1902,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1925,
							"linearizedBaseContracts": [
								1925,
								1879,
								2573
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1925,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1925,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1925,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1926,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2178
						]
					},
					"id": 2179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1928,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2178,
							"linearizedBaseContracts": [
								2178
							],
							"name": "Address",
							"nameLocation": "203:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1933,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "349:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:10"
									},
									"src": "316:50:10"
								},
								{
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1938,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "475:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:10"
									},
									"src": "452:39:10"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1941,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:10"
									},
									"src": "591:24:10"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "1602:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1951,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																],
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1954,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "1640:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1964,
												"nodeType": "IfStatement",
												"src": "1612:109:10",
												"trueBody": {
													"id": 1963,
													"nodeType": "Block",
													"src": "1648:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1959,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1957,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1956,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "1669:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1962,
															"nodeType": "RevertStatement",
															"src": "1662:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1966,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "1732:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1965,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1973,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1967,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "1750:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1969,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "1772:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:10"
											},
											{
												"condition": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:10",
													"subExpression": {
														"id": 1974,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "1798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "IfStatement",
												"src": "1793:63:10",
												"trueBody": {
													"id": 1979,
													"nodeType": "Block",
													"src": "1807:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1976,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "1828:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1978,
															"nodeType": "RevertStatement",
															"src": "1821:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1550:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1577:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:10"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:10"
									},
									"scope": 2178,
									"src": "1531:331:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "2794:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1993,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "2833:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "2841:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1992,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "2811:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1991,
												"id": 1997,
												"nodeType": "Return",
												"src": "2804:45:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2727:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2743:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2780:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:10"
									},
									"scope": 2178,
									"src": "2705:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3293:279:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2013,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																],
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2016,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "3331:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "3303:108:10",
												"trueBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "3338:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2021,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2019,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2018,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "3359:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2024,
															"nodeType": "RevertStatement",
															"src": "3352:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													2028,
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3421:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2027,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3435:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2029,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "3488:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2031,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "3462:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2033,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "3481:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2039,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "3537:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2040,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "3545:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2041,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "3554:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2038,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "3510:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2043,
												"nodeType": "Return",
												"src": "3503:62:10"
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3211:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3227:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:10"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3279:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:10"
									},
									"scope": 2178,
									"src": "3180:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "3811:154:10",
										"statements": [
											{
												"assignments": [
													2056,
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3822:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2055,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3836:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2057,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"arguments": [
														{
															"id": 2061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3881:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2059,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "3863:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "3930:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "3938:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2067,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "3947:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2064,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "3903:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2069,
												"nodeType": "Return",
												"src": "3896:62:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3755:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:10"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3797:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:10"
									},
									"scope": 2178,
									"src": "3711:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "4203:156:10",
										"statements": [
											{
												"assignments": [
													2082,
													2084
												],
												"declarations": [
													{
														"constant": false,
														"id": 2082,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2096,
														"src": "4214:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2081,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2096,
														"src": "4228:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2083,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"initialValue": {
													"arguments": [
														{
															"id": 2087,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "4275:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2085,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "4255:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "4324:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2092,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "4332:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2093,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "4341:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2090,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "4297:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2080,
												"id": 2095,
												"nodeType": "Return",
												"src": "4290:62:10"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4136:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4152:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:10"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4189:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:10"
									},
									"scope": 2178,
									"src": "4106:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "4783:424:10",
										"statements": [
											{
												"condition": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:10",
													"subExpression": {
														"id": 2109,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "4798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "4857:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2116,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "5045:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2120,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2100,
																				"src": "5071:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2131,
															"nodeType": "IfStatement",
															"src": "5041:119:10",
															"trueBody": {
																"id": 2130,
																"nodeType": "Block",
																"src": "5096:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2127,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2100,
																					"src": "5138:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2126,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1938,
																				"src": "5121:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2129,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2132,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "5180:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2133,
															"nodeType": "Return",
															"src": "5173:17:10"
														}
													]
												},
												"id": 2135,
												"nodeType": "IfStatement",
												"src": "4793:408:10",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "4807:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2112,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "4829:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2111,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "4821:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4670:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4694:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4716:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:10"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4769:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:10"
									},
									"scope": 2178,
									"src": "4625:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "5509:122:10",
										"statements": [
											{
												"condition": {
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:10",
													"subExpression": {
														"id": 2147,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "5524:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "5583:42:10",
													"statements": [
														{
															"expression": {
																"id": 2154,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5604:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2146,
															"id": 2155,
															"nodeType": "Return",
															"src": "5597:17:10"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "5519:106:10",
												"trueBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "5533:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2150,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "5555:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2149,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "5547:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5433:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5447:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:10"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5495:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:10"
									},
									"scope": 2178,
									"src": "5407:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "5798:461:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2165,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "5874:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "6204:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2171,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "6225:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2173,
															"nodeType": "RevertStatement",
															"src": "6218:24:10"
														}
													]
												},
												"id": 2175,
												"nodeType": "IfStatement",
												"src": "5870:383:10",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "5897:301:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:10",
																"nodeType": "YulBlock",
																"src": "6055:133:10",
																"statements": [
																	{
																		"nativeSrc": "6073:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:10"
																			},
																			"nativeSrc": "6096:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:10",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:10",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:10"
																					},
																					"nativeSrc": "6137:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:10"
																			},
																			"nativeSrc": "6130:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:10"
																		},
																		"nativeSrc": "6130:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:10"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 2162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 2162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:10",
																	"valueSize": 1
																}
															],
															"id": 2169,
															"nodeType": "InlineAssembly",
															"src": "6046:142:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "5760:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:10"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:10"
									},
									"scope": 2178,
									"src": "5743:516:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2179,
							"src": "195:6066:10",
							"usedErrors": [
								1933,
								1938,
								1941
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2208
						]
					},
					"id": 2209,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2181,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2208,
							"linearizedBaseContracts": [
								2208
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2186,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2188,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 2208,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2195,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2197,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 2208,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2203,
												"id": 2205,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 2208,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2209,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2282
						]
					},
					"id": 2283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2211,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2282,
							"linearizedBaseContracts": [
								2282
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2214,
									"members": [
										{
											"constant": false,
											"id": 2213,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2214,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2212,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 2282,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2222,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2213,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2221,
												"id": 2224,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2216,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2215,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "844:7:12"
													},
													"referencedDeclaration": 2214,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 2282,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 2238,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2232,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2213,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2237,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2227,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "964:7:12"
													},
													"referencedDeclaration": 2214,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 2282,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2267,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													2247
												],
												"declarations": [
													{
														"constant": false,
														"id": 2247,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2267,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2250,
												"initialValue": {
													"expression": {
														"id": 2248,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2213,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2252,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2257,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 2266,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2258,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2243,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2213,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2265,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 2268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2241,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 2214,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 2282,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2274,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2213,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2269,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 2214,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 2282,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2283,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3627
						],
						"SignedMath": [
							3732
						],
						"Strings": [
							2537
						]
					},
					"id": 2538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2538,
							"sourceUnit": 3628,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2285,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3627,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2538,
							"sourceUnit": 3733,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2287,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3732,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2289,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2537,
							"linearizedBaseContracts": [
								2537
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2292,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2537,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2290,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2295,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2537,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2293,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2294,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2302,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 2348,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															2311
														],
														"declarations": [
															{
																"constant": false,
																"id": 2311,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2318,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2314,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2305,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2312,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3627,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3627_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3447,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															2320
														],
														"declarations": [
															{
																"constant": false,
																"id": 2320,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2319,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2325,
														"initialValue": {
															"arguments": [
																{
																	"id": 2323,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2321,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															2327
														],
														"declarations": [
															{
																"constant": false,
																"id": 2327,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2328,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2327,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 2329,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 2344,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 2331,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2327,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2333,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 2292,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2327,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2305,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 2334,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2335,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2338,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2343,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 2342,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2345,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 2346,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2309,
														"id": 2347,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2537,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2370,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2368,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3732,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3732_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3731,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2367,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2358,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2374,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2352,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2537,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 2394,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2388,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2379,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2386,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3627,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3627_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3569,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2384,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2396,
																	2479,
																	2499
																],
																"referencedDeclaration": 2479,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2383,
														"id": 2393,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2537,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2478,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													2407
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2478,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2409,
												"initialValue": {
													"id": 2408,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2399,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													2411
												],
												"declarations": [
													{
														"constant": false,
														"id": 2411,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2478,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2410,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2420,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2415,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2412,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2421,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2423,
														"indexExpression": {
															"hexValue": "30",
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2427,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2429,
														"indexExpression": {
															"hexValue": "31",
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 2461,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2447,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2411,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2449,
																	"indexExpression": {
																		"id": 2448,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2434,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2450,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2292,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2454,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2451,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2456,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2457,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2460,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2441,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2462,
												"initializationExpression": {
													"assignments": [
														2434
													],
													"declarations": [
														{
															"constant": false,
															"id": 2434,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2462,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2440,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2436,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2401,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 2444,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2446,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2463,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2472,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 2471,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2467,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2468,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2401,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2466,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2470,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2475,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2473,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2405,
												"id": 2477,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2537,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2492,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2490,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2488,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2487,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2396,
															2479,
															2499
														],
														"referencedDeclaration": 2479,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2497,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2537,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2511,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2502,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2509,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2516,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2504,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2514,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2523,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2521,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2520,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2529,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2527,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2526,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2508,
												"id": 2534,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2537,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2538,
							"src": "251:2847:13",
							"usedErrors": [
								2302
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2561
						],
						"IERC165": [
							2573
						]
					},
					"id": 2562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2539,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2562,
							"sourceUnit": 2574,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2540,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2573,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2543,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2573,
										"src": "687:7:14"
									},
									"id": 2544,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2542,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2561,
							"linearizedBaseContracts": [
								2561,
								2573
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2572
									],
									"body": {
										"id": 2559,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2552,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2547,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2554,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2573_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2573_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2553,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2573",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2551,
												"id": 2558,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2546,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2561,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2562,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2573
						]
					},
					"id": 2574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2564,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2573,
							"linearizedBaseContracts": [
								2573
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2566,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2573,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2574,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3627
						]
					},
					"id": 3628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2576,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3627,
							"linearizedBaseContracts": [
								3627
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2579,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2584,
									"members": [
										{
											"id": 2580,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2581,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2582,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2583,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2614,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2597
														],
														"declarations": [
															{
																"constant": false,
																"id": 2597,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2614,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2596,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2601,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2598,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2599,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2597,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2603,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2609,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2607,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2595,
															"id": 2608,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2611,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2612,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2595,
														"id": 2613,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2585,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3627,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2643,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2642,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2629,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2633,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2627,
															"id": 2634,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2637,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2638,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2640,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2627,
														"id": 2641,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3627,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2684,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2656,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2663,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2655,
															"id": 2662,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2665
														],
														"declarations": [
															{
																"constant": false,
																"id": 2665,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2684,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2664,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2669,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2666,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2667,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2670,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2671,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2647,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2673,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2679,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2677,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2655,
															"id": 2678,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2681,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2682,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2655,
														"id": 2683,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2645,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3627,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2712,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2698,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2691,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2705,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2703,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2697,
															"id": 2704,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2707,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2708,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2710,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2697,
														"id": 2711,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3627,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2740,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2726,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2719,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2733,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2731,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2725,
															"id": 2732,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2735,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2736,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2738,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2725,
														"id": 2739,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3627,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2752,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2753,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2756,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2747,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2755,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2745,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2751,
												"id": 2758,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3627,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2777,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2770,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2771,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2763,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2776,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2761,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3627,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2800,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2788,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2789,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2791,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2792,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2781,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2793,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2783,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2795,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2787,
												"id": 2799,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2779,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3627,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2811,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2819,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2818,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2814,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2804,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2815,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2806,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2810,
															"id": 2817,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2820,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2804,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2824,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2828,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2806,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2810,
												"id": 2833,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2802,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3627,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2959,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2848
														],
														"declarations": [
															{
																"constant": false,
																"id": 2848,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2959,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2847,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2852,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2849,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2850,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2854
														],
														"declarations": [
															{
																"constant": false,
																"id": 2854,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2959,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2855,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2854,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2838,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2856,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2857,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2865,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2864,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2860,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2861,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2842,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2846,
																	"id": 2863,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2866,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2867,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2873,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2872,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2869,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2871,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2875
														],
														"declarations": [
															{
																"constant": false,
																"id": 2875,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2959,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2874,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2876,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2842,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2854,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2854,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2875,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2875,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2875,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2838,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2877,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2879
														],
														"declarations": [
															{
																"constant": false,
																"id": 2879,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2959,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2886,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2880,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2882,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2842,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2884,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2842,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2842,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2848,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2887,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2888,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2889,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2854,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2890,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2879,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2893,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2895
														],
														"declarations": [
															{
																"constant": false,
																"id": 2895,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2959,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2894,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2902,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2897,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2842,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2899,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2903,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2905,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2906,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2910,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2911,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2913,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2914,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2918,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2919,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2921,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2922,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2926,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2927,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2929,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2930,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2934,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2935,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2937,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2938,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2942,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2943,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2945,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2946,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2950,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2951,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2845,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2952,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2953,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2895,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2956,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2957,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2846,
														"id": 2958,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3627,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3003,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2977
												],
												"declarations": [
													{
														"constant": false,
														"id": 2977,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3003,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2983,
												"initialValue": {
													"arguments": [
														{
															"id": 2979,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2980,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2966,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2981,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2968,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2978,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2961,
															3004
														],
														"referencedDeclaration": 2961,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2985,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2971,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2584",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2584",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2984,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3626,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2584_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2988,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2989,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2966,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2990,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2968,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2987,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3000,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2999,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2995,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2977,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2998,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3001,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2977,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2975,
												"id": 3002,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2584",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2969,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2584,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2584,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2584",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3627,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3012,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3007,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3018,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 3017,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3011,
															"id": 3016,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													3020
												],
												"declarations": [
													{
														"constant": false,
														"id": 3020,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3115,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3029,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3023,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3007,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3022,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3283,
																			3318
																		],
																		"referencedDeclaration": 3283,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3027,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 3114,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3030,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3031,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3032,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3033,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3036,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3040,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3041,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3042,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3043,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3044,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3047,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3051,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 3061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3052,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3053,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3054,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3055,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3058,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3062,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3063,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3064,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3065,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3066,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3069,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3073,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3074,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3075,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3076,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3077,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3080,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3084,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3085,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3086,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3087,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3088,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3091,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3095,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 3105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3096,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3097,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3098,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3007,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3099,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3020,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3102,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3106,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3108,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3109,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3007,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3110,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3107,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3011,
														"id": 3113,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3005,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3007,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3627,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3150,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 3149,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															3128
														],
														"declarations": [
															{
																"constant": false,
																"id": 3128,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3149,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3127,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3132,
														"initialValue": {
															"arguments": [
																{
																	"id": 3130,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3119,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3129,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3116,
																	3151
																],
																"referencedDeclaration": 3116,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3133,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3128,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3135,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3122,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3134,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3626,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2584_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3137,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3128,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3138,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3128,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3140,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3119,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3146,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3126,
														"id": 3148,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3117,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2584",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3120,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2584,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2584,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2584",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3627,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3282,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													3160
												],
												"declarations": [
													{
														"constant": false,
														"id": 3160,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3282,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3162,
												"initialValue": {
													"hexValue": "30",
													"id": 3161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 3279,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3177,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 3176,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3171,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 3174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3172,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3175,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3192,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 3191,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3186,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 3189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3187,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3190,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3207,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 3206,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3198,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3201,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3202,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3205,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3222,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 3221,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3216,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 3219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3220,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3237,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 3236,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3231,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 3234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3232,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3235,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3252,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 3251,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3246,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3247,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3250,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3267,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 3266,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3258,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3261,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 3264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3262,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3265,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3278,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 3277,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3276,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3280,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3160,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3158,
												"id": 3281,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 3152,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3627,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3316,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															3295
														],
														"declarations": [
															{
																"constant": false,
																"id": 3295,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3316,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3299,
														"initialValue": {
															"arguments": [
																{
																	"id": 3297,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3286,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3296,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3283,
																	3318
																],
																"referencedDeclaration": 3283,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3295,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3302,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3289,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3301,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3626,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2584_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3305,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3295,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3307,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3286,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3313,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3293,
														"id": 3315,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3284,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2584",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3287,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2584,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2584,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2584",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3627,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3327
												],
												"declarations": [
													{
														"constant": false,
														"id": 3327,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3446,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3329,
												"initialValue": {
													"hexValue": "30",
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3443,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3346,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3345,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3335,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3340,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3344,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3363,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3362,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3357,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3358,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3361,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3380,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3379,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3369,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3374,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3375,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3378,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3381,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3397,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3396,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3386,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3391,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3392,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3395,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3398,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3414,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3413,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3403,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3408,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3409,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3412,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3415,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3431,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3430,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3420,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3425,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3426,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3429,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3432,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3321,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3442,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3441,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3437,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3440,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3444,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3327,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3325,
												"id": 3445,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3627,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3481,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3480,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3459
														],
														"declarations": [
															{
																"constant": false,
																"id": 3459,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3480,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3458,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3463,
														"initialValue": {
															"arguments": [
																{
																	"id": 3461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3460,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3447,
																	3482
																],
																"referencedDeclaration": 3447,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3464,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3459,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3466,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3453,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3465,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3626,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2584_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3470,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3469,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3459,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3471,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3450,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3477,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3457,
														"id": 3479,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2584",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3452,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3451,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2584,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2584,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2584",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3627,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3568,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3491
												],
												"declarations": [
													{
														"constant": false,
														"id": 3491,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3568,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3493,
												"initialValue": {
													"hexValue": "30",
													"id": 3492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3565,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3508,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3507,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3485,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3502,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3506,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3523,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3522,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3514,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3485,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3517,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3518,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3521,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3524,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3538,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3537,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3529,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3485,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3532,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3533,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3536,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3539,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3553,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3552,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3544,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3485,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3547,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3548,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3551,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3554,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3564,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3563,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3559,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3491,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3562,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3566,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3491,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3489,
												"id": 3567,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3483,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3627,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3606,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3605,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3581
														],
														"declarations": [
															{
																"constant": false,
																"id": 3581,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3605,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3580,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3585,
														"initialValue": {
															"arguments": [
																{
																	"id": 3583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3572,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3582,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3569,
																	3607
																],
																"referencedDeclaration": 3569,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3586,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3581,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3588,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3575,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2584",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3587,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3626,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2584_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3590,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3593,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3591,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3581,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3592,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3594,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3596,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3572,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3602,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3579,
														"id": 3604,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3570,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3572,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3607,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3607,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2584",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3573,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2584,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2584,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2584",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3607,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3627,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3625,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3618,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3611,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2584",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2584",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3616,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3615,
												"id": 3624,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3608,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3611,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3626,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2584",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3609,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2584,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2584,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2584",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3626,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3627,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3628,
							"src": "203:14914:16",
							"usedErrors": [
								2579
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3732
						]
					},
					"id": 3733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3630,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3732,
							"linearizedBaseContracts": [
								3732
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3647,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3640,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3633,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3641,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3644,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3635,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3643,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3633,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3639,
												"id": 3646,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3631,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3648,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3632,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3635,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3648,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3634,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3648,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3637,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3732,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3665,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3658,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3651,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3659,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3653,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3662,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3653,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3651,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3657,
												"id": 3664,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3649,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3650,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3655,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3732,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3709,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3677
												],
												"declarations": [
													{
														"constant": false,
														"id": 3677,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3709,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3676,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3690,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3678,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3669,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3679,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3671,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3682,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3669,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3683,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3671,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3685,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3688,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3691,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3677,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3696,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3677,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3694,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3692,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3701,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3669,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3702,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3671,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3704,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3675,
												"id": 3708,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3667,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3668,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3670,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3673,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3732,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3730,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3729,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3720,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3713,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3724,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3713,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3723,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3713,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3718,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3717,
														"id": 3728,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3711,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3713,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3731,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3712,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3731,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3732,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3733,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/practiceProject/marketPlace/marketplace2.sol": {
				"ast": {
					"absolutePath": "contracts/practiceProject/marketPlace/marketplace2.sol",
					"exportedSymbols": {
						"Address": [
							2178
						],
						"Context": [
							2208
						],
						"Counters": [
							2282
						],
						"ERC165": [
							2561
						],
						"ERC721": [
							1762
						],
						"IConnected": [
							3776
						],
						"IERC165": [
							2573
						],
						"IERC20": [
							427
						],
						"IERC20Permit": [
							463
						],
						"IERC721": [
							1879
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1925
						],
						"IERC721Receiver": [
							1897
						],
						"NFTMarketplace": [
							4658
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"SafeERC20": [
							753
						],
						"Strings": [
							2537
						]
					},
					"id": 4659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4659,
							"sourceUnit": 2283,
							"src": "58:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 3736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4659,
							"sourceUnit": 350,
							"src": "111:62:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4659,
							"sourceUnit": 1763,
							"src": "174:57:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4659,
							"sourceUnit": 754,
							"src": "232:65:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4659,
							"sourceUnit": 148,
							"src": "298:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IConnected",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3776,
							"linearizedBaseContracts": [
								3776
							],
							"name": "IConnected",
							"nameLocation": "362:10:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IConnected.NFT",
									"id": 3750,
									"members": [
										{
											"constant": false,
											"id": 3741,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "504:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3750,
											"src": "496:15:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3740,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "496:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3743,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "533:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3750,
											"src": "525:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3742,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "525:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3745,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "555:3:18",
											"nodeType": "VariableDeclaration",
											"scope": 3750,
											"src": "548:10:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3744,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "548:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3747,
											"mutability": "mutable",
											"name": "mintTime",
											"nameLocation": "573:8:18",
											"nodeType": "VariableDeclaration",
											"scope": 3750,
											"src": "568:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3746,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "568:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3749,
											"mutability": "mutable",
											"name": "minted",
											"nameLocation": "604:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3750,
											"src": "599:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3748,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "599:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "481:3:18",
									"nodeType": "StructDefinition",
									"scope": 3776,
									"src": "474:143:18",
									"visibility": "public"
								},
								{
									"functionSelector": "6e0cee09",
									"id": 3759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenId",
									"nameLocation": "727:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3752,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "749:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "741:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3754,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "758:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "753:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "753:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3756,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "775:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "767:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:42:18"
									},
									"returnParameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:18"
									},
									"scope": 3776,
									"src": "718:74:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f1537686",
									"id": 3768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenId",
									"nameLocation": "806:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3761,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "825:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "817:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:13:18"
									},
									"returnParameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "852:12:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$3750_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IConnected.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3764,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3763,
															"name": "NFT",
															"nameLocations": [
																"852:3:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3750,
															"src": "852:3:18"
														},
														"referencedDeclaration": 3750,
														"src": "852:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3750_storage_ptr",
															"typeString": "struct IConnected.NFT"
														}
													},
													"id": 3765,
													"nodeType": "ArrayTypeName",
													"src": "852:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$3750_storage_$dyn_storage_ptr",
														"typeString": "struct IConnected.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "851:14:18"
									},
									"scope": 3776,
									"src": "797:69:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8ad91345",
									"id": 3775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenUri",
									"nameLocation": "880:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "897:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3775,
												"src": "892:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3769,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:15:18"
									},
									"returnParameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3775,
												"src": "929:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "929:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:15:18"
									},
									"scope": 3776,
									"src": "871:73:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4659,
							"src": "352:595:18",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3777,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"980:15:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "980:15:18"
									},
									"id": 3778,
									"nodeType": "InheritanceSpecifier",
									"src": "980:15:18"
								},
								{
									"baseName": {
										"id": 3779,
										"name": "Ownable",
										"nameLocations": [
											"997:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "997:7:18"
									},
									"id": 3780,
									"nodeType": "InheritanceSpecifier",
									"src": "997:7:18"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4658,
							"linearizedBaseContracts": [
								4658,
								147,
								2208,
								349
							],
							"name": "NFTMarketplace",
							"nameLocation": "962:14:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3784,
									"libraryName": {
										"id": 3781,
										"name": "Counters",
										"nameLocations": [
											"1016:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2282,
										"src": "1016:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "1010:36:18",
									"typeName": {
										"id": 3783,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3782,
											"name": "Counters.Counter",
											"nameLocations": [
												"1029:8:18",
												"1038:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2214,
											"src": "1029:16:18"
										},
										"referencedDeclaration": 2214,
										"src": "1029:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"global": false,
									"id": 3788,
									"libraryName": {
										"id": 3785,
										"name": "SafeERC20",
										"nameLocations": [
											"1057:9:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "1057:9:18"
									},
									"nodeType": "UsingForDirective",
									"src": "1051:27:18",
									"typeName": {
										"id": 3787,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3786,
											"name": "IERC20",
											"nameLocations": [
												"1071:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 427,
											"src": "1071:6:18"
										},
										"referencedDeclaration": 427,
										"src": "1071:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$427",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "716135c7",
									"id": 3791,
									"mutability": "mutable",
									"name": "nextLandListId",
									"nameLocation": "1107:14:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "1083:38:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2214_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3789,
											"name": "Counters.Counter",
											"nameLocations": [
												"1083:8:18",
												"1092:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2214,
											"src": "1083:16:18"
										},
										"referencedDeclaration": 2214,
										"src": "1083:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2214_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03d07340",
									"id": 3794,
									"mutability": "mutable",
									"name": "landContract",
									"nameLocation": "1195:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "1180:27:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1879",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 3793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3792,
											"name": "IERC721",
											"nameLocations": [
												"1180:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1879,
											"src": "1180:7:18"
										},
										"referencedDeclaration": 1879,
										"src": "1180:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1879",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "772635ee",
									"id": 3796,
									"mutability": "mutable",
									"name": "totalLockedNft",
									"nameLocation": "1226:14:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "1214:26:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3795,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1214:4:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 3798,
									"mutability": "immutable",
									"name": "tokenAddress",
									"nameLocation": "1271:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "1246:37:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3797,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1246:7:18",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 3800,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "1301:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "1289:21:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1289:4:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 3802,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "1328:7:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "1316:19:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3801,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1316:4:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.ListLand",
									"id": 3815,
									"members": [
										{
											"constant": false,
											"id": 3804,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "1376:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3815,
											"src": "1368:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3803,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1368:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3806,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "1399:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3815,
											"src": "1391:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3805,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1391:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3808,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1423:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3815,
											"src": "1415:15:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3807,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1415:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3810,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "1448:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3815,
											"src": "1440:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3809,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1440:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3812,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1471:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3815,
											"src": "1463:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3811,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1463:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3814,
											"mutability": "mutable",
											"name": "listed",
											"nameLocation": "1491:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3815,
											"src": "1486:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3813,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1486:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ListLand",
									"nameLocation": "1349:8:18",
									"nodeType": "StructDefinition",
									"scope": 4658,
									"src": "1342:167:18",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.NftDetails",
									"id": 3830,
									"members": [
										{
											"constant": false,
											"id": 3817,
											"mutability": "mutable",
											"name": "TokenId",
											"nameLocation": "1549:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1544:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3816,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1544:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3819,
											"mutability": "mutable",
											"name": "stakerAddress",
											"nameLocation": "1574:13:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1566:21:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3818,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1566:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3821,
											"mutability": "mutable",
											"name": "currentOwnerAddress",
											"nameLocation": "1606:19:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1598:27:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3820,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1598:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3823,
											"mutability": "mutable",
											"name": "userWithdrawToken",
											"nameLocation": "1641:17:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1636:22:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3822,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1636:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3825,
											"mutability": "mutable",
											"name": "withdrawMonth",
											"nameLocation": "1673:13:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1668:18:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3824,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1668:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3827,
											"mutability": "mutable",
											"name": "stakeTime",
											"nameLocation": "1701:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1696:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3826,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1696:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3829,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1725:8:18",
											"nodeType": "VariableDeclaration",
											"scope": 3830,
											"src": "1720:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3828,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1720:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftDetails",
									"nameLocation": "1523:10:18",
									"nodeType": "StructDefinition",
									"scope": 4658,
									"src": "1516:224:18",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.AddressToken",
									"id": 3837,
									"members": [
										{
											"constant": false,
											"id": 3832,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "1785:15:18",
											"nodeType": "VariableDeclaration",
											"scope": 3837,
											"src": "1777:23:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3831,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1777:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3834,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1815:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3837,
											"src": "1810:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3833,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1810:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3836,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1837:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3837,
											"src": "1832:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3835,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1832:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressToken",
									"nameLocation": "1754:12:18",
									"nodeType": "StructDefinition",
									"scope": 4658,
									"src": "1747:103:18",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.Address_Token",
									"id": 3842,
									"members": [
										{
											"constant": false,
											"id": 3839,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "1895:15:18",
											"nodeType": "VariableDeclaration",
											"scope": 3842,
											"src": "1887:23:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3838,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1887:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3841,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1925:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3842,
											"src": "1920:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1920:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Address_Token",
									"nameLocation": "1863:13:18",
									"nodeType": "StructDefinition",
									"scope": 4658,
									"src": "1856:83:18",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.ListedLandNftTokenId",
									"id": 3850,
									"members": [
										{
											"constant": false,
											"id": 3845,
											"mutability": "mutable",
											"name": "listedData",
											"nameLocation": "1992:10:18",
											"nodeType": "VariableDeclaration",
											"scope": 3850,
											"src": "1983:19:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ListLand_$3815_storage_ptr",
												"typeString": "struct NFTMarketplace.ListLand"
											},
											"typeName": {
												"id": 3844,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3843,
													"name": "ListLand",
													"nameLocations": [
														"1983:8:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3815,
													"src": "1983:8:18"
												},
												"referencedDeclaration": 3815,
												"src": "1983:8:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ListLand_$3815_storage_ptr",
													"typeString": "struct NFTMarketplace.ListLand"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3847,
											"mutability": "mutable",
											"name": "listCount",
											"nameLocation": "2071:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3850,
											"src": "2066:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3846,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2066:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3849,
											"mutability": "mutable",
											"name": "uriData",
											"nameLocation": "2149:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3850,
											"src": "2142:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3848,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2142:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ListedLandNftTokenId",
									"nameLocation": "1952:20:18",
									"nodeType": "StructDefinition",
									"scope": 4658,
									"src": "1945:256:18",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8d02f792",
									"id": 3855,
									"mutability": "mutable",
									"name": "listCount",
									"nameLocation": "2252:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2211:50:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token)"
									},
									"typeName": {
										"id": 3854,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3851,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2219:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2211:33:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3853,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3852,
												"name": "Address_Token",
												"nameLocations": [
													"2230:13:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3842,
												"src": "2230:13:18"
											},
											"referencedDeclaration": 3842,
											"src": "2230:13:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Address_Token_$3842_storage_ptr",
												"typeString": "struct NFTMarketplace.Address_Token"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3480569",
									"id": 3859,
									"mutability": "mutable",
									"name": "userCount",
									"nameLocation": "2302:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2267:44:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3858,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3856,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2275:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2267:27:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3857,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2286:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e903868",
									"id": 3863,
									"mutability": "mutable",
									"name": "userListCount",
									"nameLocation": "2346:13:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2317:42:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3862,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3860,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2325:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2317:21:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3861,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2333:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73233ea6",
									"id": 3868,
									"mutability": "mutable",
									"name": "lockedNFT",
									"nameLocation": "2401:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2366:44:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails)"
									},
									"typeName": {
										"id": 3867,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3864,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2374:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2366:27:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3866,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3865,
												"name": "NftDetails",
												"nameLocations": [
													"2382:10:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3830,
												"src": "2382:10:18"
											},
											"referencedDeclaration": 3830,
											"src": "2382:10:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NftDetails_$3830_storage_ptr",
												"typeString": "struct NFTMarketplace.NftDetails"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d84c0fd3",
									"id": 3873,
									"mutability": "mutable",
									"name": "auctionListCount",
									"nameLocation": "2534:16:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2497:53:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressToken_$3837_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.AddressToken)"
									},
									"typeName": {
										"id": 3872,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3869,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2505:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2497:29:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressToken_$3837_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.AddressToken)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3871,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3870,
												"name": "AddressToken",
												"nameLocations": [
													"2513:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3837,
												"src": "2513:12:18"
											},
											"referencedDeclaration": 3837,
											"src": "2513:12:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressToken_$3837_storage_ptr",
												"typeString": "struct NFTMarketplace.AddressToken"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c456fc9e",
									"id": 3880,
									"mutability": "mutable",
									"name": "NftSupply",
									"nameLocation": "2710:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2633:86:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NftDetails))"
									},
									"typeName": {
										"id": 3879,
										"keyName": "mintAddress",
										"keyNameLocation": "2650:11:18",
										"keyType": {
											"id": 3874,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2642:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2633:69:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NftDetails))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3878,
											"keyName": "tokedId",
											"keyNameLocation": "2679:7:18",
											"keyType": {
												"id": 3875,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2674:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2665:36:18",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
												"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3877,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3876,
													"name": "NftDetails",
													"nameLocations": [
														"2690:10:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3830,
													"src": "2690:10:18"
												},
												"referencedDeclaration": 3830,
												"src": "2690:10:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftDetails_$3830_storage_ptr",
													"typeString": "struct NFTMarketplace.NftDetails"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c85e4d49",
									"id": 3886,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nameLocation": "2775:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2725:62:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 3885,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3881,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2734:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2725:42:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3884,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3882,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2754:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2745:21:18",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3883,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2761:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84fccd5e",
									"id": 3893,
									"mutability": "mutable",
									"name": "userLandListings",
									"nameLocation": "2849:16:18",
									"nodeType": "VariableDeclaration",
									"scope": 4658,
									"src": "2793:72:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand))"
									},
									"typeName": {
										"id": 3892,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3887,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2801:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2793:48:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3891,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3888,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2820:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2812:28:18",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
												"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3890,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3889,
													"name": "ListLand",
													"nameLocations": [
														"2831:8:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3815,
													"src": "2831:8:18"
												},
												"referencedDeclaration": 3815,
												"src": "2831:8:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ListLand_$3815_storage_ptr",
													"typeString": "struct NFTMarketplace.ListLand"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3931,
										"nodeType": "Block",
										"src": "3145:346:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3899,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3800,
																"src": "3163:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3900,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3802,
																"src": "3176:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3163:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520776169742e2e2e",
															"id": 3902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3185:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c",
																"typeString": "literal_string \"Please wait...\""
															},
															"value": "Please wait..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c",
																"typeString": "literal_string \"Please wait...\""
															}
														],
														"id": 3898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3155:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3155:47:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3904,
												"nodeType": "ExpressionStatement",
												"src": "3155:47:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3906,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3800,
																"src": "3220:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 3907,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3232:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3238:9:18",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3232:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3220:27:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d65204e6f742053746172742e2e2e",
															"id": 3910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3249:19:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e19132e2a5b3988a131326da472e0805afa005fd7e3d266a14f7a8d674f841d",
																"typeString": "literal_string \"Time Not Start...\""
															},
															"value": "Time Not Start..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e19132e2a5b3988a131326da472e0805afa005fd7e3d266a14f7a8d674f841d",
																"typeString": "literal_string \"Time Not Start...\""
															}
														],
														"id": 3905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3212:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:57:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3912,
												"nodeType": "ExpressionStatement",
												"src": "3212:57:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3914,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3802,
																"src": "3316:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 3915,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3326:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3332:9:18",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3326:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3316:25:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d6520456e642e",
															"id": 3918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3343:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23f1c66c38ab7839449758902632d5872a6a1d39e9064d0ff56a16c4fa72c960",
																"typeString": "literal_string \"Time End.\""
															},
															"value": "Time End."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23f1c66c38ab7839449758902632d5872a6a1d39e9064d0ff56a16c4fa72c960",
																"typeString": "literal_string \"Time End.\""
															}
														],
														"id": 3913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3308:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3308:47:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3920,
												"nodeType": "ExpressionStatement",
												"src": "3308:47:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3404:28:18",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3922,
																		"name": "lockedNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3868,
																		"src": "3405:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																		}
																	},
																	"id": 3924,
																	"indexExpression": {
																		"id": 3923,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3896,
																		"src": "3415:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3405:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																		"typeString": "struct NFTMarketplace.NftDetails storage ref"
																	}
																},
																"id": 3925,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3424:8:18",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3829,
																"src": "3405:27:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479205374616b6564",
															"id": 3927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3434:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3ce79e63d2a68db572db3a2ced6b344e5a9c11238f22961b122c12c58cc4a54",
																"typeString": "literal_string \"Already Staked\""
															},
															"value": "Already Staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3ce79e63d2a68db572db3a2ced6b344e5a9c11238f22961b122c12c58cc4a54",
																"typeString": "literal_string \"Already Staked\""
															}
														],
														"id": 3921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3396:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:55:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3929,
												"nodeType": "ExpressionStatement",
												"src": "3396:55:18"
											},
											{
												"id": 3930,
												"nodeType": "PlaceholderStatement",
												"src": "3483:1:18"
											}
										]
									},
									"documentation": {
										"id": 3894,
										"nodeType": "StructuredDocumentation",
										"src": "2878:224:18",
										"text": " @dev Ensures conditions to lock an NFT are met:\n - Vesting period must have started and not ended.\n - The NFT must not be already staked.\n @param tokenId The unique identifier of the NFT."
									},
									"id": 3932,
									"name": "lockConditions",
									"nameLocation": "3116:14:18",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3136:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3932,
												"src": "3131:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3895,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3131:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:14:18"
									},
									"src": "3107:384:18",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3966,
										"nodeType": "Block",
										"src": "3823:310:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3940,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3802,
																"src": "3841:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 3941,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3851:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3857:9:18",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3851:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3841:25:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520776169742e2e2e",
															"id": 3944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3868:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c",
																"typeString": "literal_string \"Please wait...\""
															},
															"value": "Please wait..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c",
																"typeString": "literal_string \"Please wait...\""
															}
														],
														"id": 3939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3833:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:52:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3946,
												"nodeType": "ExpressionStatement",
												"src": "3833:52:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3948,
																		"name": "lockedNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3868,
																		"src": "3934:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																		}
																	},
																	"id": 3950,
																	"indexExpression": {
																		"id": 3949,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3935,
																		"src": "3944:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3934:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																		"typeString": "struct NFTMarketplace.NftDetails storage ref"
																	}
																},
																"id": 3951,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3953:13:18",
																"memberName": "stakerAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3819,
																"src": "3934:32:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3952,
																"name": "stakerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3937,
																"src": "3970:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3934:49:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206f776e6572206f662074686973204e46542e",
															"id": 3954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3985:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51",
																"typeString": "literal_string \"You are not owner of this NFT.\""
															},
															"value": "You are not owner of this NFT."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51",
																"typeString": "literal_string \"You are not owner of this NFT.\""
															}
														],
														"id": 3947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3926:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:92:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3956,
												"nodeType": "ExpressionStatement",
												"src": "3926:92:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3958,
																	"name": "lockedNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3868,
																	"src": "4054:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																	}
																},
																"id": 3960,
																"indexExpression": {
																	"id": 3959,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3935,
																	"src": "4064:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4054:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																	"typeString": "struct NFTMarketplace.NftDetails storage ref"
																}
															},
															"id": 3961,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4073:8:18",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3829,
															"src": "4054:27:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f54204c4f434b45442e",
															"id": 3962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4083:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d04edaa3b90b3fe18a20db0afbdb02474ec3d1c966fc7ecdbed8d5b968338a42",
																"typeString": "literal_string \"NOT LOCKED.\""
															},
															"value": "NOT LOCKED."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d04edaa3b90b3fe18a20db0afbdb02474ec3d1c966fc7ecdbed8d5b968338a42",
																"typeString": "literal_string \"NOT LOCKED.\""
															}
														],
														"id": 3957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4046:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4046:51:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3964,
												"nodeType": "ExpressionStatement",
												"src": "4046:51:18"
											},
											{
												"id": 3965,
												"nodeType": "PlaceholderStatement",
												"src": "4125:1:18"
											}
										]
									},
									"documentation": {
										"id": 3933,
										"nodeType": "StructuredDocumentation",
										"src": "3496:259:18",
										"text": " @dev Ensures conditions to unlock an NFT are met:\n - Vesting period must not have ended.\n - Caller must be the staker of the NFT.\n - The NFT must be currently staked.\n @param tokenId The unique identifier of the NFT."
									},
									"id": 3967,
									"name": "unlockConditions",
									"nameLocation": "3769:16:18",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3791:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3967,
												"src": "3786:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3934,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3786:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3937,
												"mutability": "mutable",
												"name": "stakerAddress",
												"nameLocation": "3808:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3967,
												"src": "3800:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3785:37:18"
									},
									"src": "3760:373:18",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3988,
										"nodeType": "Block",
										"src": "4237:80:18",
										"statements": [
											{
												"expression": {
													"id": 3982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3980,
														"name": "landContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3794,
														"src": "4247:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1879",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3981,
														"name": "_landMinting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3972,
														"src": "4262:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1879",
															"typeString": "contract IERC721"
														}
													},
													"src": "4247:27:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1879",
														"typeString": "contract IERC721"
													}
												},
												"id": 3983,
												"nodeType": "ExpressionStatement",
												"src": "4247:27:18"
											},
											{
												"expression": {
													"id": 3986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3984,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3798,
														"src": "4284:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3985,
														"name": "_USDCAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3974,
														"src": "4298:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4284:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3987,
												"nodeType": "ExpressionStatement",
												"src": "4284:26:18"
											}
										]
									},
									"id": 3989,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3977,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3969,
													"src": "4223:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3978,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3976,
												"name": "Ownable",
												"nameLocations": [
													"4215:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4215:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "4215:21:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3969,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "4158:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3989,
												"src": "4150:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3972,
												"mutability": "mutable",
												"name": "_landMinting",
												"nameLocation": "4180:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3989,
												"src": "4172:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1879",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 3971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3970,
														"name": "IERC721",
														"nameLocations": [
															"4172:7:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1879,
														"src": "4172:7:18"
													},
													"referencedDeclaration": 1879,
													"src": "4172:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1879",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3974,
												"mutability": "mutable",
												"name": "_USDCAddress",
												"nameLocation": "4201:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3989,
												"src": "4193:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:65:18"
									},
									"returnParameters": {
										"id": 3979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4237:0:18"
									},
									"scope": 4658,
									"src": "4138:179:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4085,
										"nodeType": "Block",
										"src": "4421:631:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4439:49:18",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4001,
																			"name": "userLandListings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3893,
																			"src": "4440:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																			}
																		},
																		"id": 4003,
																		"indexExpression": {
																			"id": 4002,
																			"name": "_mintContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3991,
																			"src": "4457:13:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4440:31:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																		}
																	},
																	"id": 4005,
																	"indexExpression": {
																		"id": 4004,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3995,
																		"src": "4472:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4440:41:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																		"typeString": "struct NFTMarketplace.ListLand storage ref"
																	}
																},
																"id": 4006,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4482:6:18",
																"memberName": "listed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3814,
																"src": "4440:48:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479204c697374656420496e204d61726b6574706c61636521",
															"id": 4008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4490:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0",
																"typeString": "literal_string \"Already Listed In Marketplace!\""
															},
															"value": "Already Listed In Marketplace!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0",
																"typeString": "literal_string \"Already Listed In Marketplace!\""
															}
														],
														"id": 4000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4431:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:92:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4010,
												"nodeType": "ExpressionStatement",
												"src": "4431:92:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4541:44:18",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4012,
																			"name": "NftSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3880,
																			"src": "4542:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NftDetails storage ref))"
																			}
																		},
																		"id": 4014,
																		"indexExpression": {
																			"id": 4013,
																			"name": "_mintContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3991,
																			"src": "4552:13:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4542:24:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																		}
																	},
																	"id": 4016,
																	"indexExpression": {
																		"id": 4015,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3995,
																		"src": "4567:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4542:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																		"typeString": "struct NFTMarketplace.NftDetails storage ref"
																	}
																},
																"id": 4017,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4577:8:18",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3829,
																"src": "4542:43:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e465420616c7265616479207374616b6564",
															"id": 4019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4586:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02b0958c6fd549a6c6f0235031b40ad58506be9f00f4f8ac078a8d3bc2a53a75",
																"typeString": "literal_string \"NFT already staked\""
															},
															"value": "NFT already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02b0958c6fd549a6c6f0235031b40ad58506be9f00f4f8ac078a8d3bc2a53a75",
																"typeString": "literal_string \"NFT already staked\""
															}
														],
														"id": 4011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4533:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4533:74:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4021,
												"nodeType": "ExpressionStatement",
												"src": "4533:74:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4023,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3993,
																"src": "4625:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 4024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4635:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4625:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365204d757374204265204174204c65617374203020576569",
															"id": 4026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4638:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a",
																"typeString": "literal_string \"Price Must Be At Least 0 Wei\""
															},
															"value": "Price Must Be At Least 0 Wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a",
																"typeString": "literal_string \"Price Must Be At Least 0 Wei\""
															}
														],
														"id": 4022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4617:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:52:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4028,
												"nodeType": "ExpressionStatement",
												"src": "4617:52:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4029,
															"name": "nextLandListId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3791,
															"src": "4679:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2214_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4031,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4694:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2240,
														"src": "4679:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2214_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4679:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4033,
												"nodeType": "ExpressionStatement",
												"src": "4679:26:18"
											},
											{
												"expression": {
													"id": 4053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 4034,
																"name": "userLandListings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3893,
																"src": "4715:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																}
															},
															"id": 4037,
															"indexExpression": {
																"id": 4035,
																"name": "_mintContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3991,
																"src": "4732:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4715:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
															}
														},
														"id": 4038,
														"indexExpression": {
															"id": 4036,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3995,
															"src": "4747:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4715:41:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListLand_$3815_storage",
															"typeString": "struct NFTMarketplace.ListLand storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 4040,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4768:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4772:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4768:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 4044,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4788:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 4043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4780:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4780:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 4045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4780:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4046,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3995,
																"src": "4795:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 4047,
																		"name": "nextLandListId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3791,
																		"src": "4805:14:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$2214_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 4048,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4820:7:18",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2226,
																	"src": "4805:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2214_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 4049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4805:24:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4050,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3993,
																"src": "4831:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 4051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4839:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 4039,
															"name": "ListLand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3815,
															"src": "4759:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_ListLand_$3815_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.ListLand storage pointer)"
															}
														},
														"id": 4052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4759:85:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListLand_$3815_memory_ptr",
															"typeString": "struct NFTMarketplace.ListLand memory"
														}
													},
													"src": "4715:129:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListLand_$3815_storage",
														"typeString": "struct NFTMarketplace.ListLand storage ref"
													}
												},
												"id": 4054,
												"nodeType": "ExpressionStatement",
												"src": "4715:129:18"
											},
											{
												"expression": {
													"id": 4064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4055,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3855,
															"src": "4854:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
															}
														},
														"id": 4059,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4056,
																	"name": "nextLandListId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3791,
																	"src": "4864:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2214_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4057,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4879:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "4864:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2214_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4864:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4854:35:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
															"typeString": "struct NFTMarketplace.Address_Token storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4061,
																"name": "_mintContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3991,
																"src": "4906:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4062,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3995,
																"src": "4921:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4060,
															"name": "Address_Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3842,
															"src": "4892:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Address_Token_$3842_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.Address_Token storage pointer)"
															}
														},
														"id": 4063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4892:38:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Address_Token_$3842_memory_ptr",
															"typeString": "struct NFTMarketplace.Address_Token memory"
														}
													},
													"src": "4854:76:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
														"typeString": "struct NFTMarketplace.Address_Token storage ref"
													}
												},
												"id": 4065,
												"nodeType": "ExpressionStatement",
												"src": "4854:76:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4070,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4975:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4979:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4975:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4074,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4995:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4987:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4987:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4987:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4076,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3995,
															"src": "5002:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4067,
																	"name": "_mintContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3991,
																	"src": "4947:13:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4066,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "4940:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4940:21:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4962:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "4940:34:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4940:71:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4078,
												"nodeType": "ExpressionStatement",
												"src": "4940:71:18"
											},
											{
												"expression": {
													"id": 4083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5022:23:18",
													"subExpression": {
														"baseExpression": {
															"id": 4079,
															"name": "userCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3859,
															"src": "5022:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4082,
														"indexExpression": {
															"expression": {
																"id": 4080,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5032:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5036:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5032:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5022:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4084,
												"nodeType": "ExpressionStatement",
												"src": "5022:23:18"
											}
										]
									},
									"functionSelector": "ec4b65e7",
									"id": 4086,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3997,
												"name": "nonReentrant",
												"nameLocations": [
													"4408:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4408:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "4408:12:18"
										}
									],
									"name": "listLandNft",
									"nameLocation": "4332:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "_mintContract",
												"nameLocation": "4352:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 4086,
												"src": "4344:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3993,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "4375:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 4086,
												"src": "4367:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3995,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4391:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 4086,
												"src": "4383:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:57:18"
									},
									"returnParameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4421:0:18"
									},
									"scope": 4658,
									"src": "4323:729:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4239,
										"nodeType": "Block",
										"src": "5144:1096:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4096,
																			"name": "userLandListings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3893,
																			"src": "5162:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																			}
																		},
																		"id": 4101,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4097,
																					"name": "listCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3855,
																					"src": "5179:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																					}
																				},
																				"id": 4099,
																				"indexExpression": {
																					"id": 4098,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4088,
																					"src": "5189:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5179:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																					"typeString": "struct NFTMarketplace.Address_Token storage ref"
																				}
																			},
																			"id": 4100,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5200:15:18",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3839,
																			"src": "5179:36:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5162:54:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																		}
																	},
																	"id": 4106,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4102,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3855,
																				"src": "5217:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																				}
																			},
																			"id": 4104,
																			"indexExpression": {
																				"id": 4103,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4088,
																				"src": "5227:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5217:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																				"typeString": "struct NFTMarketplace.Address_Token storage ref"
																			}
																		},
																		"id": 4105,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5238:7:18",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3841,
																		"src": "5217:28:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5162:84:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																		"typeString": "struct NFTMarketplace.ListLand storage ref"
																	}
																},
																"id": 4107,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5247:5:18",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3804,
																"src": "5162:90:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 4108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5256:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5260:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5256:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5162:104:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e65722043616e27742042757920497473204e667473",
															"id": 4111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5268:26:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c986b099ac986c497fdbd62f86c74d9b9900815f0f1af5e1bf50fcbfb3806e52",
																"typeString": "literal_string \"Owner Can't Buy Its Nfts\""
															},
															"value": "Owner Can't Buy Its Nfts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c986b099ac986c497fdbd62f86c74d9b9900815f0f1af5e1bf50fcbfb3806e52",
																"typeString": "literal_string \"Owner Can't Buy Its Nfts\""
															}
														],
														"id": 4095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5154:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5154:141:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4113,
												"nodeType": "ExpressionStatement",
												"src": "5154:141:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4115,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4090,
																"src": "5313:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4116,
																			"name": "userLandListings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3893,
																			"src": "5322:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																			}
																		},
																		"id": 4121,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4117,
																					"name": "listCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3855,
																					"src": "5339:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																					}
																				},
																				"id": 4119,
																				"indexExpression": {
																					"id": 4118,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4088,
																					"src": "5349:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5339:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																					"typeString": "struct NFTMarketplace.Address_Token storage ref"
																				}
																			},
																			"id": 4120,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5360:15:18",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3839,
																			"src": "5339:36:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5322:54:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																		}
																	},
																	"id": 4126,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4122,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3855,
																				"src": "5377:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																				}
																			},
																			"id": 4124,
																			"indexExpression": {
																				"id": 4123,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4088,
																				"src": "5387:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5377:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																				"typeString": "struct NFTMarketplace.Address_Token storage ref"
																			}
																		},
																		"id": 4125,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5398:7:18",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3841,
																		"src": "5377:28:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5322:84:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																		"typeString": "struct NFTMarketplace.ListLand storage ref"
																	}
																},
																"id": 4127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5407:5:18",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3812,
																"src": "5322:90:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5313:99:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67207072696365",
															"id": 4129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5414:40:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																"typeString": "literal_string \"Not enough ether to cover asking price\""
															},
															"value": "Not enough ether to cover asking price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																"typeString": "literal_string \"Not enough ether to cover asking price\""
															}
														],
														"id": 4114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5305:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5305:150:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4131,
												"nodeType": "ExpressionStatement",
												"src": "5305:150:18"
											},
											{
												"assignments": [
													4133
												],
												"declarations": [
													{
														"constant": false,
														"id": 4133,
														"mutability": "mutable",
														"name": "sellerAmount",
														"nameLocation": "5470:12:18",
														"nodeType": "VariableDeclaration",
														"scope": 4239,
														"src": "5465:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4132,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5465:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4146,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 4134,
																"name": "userLandListings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3893,
																"src": "5485:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																}
															},
															"id": 4139,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4135,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3855,
																		"src": "5502:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																		}
																	},
																	"id": 4137,
																	"indexExpression": {
																		"id": 4136,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4088,
																		"src": "5512:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5502:20:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																		"typeString": "struct NFTMarketplace.Address_Token storage ref"
																	}
																},
																"id": 4138,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5523:15:18",
																"memberName": "contractAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3839,
																"src": "5502:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5485:54:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
															}
														},
														"id": 4144,
														"indexExpression": {
															"expression": {
																"baseExpression": {
																	"id": 4140,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "5540:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																	}
																},
																"id": 4142,
																"indexExpression": {
																	"id": 4141,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4088,
																	"src": "5550:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5540:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																	"typeString": "struct NFTMarketplace.Address_Token storage ref"
																}
															},
															"id": 4143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5561:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3841,
															"src": "5540:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5485:84:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListLand_$3815_storage",
															"typeString": "struct NFTMarketplace.ListLand storage ref"
														}
													},
													"id": 4145,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5570:5:18",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3812,
													"src": "5485:90:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5465:110:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4163,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4133,
															"src": "5694:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 4149,
																				"name": "userLandListings",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3893,
																				"src": "5593:16:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																				}
																			},
																			"id": 4154,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 4150,
																						"name": "listCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3855,
																						"src": "5610:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																							"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																						}
																					},
																					"id": 4152,
																					"indexExpression": {
																						"id": 4151,
																						"name": "listIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4088,
																						"src": "5620:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5610:20:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																						"typeString": "struct NFTMarketplace.Address_Token storage ref"
																					}
																				},
																				"id": 4153,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5631:15:18",
																				"memberName": "contractAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3839,
																				"src": "5610:36:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5593:54:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																			}
																		},
																		"id": 4159,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4155,
																					"name": "listCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3855,
																					"src": "5648:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																					}
																				},
																				"id": 4157,
																				"indexExpression": {
																					"id": 4156,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4088,
																					"src": "5658:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5648:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																					"typeString": "struct NFTMarketplace.Address_Token storage ref"
																				}
																			},
																			"id": 4158,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5669:7:18",
																			"memberName": "tokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3841,
																			"src": "5648:28:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5593:84:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																			"typeString": "struct NFTMarketplace.ListLand storage ref"
																		}
																	},
																	"id": 4160,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5678:5:18",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3804,
																	"src": "5593:90:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5585:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 4147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5585:8:18",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 4161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5585:99:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 4162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:8:18",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5585:108:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5585:122:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4165,
												"nodeType": "ExpressionStatement",
												"src": "5585:122:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4175,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5783:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5775:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5775:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5775:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4177,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5790:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5794:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5790:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4179,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "5802:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																	}
																},
																"id": 4181,
																"indexExpression": {
																	"id": 4180,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4088,
																	"src": "5812:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5802:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																	"typeString": "struct NFTMarketplace.Address_Token storage ref"
																}
															},
															"id": 4182,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5823:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3841,
															"src": "5802:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 4167,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3855,
																			"src": "5724:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																			}
																		},
																		"id": 4169,
																		"indexExpression": {
																			"id": 4168,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4088,
																			"src": "5734:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5724:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																			"typeString": "struct NFTMarketplace.Address_Token storage ref"
																		}
																	},
																	"id": 4170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5745:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3839,
																	"src": "5724:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4166,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "5717:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5717:44:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5762:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "5717:57:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5717:114:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4184,
												"nodeType": "ExpressionStatement",
												"src": "5717:114:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5904:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5908:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5904:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4194,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "5915:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																	}
																},
																"id": 4196,
																"indexExpression": {
																	"id": 4195,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4088,
																	"src": "5925:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5915:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																	"typeString": "struct NFTMarketplace.Address_Token storage ref"
																}
															},
															"id": 4197,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5936:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3841,
															"src": "5915:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4198,
																		"name": "userLandListings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3893,
																		"src": "5944:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																		}
																	},
																	"id": 4203,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4199,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3855,
																				"src": "5961:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																				}
																			},
																			"id": 4201,
																			"indexExpression": {
																				"id": 4200,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4088,
																				"src": "5971:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5961:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																				"typeString": "struct NFTMarketplace.Address_Token storage ref"
																			}
																		},
																		"id": 4202,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5982:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3839,
																		"src": "5961:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5944:54:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																	}
																},
																"id": 4208,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4204,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3855,
																			"src": "5999:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																			}
																		},
																		"id": 4206,
																		"indexExpression": {
																			"id": 4205,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4088,
																			"src": "6009:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5999:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																			"typeString": "struct NFTMarketplace.Address_Token storage ref"
																		}
																	},
																	"id": 4207,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6020:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3841,
																	"src": "5999:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5944:84:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																	"typeString": "struct NFTMarketplace.ListLand storage ref"
																}
															},
															"id": 4209,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6029:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3806,
															"src": "5944:91:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 4186,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3855,
																			"src": "5852:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																			}
																		},
																		"id": 4188,
																		"indexExpression": {
																			"id": 4187,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4088,
																			"src": "5862:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5852:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																			"typeString": "struct NFTMarketplace.Address_Token storage ref"
																		}
																	},
																	"id": 4189,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5873:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3839,
																	"src": "5852:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4185,
																"name": "IConnected",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3776,
																"src": "5841:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IConnected_$3776_$",
																	"typeString": "type(contract IConnected)"
																}
															},
															"id": 4190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5841:48:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConnected_$3776",
																"typeString": "contract IConnected"
															}
														},
														"id": 4191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5890:13:18",
														"memberName": "updateTokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3759,
														"src": "5841:62:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address) external"
														}
													},
													"id": 4210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5841:195:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4211,
												"nodeType": "ExpressionStatement",
												"src": "5841:195:18"
											},
											{
												"expression": {
													"id": 4225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4212,
																	"name": "userLandListings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3893,
																	"src": "6046:16:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																	}
																},
																"id": 4221,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4213,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3855,
																			"src": "6063:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																			}
																		},
																		"id": 4215,
																		"indexExpression": {
																			"id": 4214,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4088,
																			"src": "6073:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6063:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																			"typeString": "struct NFTMarketplace.Address_Token storage ref"
																		}
																	},
																	"id": 4216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6084:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3839,
																	"src": "6063:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6046:54:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																}
															},
															"id": 4222,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4217,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3855,
																		"src": "6101:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																		}
																	},
																	"id": 4219,
																	"indexExpression": {
																		"id": 4218,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4088,
																		"src": "6111:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6101:20:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																		"typeString": "struct NFTMarketplace.Address_Token storage ref"
																	}
																},
																"id": 4220,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6122:7:18",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3841,
																"src": "6101:28:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6046:84:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																"typeString": "struct NFTMarketplace.ListLand storage ref"
															}
														},
														"id": 4223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6131:6:18",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3814,
														"src": "6046:91:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6140:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6046:99:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4226,
												"nodeType": "ExpressionStatement",
												"src": "6046:99:18"
											},
											{
												"expression": {
													"id": 4232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6155:42:18",
													"subExpression": {
														"baseExpression": {
															"id": 4227,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3855,
															"src": "6162:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
															}
														},
														"id": 4231,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4228,
																	"name": "nextLandListId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3791,
																	"src": "6172:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2214_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4229,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6187:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "6172:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2214_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6172:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6162:35:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
															"typeString": "struct NFTMarketplace.Address_Token storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4233,
												"nodeType": "ExpressionStatement",
												"src": "6155:42:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4234,
															"name": "nextLandListId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3791,
															"src": "6207:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2214_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6222:9:18",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2268,
														"src": "6207:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2214_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6207:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4238,
												"nodeType": "ExpressionStatement",
												"src": "6207:26:18"
											}
										]
									},
									"functionSelector": "9d02e67c",
									"id": 4240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4092,
												"name": "nonReentrant",
												"nameLocations": [
													"5131:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "5131:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "5131:12:18"
										}
									],
									"name": "buyLandNft",
									"nameLocation": "5069:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4088,
												"mutability": "mutable",
												"name": "listIndex",
												"nameLocation": "5088:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 4240,
												"src": "5080:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5080:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4090,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5107:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4240,
												"src": "5099:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5099:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5079:34:18"
									},
									"returnParameters": {
										"id": 4094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5144:0:18"
									},
									"scope": 4658,
									"src": "5060:1180:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4258,
										"nodeType": "Block",
										"src": "6540:57:18",
										"statements": [
											{
												"expression": {
													"id": 4252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4250,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3800,
														"src": "6550:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4251,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4243,
														"src": "6562:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6550:17:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4253,
												"nodeType": "ExpressionStatement",
												"src": "6550:17:18"
											},
											{
												"expression": {
													"id": 4256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4254,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3802,
														"src": "6577:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4255,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4245,
														"src": "6587:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6577:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4257,
												"nodeType": "ExpressionStatement",
												"src": "6577:13:18"
											}
										]
									},
									"documentation": {
										"id": 4241,
										"nodeType": "StructuredDocumentation",
										"src": "6247:226:18",
										"text": " @dev Sets the vesting period.\n Configures the start and end times for the vesting period.\n @param start The start time of the vesting period.\n @param end The end time of the vesting period."
									},
									"functionSelector": "9158444b",
									"id": 4259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4247,
												"name": "onlyOwner",
												"nameLocations": [
													"6530:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6530:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "6530:9:18"
										}
									],
									"name": "stakingPeriod",
									"nameLocation": "6487:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4243,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "6506:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4259,
												"src": "6501:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4242,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6501:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4245,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "6518:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 4259,
												"src": "6513:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6513:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6500:22:18"
									},
									"returnParameters": {
										"id": 4249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6540:0:18"
									},
									"scope": 4658,
									"src": "6478:119:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4305,
										"nodeType": "Block",
										"src": "6864:224:18",
										"statements": [
											{
												"expression": {
													"id": 4288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4272,
															"name": "lockedNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3868,
															"src": "6874:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
															}
														},
														"id": 4274,
														"indexExpression": {
															"id": 4273,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4266,
															"src": "6884:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6874:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
															"typeString": "struct NFTMarketplace.NftDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4276,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4266,
																"src": "6906:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4277,
																"name": "stakerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4264,
																"src": "6915:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 4280,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6938:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 4279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6930:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6930:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 4281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6930:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 4282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6945:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 4283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6948:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 4284,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6951:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6957:9:18",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6951:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 4286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6968:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 4275,
															"name": "NftDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3830,
															"src": "6895:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NftDetails_$3830_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.NftDetails storage pointer)"
															}
														},
														"id": 4287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6895:78:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NftDetails_$3830_memory_ptr",
															"typeString": "struct NFTMarketplace.NftDetails memory"
														}
													},
													"src": "6874:99:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
														"typeString": "struct NFTMarketplace.NftDetails storage ref"
													}
												},
												"id": 4289,
												"nodeType": "ExpressionStatement",
												"src": "6874:99:18"
											},
											{
												"expression": {
													"id": 4291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6983:16:18",
													"subExpression": {
														"id": 4290,
														"name": "totalLockedNft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "6983:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4292,
												"nodeType": "ExpressionStatement",
												"src": "6983:16:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4297,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4264,
															"src": "7043:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4300,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7066:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7058:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4298,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7058:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7058:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4302,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4266,
															"src": "7073:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4294,
																	"name": "mintContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4262,
																	"src": "7016:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4293,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "7009:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7009:20:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7030:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "7009:33:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7009:72:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4304,
												"nodeType": "ExpressionStatement",
												"src": "7009:72:18"
											}
										]
									},
									"documentation": {
										"id": 4260,
										"nodeType": "StructuredDocumentation",
										"src": "6602:145:18",
										"text": " @dev Locks NFT.\n @param stakerAddress The address of the staker.\n @param tokenId The unique identifier of the NFT."
									},
									"functionSelector": "bb623d13",
									"id": 4306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4269,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4266,
													"src": "6851:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4268,
												"name": "lockConditions",
												"nameLocations": [
													"6836:14:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3932,
												"src": "6836:14:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "6836:23:18"
										}
									],
									"name": "stakeNFT",
									"nameLocation": "6761:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4262,
												"mutability": "mutable",
												"name": "mintContract",
												"nameLocation": "6778:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4306,
												"src": "6770:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6770:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4264,
												"mutability": "mutable",
												"name": "stakerAddress",
												"nameLocation": "6800:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 4306,
												"src": "6792:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6792:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6820:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 4306,
												"src": "6815:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6815:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6769:59:18"
									},
									"returnParameters": {
										"id": 4271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6864:0:18"
									},
									"scope": 4658,
									"src": "6752:336:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4342,
										"nodeType": "Block",
										"src": "7456:160:18",
										"statements": [
											{
												"expression": {
													"id": 4325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 4320,
																"name": "lockedNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3868,
																"src": "7466:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																}
															},
															"id": 4322,
															"indexExpression": {
																"id": 4321,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4313,
																"src": "7476:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7466:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																"typeString": "struct NFTMarketplace.NftDetails storage ref"
															}
														},
														"id": 4323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7485:8:18",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3829,
														"src": "7466:27:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7496:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7466:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4326,
												"nodeType": "ExpressionStatement",
												"src": "7466:35:18"
											},
											{
												"expression": {
													"id": 4328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "7511:16:18",
													"subExpression": {
														"id": 4327,
														"name": "totalLockedNft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "7511:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4329,
												"nodeType": "ExpressionStatement",
												"src": "7511:16:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4336,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7579:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7571:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4334,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7571:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7571:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4338,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4311,
															"src": "7586:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4313,
															"src": "7601:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4331,
																	"name": "mintContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4309,
																	"src": "7544:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4330,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "7537:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7537:20:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7558:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "7537:33:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7537:72:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4341,
												"nodeType": "ExpressionStatement",
												"src": "7537:72:18"
											}
										]
									},
									"documentation": {
										"id": 4307,
										"nodeType": "StructuredDocumentation",
										"src": "7094:229:18",
										"text": " @dev Unlocks NFT.\n Unlocks the specified Starlight NFT by transferring it back to the staker.\n @param stakerAddress The address of the staker.\n @param tokenId The unique identifier of the NFT."
									},
									"functionSelector": "699d503a",
									"id": 4343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4316,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4313,
													"src": "7432:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 4317,
													"name": "stakerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4311,
													"src": "7441:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4315,
												"name": "unlockConditions",
												"nameLocations": [
													"7415:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3967,
												"src": "7415:16:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "7415:40:18"
										}
									],
									"name": "unStakeNFT",
									"nameLocation": "7337:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4309,
												"mutability": "mutable",
												"name": "mintContract",
												"nameLocation": "7356:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4343,
												"src": "7348:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7348:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4311,
												"mutability": "mutable",
												"name": "stakerAddress",
												"nameLocation": "7379:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 4343,
												"src": "7371:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7371:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4313,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7399:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 4343,
												"src": "7394:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7394:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7347:60:18"
									},
									"returnParameters": {
										"id": 4319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7456:0:18"
									},
									"scope": 4658,
									"src": "7328:288:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4453,
										"nodeType": "Block",
										"src": "7964:835:18",
										"statements": [
											{
												"assignments": [
													4352,
													4354
												],
												"declarations": [
													{
														"constant": false,
														"id": 4352,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7980:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 4453,
														"src": "7975:11:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4351,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7975:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4354,
														"mutability": "mutable",
														"name": "month",
														"nameLocation": "7993:5:18",
														"nodeType": "VariableDeclaration",
														"scope": 4453,
														"src": "7988:10:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4353,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7988:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4358,
												"initialValue": {
													"arguments": [
														{
															"id": 4356,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4348,
															"src": "8023:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4355,
														"name": "user_Staking_Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4518,
														"src": "8002:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256)"
														}
													},
													"id": 4357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8002:29:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7974:57:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4360,
																"name": "month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4354,
																"src": "8049:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 4361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8058:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8049:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520776169742e2e2e",
															"id": 4363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8061:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c",
																"typeString": "literal_string \"Please wait...\""
															},
															"value": "Please wait..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eabd035513cf2a2ee4379aceb997cc7cb28201040b024af41eeee9378691378c",
																"typeString": "literal_string \"Please wait...\""
															}
														],
														"id": 4359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8041:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8041:37:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4365,
												"nodeType": "ExpressionStatement",
												"src": "8041:37:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4367,
																		"name": "lockedNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3868,
																		"src": "8096:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																		}
																	},
																	"id": 4369,
																	"indexExpression": {
																		"id": 4368,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4348,
																		"src": "8106:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8096:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																		"typeString": "struct NFTMarketplace.NftDetails storage ref"
																	}
																},
																"id": 4370,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8115:13:18",
																"memberName": "withdrawMonth",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3825,
																"src": "8096:32:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "3132",
																"id": 4371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8132:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "8096:38:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520636c61696d656420796f757220616c6c2072657761726473206163636f7264696e6720746f2074686973204e46542e2e2e",
															"id": 4373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8135:60:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dffa09705d7819d3bdf275be348ee3743884bb5e0f807132c27f7413a2c9bd9",
																"typeString": "literal_string \"You have claimed your all rewards according to this NFT...\""
															},
															"value": "You have claimed your all rewards according to this NFT..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dffa09705d7819d3bdf275be348ee3743884bb5e0f807132c27f7413a2c9bd9",
																"typeString": "literal_string \"You have claimed your all rewards according to this NFT...\""
															}
														],
														"id": 4366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8088:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8088:108:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4375,
												"nodeType": "ExpressionStatement",
												"src": "8088:108:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 4376,
																	"name": "lockedNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3868,
																	"src": "8210:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																	}
																},
																"id": 4378,
																"indexExpression": {
																	"id": 4377,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4348,
																	"src": "8220:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8210:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																	"typeString": "struct NFTMarketplace.NftDetails storage ref"
																}
															},
															"id": 4379,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8229:13:18",
															"memberName": "withdrawMonth",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3825,
															"src": "8210:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 4380,
															"name": "month",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4354,
															"src": "8245:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8210:40:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3132",
														"id": 4382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8253:2:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "8210:45:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4451,
													"nodeType": "Block",
													"src": "8477:316:18",
													"statements": [
														{
															"assignments": [
																4414
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4414,
																	"mutability": "mutable",
																	"name": "remainingMonth",
																	"nameLocation": "8496:14:18",
																	"nodeType": "VariableDeclaration",
																	"scope": 4451,
																	"src": "8491:19:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4413,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "8491:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4422,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3132",
																			"id": 4415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8514:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12_by_1",
																				"typeString": "int_const 12"
																			},
																			"value": "12"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4416,
																					"name": "lockedNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3868,
																					"src": "8519:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																					}
																				},
																				"id": 4418,
																				"indexExpression": {
																					"id": 4417,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4348,
																					"src": "8529:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8519:18:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																					"typeString": "struct NFTMarketplace.NftDetails storage ref"
																				}
																			},
																			"id": 4419,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8538:13:18",
																			"memberName": "withdrawMonth",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3825,
																			"src": "8519:32:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8514:37:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8513:39:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8491:61:18"
														},
														{
															"expression": {
																"id": 4428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 4423,
																			"name": "lockedNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3868,
																			"src": "8566:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																			}
																		},
																		"id": 4425,
																		"indexExpression": {
																			"id": 4424,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4348,
																			"src": "8576:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8566:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																			"typeString": "struct NFTMarketplace.NftDetails storage ref"
																		}
																	},
																	"id": 4426,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8585:13:18",
																	"memberName": "withdrawMonth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3825,
																	"src": "8566:32:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 4427,
																	"name": "remainingMonth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4414,
																	"src": "8602:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8566:50:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4429,
															"nodeType": "ExpressionStatement",
															"src": "8566:50:18"
														},
														{
															"expression": {
																"id": 4438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 4430,
																			"name": "lockedNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3868,
																			"src": "8630:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																			}
																		},
																		"id": 4432,
																		"indexExpression": {
																			"id": 4431,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4348,
																			"src": "8640:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8630:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																			"typeString": "struct NFTMarketplace.NftDetails storage ref"
																		}
																	},
																	"id": 4433,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8649:17:18",
																	"memberName": "userWithdrawToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3823,
																	"src": "8630:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4434,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4352,
																				"src": "8671:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 4435,
																				"name": "remainingMonth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4414,
																				"src": "8680:14:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8671:23:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8670:25:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8630:65:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4439,
															"nodeType": "ExpressionStatement",
															"src": "8630:65:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 4444,
																		"name": "userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4346,
																		"src": "8743:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 4445,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4352,
																					"src": "8757:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 4446,
																					"name": "remainingMonth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4414,
																					"src": "8766:14:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8757:23:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 4448,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8756:25:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 4441,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "8716:12:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 4440,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "8709:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$427_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 4442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8709:20:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 4443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8730:12:18",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "8709:33:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$427_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 4449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8709:73:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4450,
															"nodeType": "ExpressionStatement",
															"src": "8709:73:18"
														}
													]
												},
												"id": 4452,
												"nodeType": "IfStatement",
												"src": "8206:587:18",
												"trueBody": {
													"id": 4412,
													"nodeType": "Block",
													"src": "8257:214:18",
													"statements": [
														{
															"expression": {
																"id": 4389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 4384,
																			"name": "lockedNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3868,
																			"src": "8271:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																			}
																		},
																		"id": 4386,
																		"indexExpression": {
																			"id": 4385,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4348,
																			"src": "8281:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8271:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																			"typeString": "struct NFTMarketplace.NftDetails storage ref"
																		}
																	},
																	"id": 4387,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8290:13:18",
																	"memberName": "withdrawMonth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3825,
																	"src": "8271:32:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 4388,
																	"name": "month",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4354,
																	"src": "8307:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8271:41:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4390,
															"nodeType": "ExpressionStatement",
															"src": "8271:41:18"
														},
														{
															"expression": {
																"id": 4399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 4391,
																			"name": "lockedNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3868,
																			"src": "8326:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																			}
																		},
																		"id": 4393,
																		"indexExpression": {
																			"id": 4392,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4348,
																			"src": "8336:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8326:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																			"typeString": "struct NFTMarketplace.NftDetails storage ref"
																		}
																	},
																	"id": 4394,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8345:17:18",
																	"memberName": "userWithdrawToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3823,
																	"src": "8326:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4395,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4352,
																				"src": "8367:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 4396,
																				"name": "month",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4354,
																				"src": "8376:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8367:14:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4398,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8366:16:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8326:56:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4400,
															"nodeType": "ExpressionStatement",
															"src": "8326:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 4405,
																		"name": "userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4346,
																		"src": "8430:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 4406,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4352,
																					"src": "8444:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 4407,
																					"name": "month",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4354,
																					"src": "8453:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8444:14:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 4409,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8443:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 4402,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "8403:12:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 4401,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "8396:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$427_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 4403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8396:20:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 4404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8417:12:18",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "8396:33:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$427_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 4410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8396:64:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4411,
															"nodeType": "ExpressionStatement",
															"src": "8396:64:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4344,
										"nodeType": "StructuredDocumentation",
										"src": "7619:277:18",
										"text": " @dev Allows users to claim their earned tokens based on the locked NFT.\n Users can claim their rewards based on the category of their locked NFT.\n @param userAddress The address of the user.\n @param tokenId The unique identifier of the NFT."
									},
									"functionSelector": "19f34bf3",
									"id": 4454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userClaimFT",
									"nameLocation": "7910:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4346,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "7930:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 4454,
												"src": "7922:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7922:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4348,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7948:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 4454,
												"src": "7943:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7943:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7921:35:18"
									},
									"returnParameters": {
										"id": 4350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7964:0:18"
									},
									"scope": 4658,
									"src": "7901:898:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4517,
										"nodeType": "Block",
										"src": "9246:334:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 4464,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "9262:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 4465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9268:9:18",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "9262:15:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 4466,
																				"name": "endTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3802,
																				"src": "9280:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9262:25:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4468,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9261:27:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 4469,
																						"name": "lockedNFT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3868,
																						"src": "9292:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																							"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																						}
																					},
																					"id": 4471,
																					"indexExpression": {
																						"id": 4470,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4457,
																						"src": "9302:7:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9292:18:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																						"typeString": "struct NFTMarketplace.NftDetails storage ref"
																					}
																				},
																				"id": 4472,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9311:13:18",
																				"memberName": "withdrawMonth",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3825,
																				"src": "9292:32:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 4473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9327:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "9292:37:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4475,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9291:39:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9261:69:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4477,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9260:71:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3630",
														"id": 4478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9335:2:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"src": "9260:77:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4515,
													"nodeType": "Block",
													"src": "9537:37:18",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 4511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9559:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 4512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9561:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9558:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 4463,
															"id": 4514,
															"nodeType": "Return",
															"src": "9551:12:18"
														}
													]
												},
												"id": 4516,
												"nodeType": "IfStatement",
												"src": "9256:318:18",
												"trueBody": {
													"id": 4510,
													"nodeType": "Block",
													"src": "9339:192:18",
													"statements": [
														{
															"assignments": [
																4481
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4481,
																	"mutability": "mutable",
																	"name": "months",
																	"nameLocation": "9358:6:18",
																	"nodeType": "VariableDeclaration",
																	"scope": 4510,
																	"src": "9353:11:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4480,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "9353:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4498,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4485,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 4482,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "9369:5:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 4483,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9375:9:18",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "9369:15:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 4484,
																							"name": "endTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3802,
																							"src": "9387:7:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9369:25:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4486,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9368:27:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 4487,
																									"name": "lockedNFT",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3868,
																									"src": "9399:9:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$3830_storage_$",
																										"typeString": "mapping(uint256 => struct NFTMarketplace.NftDetails storage ref)"
																									}
																								},
																								"id": 4489,
																								"indexExpression": {
																									"id": 4488,
																									"name": "tokenId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4457,
																									"src": "9409:7:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9399:18:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_NftDetails_$3830_storage",
																									"typeString": "struct NFTMarketplace.NftDetails storage ref"
																								}
																							},
																							"id": 4490,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9418:13:18",
																							"memberName": "withdrawMonth",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3825,
																							"src": "9399:32:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "3630",
																							"id": 4491,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9434:2:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_60_by_1",
																								"typeString": "int_const 60"
																							},
																							"value": "60"
																						},
																						"src": "9399:37:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4493,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9398:39:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9368:69:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4495,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9367:71:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 4496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9441:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "9367:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9353:90:18"
														},
														{
															"assignments": [
																4500
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4500,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "9462:6:18",
																	"nodeType": "VariableDeclaration",
																	"scope": 4510,
																	"src": "9457:11:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4499,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "9457:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4505,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 4501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9472:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4502,
																			"name": "months",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4481,
																			"src": "9476:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9472:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4504,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9471:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9457:26:18"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 4506,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4500,
																		"src": "9505:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4507,
																		"name": "months",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4481,
																		"src": "9513:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9504:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4463,
															"id": 4509,
															"nodeType": "Return",
															"src": "9497:23:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4455,
										"nodeType": "StructuredDocumentation",
										"src": "8808:342:18",
										"text": " @dev Calculates user rewards based on the time and category of the NFT.\n Calculates the rewards and the number of months the user can claim.\n @param tokenId The unique identifier of the NFT.\n @return rewards The calculated rewards.\n @return month The number of months the user can claim rewards for."
									},
									"functionSelector": "f0441f95",
									"id": 4518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "user_Staking_Rewards",
									"nameLocation": "9164:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4457,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9190:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "9185:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9185:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9184:14:18"
									},
									"returnParameters": {
										"id": 4463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4460,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "9225:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "9220:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9220:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4462,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "9239:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "9234:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9234:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9219:26:18"
									},
									"scope": 4658,
									"src": "9155:425:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4539,
										"nodeType": "Block",
										"src": "9670:98:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4531,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4520,
															"src": "9719:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4534,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9741:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9733:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9733:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9733:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4536,
															"name": "tokenDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4522,
															"src": "9748:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4528,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3798,
																	"src": "9688:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4527,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "9681:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$427_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:20:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														"id": 4530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9702:16:18",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "9681:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$427_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:80:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4538,
												"nodeType": "ExpressionStatement",
												"src": "9681:80:18"
											}
										]
									},
									"functionSelector": "b8237ab7",
									"id": 4540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4525,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4524,
												"name": "onlyOwner",
												"nameLocations": [
													"9661:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9661:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "9661:9:18"
										}
									],
									"name": "adminDepositToken",
									"nameLocation": "9595:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4520,
												"mutability": "mutable",
												"name": "adminAddress",
												"nameLocation": "9621:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4540,
												"src": "9613:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9613:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4522,
												"mutability": "mutable",
												"name": "tokenDeposit",
												"nameLocation": "9640:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4540,
												"src": "9635:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4521,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9635:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9612:41:18"
									},
									"returnParameters": {
										"id": 4526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9670:0:18"
									},
									"scope": 4658,
									"src": "9586:182:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4561,
										"nodeType": "Block",
										"src": "9859:99:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4555,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9917:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4658",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9909:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4553,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9909:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9909:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4557,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4542,
															"src": "9924:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4558,
															"name": "tokenDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4544,
															"src": "9938:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4550,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3798,
																	"src": "9877:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4549,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "9870:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$427_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9870:20:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														"id": 4552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9891:16:18",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "9870:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$427_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9870:81:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4560,
												"nodeType": "ExpressionStatement",
												"src": "9870:81:18"
											}
										]
									},
									"functionSelector": "ba41c844",
									"id": 4562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4546,
												"name": "onlyOwner",
												"nameLocations": [
													"9850:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9850:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "9850:9:18"
										}
									],
									"name": "adminWithdrawToken",
									"nameLocation": "9783:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4542,
												"mutability": "mutable",
												"name": "adminAddress",
												"nameLocation": "9810:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4562,
												"src": "9802:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9802:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4544,
												"mutability": "mutable",
												"name": "tokenDeposit",
												"nameLocation": "9829:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4562,
												"src": "9824:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9824:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9801:41:18"
									},
									"returnParameters": {
										"id": 4548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9859:0:18"
									},
									"scope": 4658,
									"src": "9774:184:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4656,
										"nodeType": "Block",
										"src": "10053:625:18",
										"statements": [
											{
												"assignments": [
													4570
												],
												"declarations": [
													{
														"constant": false,
														"id": 4570,
														"mutability": "mutable",
														"name": "listNft",
														"nameLocation": "10068:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 4656,
														"src": "10063:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4569,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10063:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4571,
															"name": "nextLandListId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3791,
															"src": "10078:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2214_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4572,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10093:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2226,
														"src": "10078:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2214_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 4573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:24:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10063:39:18"
											},
											{
												"assignments": [
													4579
												],
												"declarations": [
													{
														"constant": false,
														"id": 4579,
														"mutability": "mutable",
														"name": "listedNFT",
														"nameLocation": "10142:9:18",
														"nodeType": "VariableDeclaration",
														"scope": 4656,
														"src": "10112:39:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarketplace.ListedLandNftTokenId[]"
														},
														"typeName": {
															"baseType": {
																"id": 4577,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4576,
																	"name": "ListedLandNftTokenId",
																	"nameLocations": [
																		"10112:20:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3850,
																	"src": "10112:20:18"
																},
																"referencedDeclaration": 3850,
																"src": "10112:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedLandNftTokenId_$3850_storage_ptr",
																	"typeString": "struct NFTMarketplace.ListedLandNftTokenId"
																}
															},
															"id": 4578,
															"nodeType": "ArrayTypeName",
															"src": "10112:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.ListedLandNftTokenId[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4586,
												"initialValue": {
													"arguments": [
														{
															"id": 4584,
															"name": "listNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4570,
															"src": "10181:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10154:26:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarketplace.ListedLandNftTokenId memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 4581,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4580,
																	"name": "ListedLandNftTokenId",
																	"nameLocations": [
																		"10158:20:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3850,
																	"src": "10158:20:18"
																},
																"referencedDeclaration": 3850,
																"src": "10158:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedLandNftTokenId_$3850_storage_ptr",
																	"typeString": "struct NFTMarketplace.ListedLandNftTokenId"
																}
															},
															"id": 4582,
															"nodeType": "ArrayTypeName",
															"src": "10158:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.ListedLandNftTokenId[]"
															}
														}
													},
													"id": 4585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10154:35:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10112:77:18"
											},
											{
												"assignments": [
													4588
												],
												"declarations": [
													{
														"constant": false,
														"id": 4588,
														"mutability": "mutable",
														"name": "listedIndex",
														"nameLocation": "10204:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 4656,
														"src": "10199:16:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4587,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10199:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4590,
												"initialValue": {
													"hexValue": "30",
													"id": 4589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10218:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10199:20:18"
											},
											{
												"body": {
													"id": 4651,
													"nodeType": "Block",
													"src": "10283:361:18",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4603,
																			"name": "userLandListings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3893,
																			"src": "10301:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																			}
																		},
																		"id": 4608,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4604,
																					"name": "listCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3855,
																					"src": "10318:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																					}
																				},
																				"id": 4606,
																				"indexExpression": {
																					"id": 4605,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4592,
																					"src": "10328:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10318:12:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																					"typeString": "struct NFTMarketplace.Address_Token storage ref"
																				}
																			},
																			"id": 4607,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10331:15:18",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3839,
																			"src": "10318:28:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10301:46:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																		}
																	},
																	"id": 4613,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4609,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3855,
																				"src": "10348:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																				}
																			},
																			"id": 4611,
																			"indexExpression": {
																				"id": 4610,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4592,
																				"src": "10358:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10348:12:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																				"typeString": "struct NFTMarketplace.Address_Token storage ref"
																			}
																		},
																		"id": 4612,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10361:7:18",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3841,
																		"src": "10348:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10301:68:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																		"typeString": "struct NFTMarketplace.ListLand storage ref"
																	}
																},
																"id": 4614,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10370:6:18",
																"memberName": "listed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3814,
																"src": "10301:75:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4650,
															"nodeType": "IfStatement",
															"src": "10297:337:18",
															"trueBody": {
																"id": 4649,
																"nodeType": "Block",
																"src": "10378:256:18",
																"statements": [
																	{
																		"expression": {
																			"id": 4644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 4615,
																					"name": "listedNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4579,
																					"src": "10396:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory[] memory"
																					}
																				},
																				"id": 4617,
																				"indexExpression": {
																					"id": 4616,
																					"name": "listedIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4588,
																					"src": "10406:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10396:22:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ListedLandNftTokenId_$3850_memory_ptr",
																					"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"baseExpression": {
																								"id": 4619,
																								"name": "userLandListings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3893,
																								"src": "10442:16:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$_$",
																									"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.ListLand storage ref))"
																								}
																							},
																							"id": 4624,
																							"indexExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 4620,
																										"name": "listCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3855,
																										"src": "10459:9:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																											"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																										}
																									},
																									"id": 4622,
																									"indexExpression": {
																										"id": 4621,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4592,
																										"src": "10469:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10459:12:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																										"typeString": "struct NFTMarketplace.Address_Token storage ref"
																									}
																								},
																								"id": 4623,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10472:15:18",
																								"memberName": "contractAddress",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3839,
																								"src": "10459:28:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "10442:46:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListLand_$3815_storage_$",
																								"typeString": "mapping(uint256 => struct NFTMarketplace.ListLand storage ref)"
																							}
																						},
																						"id": 4629,
																						"indexExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 4625,
																									"name": "listCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3855,
																									"src": "10489:9:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																										"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																									}
																								},
																								"id": 4627,
																								"indexExpression": {
																									"id": 4626,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4592,
																									"src": "10499:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10489:12:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																									"typeString": "struct NFTMarketplace.Address_Token storage ref"
																								}
																							},
																							"id": 4628,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10502:7:18",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3841,
																							"src": "10489:20:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10442:68:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																							"typeString": "struct NFTMarketplace.ListLand storage ref"
																						}
																					},
																					{
																						"id": 4630,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4592,
																						"src": "10511:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 4638,
																										"name": "listCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3855,
																										"src": "10566:9:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																											"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																										}
																									},
																									"id": 4640,
																									"indexExpression": {
																										"id": 4639,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4592,
																										"src": "10576:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10566:12:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																										"typeString": "struct NFTMarketplace.Address_Token storage ref"
																									}
																								},
																								"id": 4641,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10579:7:18",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3841,
																								"src": "10566:20:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"baseExpression": {
																												"id": 4632,
																												"name": "listCount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3855,
																												"src": "10524:9:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Address_Token_$3842_storage_$",
																													"typeString": "mapping(uint256 => struct NFTMarketplace.Address_Token storage ref)"
																												}
																											},
																											"id": 4634,
																											"indexExpression": {
																												"id": 4633,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4592,
																												"src": "10534:1:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "10524:12:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Address_Token_$3842_storage",
																												"typeString": "struct NFTMarketplace.Address_Token storage ref"
																											}
																										},
																										"id": 4635,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "10537:15:18",
																										"memberName": "contractAddress",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3839,
																										"src": "10524:28:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 4631,
																									"name": "IConnected",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3776,
																									"src": "10513:10:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IConnected_$3776_$",
																										"typeString": "type(contract IConnected)"
																									}
																								},
																								"id": 4636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10513:40:18",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IConnected_$3776",
																									"typeString": "contract IConnected"
																								}
																							},
																							"id": 4637,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10554:11:18",
																							"memberName": "getTokenUri",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3775,
																							"src": "10513:52:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) view external returns (string memory)"
																							}
																						},
																						"id": 4642,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10513:74:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_struct$_ListLand_$3815_storage",
																							"typeString": "struct NFTMarketplace.ListLand storage ref"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 4618,
																					"name": "ListedLandNftTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3850,
																					"src": "10421:20:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_ListedLandNftTokenId_$3850_storage_ptr_$",
																						"typeString": "type(struct NFTMarketplace.ListedLandNftTokenId storage pointer)"
																					}
																				},
																				"id": 4643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10421:167:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ListedLandNftTokenId_$3850_memory_ptr",
																					"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory"
																				}
																			},
																			"src": "10396:192:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ListedLandNftTokenId_$3850_memory_ptr",
																				"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory"
																			}
																		},
																		"id": 4645,
																		"nodeType": "ExpressionStatement",
																		"src": "10396:192:18"
																	},
																	{
																		"expression": {
																			"id": 4647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "10606:13:18",
																			"subExpression": {
																				"id": 4646,
																				"name": "listedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4588,
																				"src": "10606:11:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4648,
																		"nodeType": "ExpressionStatement",
																		"src": "10606:13:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4595,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4592,
														"src": "10246:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4596,
																"name": "nextLandListId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3791,
																"src": "10251:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$2214_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10266:7:18",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2226,
															"src": "10251:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2214_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2214_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10251:24:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10246:29:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4652,
												"initializationExpression": {
													"assignments": [
														4592
													],
													"declarations": [
														{
															"constant": false,
															"id": 4592,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10239:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 4652,
															"src": "10234:6:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4591,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10234:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4594,
													"initialValue": {
														"hexValue": "31",
														"id": 4593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10243:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10234:10:18"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10278:3:18",
														"subExpression": {
															"id": 4600,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4592,
															"src": "10278:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4602,
													"nodeType": "ExpressionStatement",
													"src": "10278:3:18"
												},
												"nodeType": "ForStatement",
												"src": "10229:415:18"
											},
											{
												"expression": {
													"components": [
														{
															"id": 4653,
															"name": "listedNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4579,
															"src": "10661:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory[] memory"
															}
														}
													],
													"id": 4654,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10660:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.ListedLandNftTokenId memory[] memory"
													}
												},
												"functionReturnParameters": 4568,
												"id": 4655,
												"nodeType": "Return",
												"src": "10653:18:18"
											}
										]
									},
									"functionSelector": "9677ca0b",
									"id": 4657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllLandListedNfts",
									"nameLocation": "9978:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9998:2:18"
									},
									"returnParameters": {
										"id": 4568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4657,
												"src": "10022:29:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarketplace.ListedLandNftTokenId[]"
												},
												"typeName": {
													"baseType": {
														"id": 4565,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4564,
															"name": "ListedLandNftTokenId",
															"nameLocations": [
																"10022:20:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3850,
															"src": "10022:20:18"
														},
														"referencedDeclaration": 3850,
														"src": "10022:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedLandNftTokenId_$3850_storage_ptr",
															"typeString": "struct NFTMarketplace.ListedLandNftTokenId"
														}
													},
													"id": 4566,
													"nodeType": "ArrayTypeName",
													"src": "10022:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedLandNftTokenId_$3850_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarketplace.ListedLandNftTokenId[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10021:31:18"
									},
									"scope": 4658,
									"src": "9969:709:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4659,
							"src": "953:9728:18",
							"usedErrors": [
								13,
								18,
								480,
								1933,
								1938,
								1941
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:10649:18"
				},
				"id": 18
			}
		}
	}
}